%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 15.0.0%%For: (2016) ()%%Title: (baseupdate copy.ai)%%CreationDate: 21/05/2019 2:55 PM%%Canvassize: 16383%%BoundingBox: 102 -6783 3369 -74%%HiResBoundingBox: 102.3955 -6782.1797 3368.3828 -74.3799%%DocumentProcessColors: Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 1729.5 -3458.5 1729.5 -3458.5%AI3_TileBox: 1441.1348 -3814.2695 2017.1348 -3080.27%AI3_DocumentPreview: None%AI5_ArtSize: 3458.2695 6916.54%AI5_RulerUnits: 1%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -1882 5417 0.25 1812 855 18 0 0 66 150 0 0%AI5_OpenViewLayers: 7%%PageOrigin:1423 -3854%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 64 128 8%%BeginData: 8502 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD0BFFA8FFA8FFA8FFA8FD19FFA8FFA8FFA8FFA8FFA8FD14FFA8FF%A8FFA8FFFFFFA8FFFFAFA8FD13FFA8FFA8FFFFFFA8FD05FFA8FFA8FD10FF%A8FD05FFA8FD07FFA8FD11FFA8FD05FFA8FFA8FD07FFA8FD0EFFA8FD06FF%A8A8FD09FFA8FD0DFFA8FD07FFA8FD09FFA8FD0CFFA9FD13FFA8FD1FFFA9%FD0AFFA8FD15FFA8FD09FFA8FFA8FD13FFA8FD08FFA8FFA8FD15FFA8FD07%FFA8FD17FFA8FD06FFA8FFA8FFA8FD14FFA8A8FD05FFA8FFA8FFA8FD15FF%A8FD04FFA8FFFFFFA9FD09FFA8FD1DFFA8FFA8FFA8FD1AFFA8FFA8FFA8FF%A8FD09FFA8FD0FFFA8FFFFFFA8FFA8FD09FFA8FD04FFA8FD09FFA8FD07FF%A8FD09FFA8FFFFFFA8FD1BFFA8FFFFA8FD09FFA8FD09FFA8FD08FFA8FFFF%A8FD09FFA8FD09FFA8FD09FFA8FD0AFFA8FD13FFA8FD0BFFA8FD0BFFA8FD%0AFFA8FD07FFA8FD0BFFA8FD05FFA8FFAFFFA8FFA8FD08FFA9FD0BFFA9A8%FFFFFFA8FFA8FFA8FD16FFA8FD04FFA8A8FFA8FD0BFFA8FD0BFFA8FD05FF%A8FD04FFA8FD07FFA8FD0BFFA8FD05FFA8A8A8FFA8FFA8FD07FFA8FD0DFF%A8FD05FFA8FFA8FD16FFA8FD07FFA8FD0BFFA8FD0BFFA8FD0AFFA8FD07FF%A8FD0BFFA8FD09FFAFFFA8FD09FFAFFD09FFA8FD09FFA8FD0AFFA8FD13FF%A8FFFFFFA8FD1BFFA8FFFFA8FD09FFA8FD09FFA8FD07FFA8A8FFFFFFA8FD%08FFA8FD07FFA8FFA8FD08FFA8A8FFFFA8FD09FFA8FD11FFA8FFFFFFA8FD%0BFFA8FFFFFFA8FD0BFFA8FFFFFFA8FD0AFFA8A8A8FFA8FD0BFFA8FD05FF%A8FD0BFFA8FFA8FD0BFFA8FD1EFFA8FD0BFFA8FD1AFFA8FFFFFFA8FD14FF%A8FFFF7DA8A8FFFFA8FFFFA8A9A8FD12FFA8A8FD06FFA8FFFFFFA8FD15FF%A8FFA8FD07FFA8FD1CFFA8FFA8FD13FFA8FFFFFF7DA8A8FFFFFFA8FD15FF%A8FD0AFFA8FD13FFA8FD0BFFAFFD09FFA8FFAFFD07FFAFFD0CFFA8FD07FF%A8FFA8FD05FFA8FFA8FD04FFFD04A8FD05FFA8FFA8FD05FFFD04A8FD04FF%A8FD12FFA8FD05FFA8FD05FFA8FD07FFA8AFA8FD09FFA8FD05FFA9FD05FF%A8FD14FFA8FFA8FFA8FFA8FFA8FFA8FD08FFA87DA8A8FD09FFA8FFA8FFA8%FFA8FFA8FFAFFD18FFA8A9A8FD0EFFAFA8FD0FFFA8FD1AFFA8AFA8FFA8FF%A8FFA8FFA8FD08FFAF7DA8A8FD09FFA8A8A8FFA8FFA8FFA8A8A8FD14FFA8%FD09FFA8FFA8FD07FFA8A8A8FD09FFA8FD0BFFA8FD10FFA8A8A8FFFFFFA8%A8A8FD07FFA8FD06FFA97DA8A8FD05FFA8A8A8FD04FFA9A8A8FD06FFA8A8%A8FD0CFFA8FD07FFA8FD09FFA8FD0DFFA8FD07FFA8FD0BFFA8FD0AFFA8FD%09FFA8FD09FFA8FD0BFFA8FD15FFA8FD47FFA8FFA8A8A8FD13FFA8FD07FF%A8FFA8FFA8FD34FFA8FD09FFA8FD1CFFA8FFA8FD07FFA8FFA8A9A8FD0BFF%A8FD05FFA8FD09FFA8FFA8A8A8FD0BFFA8FD04FFA8FD09FFA8FFA8FFFFFF%A8FD0FFFA8FD09FFA8FD07FFA8FD09FFA8FFFFA8FD09FFA8FD07FFA8FD09%FFA8FFFFFFA8FD09FFA8FD09FFA8FD14FFA8FD13FFA8FFFFFFA8FD1BFFA8%FFFFA8FD08FFA8FD0AFFA8FD08FFA8A8FFA8FD08FFA8A8FD09FFA8A8FD08%FFA8FD0AFFA9FD0BFFA8FD05FFA8FFA8FD0BFFA8FD0BFFA8FD05FFA8FD04%FFA8FD07FFA8FD0CFFA9FD04FFA8FFA8FFA8FFA8FD08FFA9FD0BFFA9A8FF%FFFFA8FFA8FFA8FD16FFA8FD05FFA8FFA8FD0BFFA8FD0BFFA8FD0AFFA8FD%07FFA8FD0BFFA8FD09FFA8FFA8FD07FFA8FD0DFFA8FD07FFA8FD0AFFA8FD%13FFA8FD0BFFA8FD0BFFA8FD0AFFA8FD13FFA8FD0BFFA8FD09FFA8FD09FF%A8FD09FFA8FD14FFA8FD09FFA8FFFFFFA8FD09FFA8FD07FFA8FD09FFA8FF%FFA8A8FD08FFA8FFA8FD05FFA8FD09FFA8FD04FFA8A8FD09FFA8FFA8FFA8%FFA8FD09FFA8A8FFFFFFA8FD0BFFA8FFA8FFA8FD1BFFA8FFA8FFA8FD10FF%A8FD0BFFA8FD0DFFA8FFA8FFA8FFA8FD19FFA8FD0AFFA8FD13FFA8FFA8A8%A8FFFFFFA8FFFFFFA8FD13FFA8FD07FFA8FFFFA8A8A8FD11FFA8FFFFA87D%A8A8FFFFFFA8FFA8FFA8FD11FFA8FD0CFFA8FD11FFA8FFFFFFA8A8A8FD07%FFA8FD1CFFA8FD0BFFA8FD07FFA8FD0DFFA8FD09FFA8FD07FFA8FD16FFA8%FD07FFA8FFA8A8A8FFA8A884FFA8A87EFFFFFFA8FD07FFA8FFA8FD05FFA8%FD10FFA8FFA8FFFFFFA8A8A8FFFFFFA8A8A8FFFFA8A8A8FFFFA8A8A8FFA8%A8A8FFFFFFA8A8A8FD05FFA8FFFFFFA8A8A8FD12FFA8FFA8FFA8FFFFFFA8%FFA8FD05FFA8A8A8FFA8A8A8FFA8A8A8FD07FFA8FFA8FFA9FFA8FFA8FD1A%FFA8FFA8FFA8FD07FFA8FD05FFA8FFFFFFA8FD09FFA8FD24FFA8A8A8FFA8%A8A8FFFFFFA8A8FFFFA9A8A8FFFFAFA8FD2AFFA8A87DA8FFA87DA8A8FFFD%04A8FFA87DA8A8FFA8A8A8FD2AFFA8A8A8FFA8A8A8FFFFFFA8A8A8FFA8A8%A8FFFFA87DFD2AFFA8A8A8FFFFFFA8FFFFFFA8A9A8FFFFFFA8A8A8FFA8A8%A8FD30FFA8FFFFFFA8FD05FFA9FD07FFA8FFA8FFA8FFA8FD18FFA8FFA8AF%A8FFA8A8A8FD05FFA8A8A8FFA8A87DA8FFA87DA8A8FFFFFFA8A8A8FFA8FF%A8FFA8FFA8FFA8A9A8FD12FFA8FD09FFA8FFA8FFFFFF7DFFFFFFA8A8A8FF%A8A8A8FFFFFFA8FD05FFA8FD18FFA8FFAFFFFFFFA8A8A8FD07FFA8FFA8A8%A8FFA8A87DFFFFA87DA8A8FFA8FD06FFA8A8FD09FFA8FD0CFFA8FD07FFA8%FD09FFA8FD0DFFA8FD13FFA8FD0AFFA8FD13FFA8FFFFFFA8FFA8A8A8FFFF%FFA8FD15FFA8FD08FFA8FD19FFA8A97EFFFFFFA8FFA8FD15FFA8FD06FFA8%FFA8FFA8FD13FFA8FFFFA8A8A8FFFFA8FFA8FFA8FD15FFA8FD04FFA8FFFF%FFA8FD15FFA8FFA8FFA8FFA8FFFFFFA8FD1BFFA8A8FFA8FD09FFA8FFA8FD%0BFFA8FD04FFA8A8FD09FFA8A8A8FFA8A8A8FD09FFA8FD04FFA8FD09FFA8%FFA8FFFFFFA8FD0FFFA8FD09FFA8FD07FFA8FD09FFA8FFFFA8FD09FFA8FD%07FFA8FD09FFA8FFFFFFA8FD09FFA8FD09FFA8FD08FFA9A8FD0AFFA8FD09%FFA8FD09FFA8FD0BFFA8FD13FFA8FFFFA8FD07FFA8FD0BFFA8FD07FFA8FF%FFFFA8FD07FFA8FD0BFFA8FD05FFA8A8A8FFA8FD1CFFA8FFA8FD17FFA8FD%05FFA8FD04FFA8FD07FFA8FD0BFFA8FD05FFA8A8FD04FFA8FD07FFA8FD0D%FFA8FFFFFFA8A8A8FFA8FD16FFA8FD05FFA8FFA8FD0BFFA8FD0BFFA8FD07%FFA8FFFFA8FD07FFA8FD0BFFA8FD08FFA8A8FFA8FD07FFA8A8FD0AFFA8A8%FD07FFA8A8FD1EFFA8FD0BFFA8FD13FFA8FFFFA8FD08FFA8FD0AFFA8FD08%FFA8FFFFA8FD09FFA8FD09FFA8FD08FFA8FD15FFA8FD09FFA8FFFFFFA8FD%09FFA8FD07FFA8FD09FFA8FFFFA8FD09FFA8A8A8FFFFFFA8FFA8FD09FFA8%FD05FFA8FD09FFA8FFA8A8A8FFA8FD09FFA8FD04FFA8FD0BFFA8FFA8FD32%FFA8FD18FFA9A8FD05FFA8FFFFFFA8FD14FFA8A8FD1EFFA8FD07FFA8FD1E%FFA8FFFFA8A8A8FD12FFA8FFFFA87DA8A8FFFFFFA8FFA8FD13FFA8FD1EFF%A8FFFFFFA8A8A8FD05FFA8FD13FFA8FD0AFFA8FD09FFA8FFA8FD07FFA8FD%04FFA87DA8A8FD05FFA8FD07FFA8A8A8FD05FFA8FFA8FD0EFFA8FD07FFA8%FD07FFA8FD0FFFA8FD07FFA8FD05FFA8FD12FFA8FD05FFA8A8A8FFFFFFA8%FFA8FFFFFFA8A8A8FFFD05A8FD05FFA8FFA8A8A8FFA8FFA8FFA8A8A8FD16%FFA8FFA8FFA8FFA8FFA8FD05FFA8A8A8FFA8A8A8FFA8A8A8FD0BFFA8FD1C%FFA8FFA8A9A8FD08FFA87DFD0AA8FD07FFA8FFA8FFA8FFA8FD18FFA8FFA8%FFA8FFA8FD07FFA8A8A8FFA8FFA8FFA8A8A8FD05FFA8FFA8FFA8FD05FFA8%FFA8FD12FFA8A8A8FFFFFFA8FFFFFFA8FFA8FD09FFA8A8FFFFA8FFFFFFA8%FFA8FD04FFA8A8FD07FFA8FD10FFA8FD05FFA8FD07FFA8FD07FFA8A8A8FD%0DFFA8FD09FFA8FD0DFFA8A8FD05FFA8A8A8FD09FFA8FD04FFA87EA8FD04%FFAFAFFD08FFA8FD09FFA8FD20FFA8FFFFFFA8A8A8FD23FFA9A8FD15FFA8%FD08FFA8A8FFA8FD13FFA8FD08FFA8FFA8FD35FFA8FD06FFA8FFA8FFA8FD%14FFA8FD06FFA8FFA8FD09FFAFFFA8FD0BFFA8FD04FFA8FFFFFFA8FD07FF%A8FFA8FD11FFA8FD0BFFA8FFA8FFA8FD0BFFAFFFFFA8FD09FFA8FFA8FFA8%FFA8A8A8FD09FFA8FFFFFFA8A8FD08FFA8FFA8FD05FFA8FD09FFA8A8FD15%FFA9FD0DFFA9FD1BFFA8FFFFA8FD08FFA8A8FD09FFA8FD08FFAFFFFFA8FD%08FFA9A8FD09FFA8FD08FFA8A8FD0AFFA8FD13FFA8FD0BFFA8FD0BFFA8FD%05FFA8FFA8FFFFA8FD07FFA8FD0BFFA8FD05FFA8A8A8FFFFFFA8FD07FFA8%FD0BFFA8FD05FFA8A8A8FFA8FD16FFA8FD05FFA8FFA8FD17FFA8FD05FFA8%FD04FFA8FD07FFA8FD0BFFA8FD05FFA8A8FD04FFA8FD07FFA8FD15FFA8FD%16FFA8FD07FFA8FD0BFFA8FD0BFFA8FD07FFA8FFFFA8FD07FFA8FD0BFFA8%FD08FFA8FFFFA8FD08FFA8A8FD09FFA8FD08FFA8A8FD0AFFA8FD13FFA8FF%FFFFA8FD1BFFA8FFFFA8FD09FFA8FD07FFA8FD09FFA8FD04FFA8FD08FFA8%FFA8FD05FFA8FD09FFAFA9FD0DFFA8FD05FFA8FD0FFFA8FD0BFFA8FFA8FF%A8FD0EFFA8FD0BFFA8FFA8A8A8FD0BFFA8FD05FFA8FD0BFFA8FFA8FD0BFF%A8FD04FFA9FD19FFA8FFA8A8A8FD07FFA8FD13FFA8FD06FFA8FFFFFFA8FD%13FFA8FFFFFF7DA8A8FFFFA8FFFFA8FFA8FD11FFA8FD08FFA8FFA8FFA8FD%15FFA8A8A8FD07FFA8FD1CFFA8FFA8FD12FFA8A8FFFFFFA8FFA8FFFFFFA8%A9A8FD09FFA8FD07FFA8FD0CFFA8FD09FFA8FD0DFFA8A8A8FD0FFFA8FD07%FFA8FD0EFFA8FD07FFA8FFA8FD05FFA8FD06FFA87DA8A8FD07FFA8FD05FF%A8A8A8FD05FFA8FD10FFA8FD07FFA8FD05FFA8FD07FFA8A8A8FD09FFA8FF%A8FFFFFFA8FFFFFFA8FD14FFA8FFA8A8A8AFA8A8A8AFA8A8A8FD09FFA8A9%A8FD0BFFA8FFA8A8A8FFA8FD0CFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp7 Bn%AI5_BeginGradient: (Fade to Black)(Fade to Black) 0 2 Bd[00 %_Br[0 0 0 1 1 50 100 %_BS%_0 0 0 1 1 50 100 Bs0 0 0 1 1 25 0 %_BS%_0 0 0 1 1 25 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Green, Yellow, Orange)(Green, Yellow, Orange) 0 7 Bd[<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9><BFBEBEBDBCBBBBBAB9B8B8B7B6B5B5B4B3B2B2B1B0AFAEAEADACABABAAA9A8A8A7A6A5A5A4A3A2A1A1A09F9E9E9D9C9B9B9A999898979695949493929191908F8E8E8D8C8B8B8A898887878685848483828181807F7E7E7D7C7B7B7A797877777675747473727171706F6E6E6D6C6B6A6A696867676665646463626161605F5E5D5D5C5B5A5A595857575655545453525150504F4E4D4D4C4B4A4A494847474645444443424140403F3E3D3D3C3B3A3A393837373635343333323130302F2E2D2D2C2B2A2A292827262625242323222120201F1E1D1D1C1B1A1A>101 %_Br0<1A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF><F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFF>01 %_Br<D9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0.1<FFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2>01 %_Br<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9><BFBEBEBDBCBBBBBAB9B8B8B7B6B5B5B4B3B2B2B1B0AFAEAEADACABABAAA9A8A8A7A6A5A5A4A3A2A1A1A09F9E9E9D9C9B9B9A999898979695949493929191908F8E8E8D8C8B8B8A898887878685848483828181807F7E7E7D7C7B7B7A797877777675747473727171706F6E6E6D6C6B6A6A696867676665646463626161605F5E5D5D5C5B5A5A595857575655545453525150504F4E4D4D4C4B4A4A494847474645444443424140403F3E3D3D3C3B3A3A393837373635343333323130302F2E2D2D2C2B2A2A292827262625242323222120201F1E1D1D1C1B1A1A>101 %_Br0<1A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF><F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFF>01 %_Br<D9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBFBEBDBCBBBAB9B8B7B6B5B4B3B3B2B1B0AFAEADACABABAAA9A8A7A6A5A4A4A3A2A1A09F9E9E9D9C9B9A9998989796959494939291908F8F8E8D8C8B8B8A898888878685848483828181807F7E7E7D7C7B7B7A79787877767575747373727170706F6E6E6D6C6B6B6A6969686767666565646363626161605F5F5E5D5D5C5B5B5A5A595858575656555554535352525150504F4F4E4D4D4C4C4B4B4A494948484747464645444443434242414140403F3F3E3D3D3C3C3B3B3A3A3939383837373636363535343433333232313130302F2F2F2E2E2D2D2C2C2B2B2B2A2A29292928282727262626252524242423232322222121212020201F1F1E1E1E1D1D1D1C1C1C1B1B1B1A1A1A19191918181817171717161616151515141414141313131212121211111111101010100F0F0F0F0E0E0E0E0D0D0D0D0D0C0C0C0C0B0B0B0B0B0A0A0A0A0A0909090909080808080808070707070707060606060606060505050505050504040404040404040303030303030303030202020202020202020202020101010101010101010101010101010101010000000000000000000000000000000000000000000000000000>0.1<FFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2>01 %_Br[0.85 0.1 1 0 1 50 100 %_BS%_0.85 0.1 1 0 1 50 100 Bs0 0.75 1 0 1 50 80.117 %_BS%_0 0.75 1 0 1 50 80.117 Bs0 0.1 0.95 0 1 50 64 %_BS%_0 0.1 0.95 0 1 50 64 Bs0.85 0.1 1 0 1 50 47 %_BS%_0.85 0.1 1 0 1 50 47 Bs0 0.75 1 0 1 50 30 %_BS%_0 0.75 1 0 1 50 30 Bs0 0.1 0.95 0 1 50 15 %_BS%_0 0.1 0.95 0 1 50 15 Bs0.85 0.1 1 0 1 28 0 %_BS%_0.85 0.1 1 0 1 28 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Purple Radial)(Purple Radial) 1 2 Bd[<0001010203030405050607070809090A0B0B0C0C0D0E0E0F101011121213131415151617171818191A1A1B1B1C1D1D1E1E1F20202121222323242425262627272828292A2A2B2B2C2C2D2E2E2F2F3030313132333334343535363637373839393A3A3B3B3C3C3D3D3E3E3F3F40404141424243434444454546464747484849494A4A4B4B4C4C4D4D4E4E4F4F505051515152525353545455555656565757585859595A5A5A5B5B5C5C5D5D5D5E5E5F5F5F606061616262626363646464656566666667676768686969696A6A6B6B6B6C6C6C6D6D6D6E6E6F6F6F7070707171717272727373737474747575757676767777777878787979797A7A7A7B7B7B7B7C7C7C7D7D7D7E7E7E7E7F7F7F7F808080818181818282828283838384848484858585858686868687878787878888888889898989898A8A8A8A8B8B8B8B8B8C8C8C8C8C8D8D8D8D8D8E8E8E8E8E8F8F8F8F8F8F9090909090909191919191919292929292929293939393939393949494949494949495959595959595959596969696969696969696979797979797979797979797989898989898989898989898989898989898999999999999999999999999999999999999999999999999><000102030405060708090A0B0C0D0E0F10111213141516161718191A1B1C1D1E1F20212223242525262728292A2B2C2D2E2F2F30313233343536373738393A3B3C3D3E3E3F4041424343444546474849494A4B4C4D4D4E4F5051525253545556565758595A5A5B5C5D5D5E5F606161626364646566676768696A6A6B6C6D6D6E6F7070717272737475757677777879797A7B7C7C7D7E7E7F8080818282838484858686878888898A8A8B8B8C8D8D8E8F8F90909192929394949595969797989899999A9B9B9C9C9D9E9E9F9FA0A0A1A1A2A3A3A4A4A5A5A6A6A7A7A8A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B2B2B3B3B4B4B5B5B5B6B6B7B7B8B8B9B9BABABABBBBBCBCBDBDBEBEBEBFBFC0C0C0C1C1C2C2C3C3C3C4C4C5C5C5C6C6C6C7C7C8C8C8C9C9C9CACACACBCBCCCCCCCDCDCDCECECECFCFCFD0D0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D6D7D7D7D7D8D8D8D8D9D9D9D9DADADADADBDBDBDBDBDCDCDCDCDDDDDDDDDDDEDEDEDEDEDEDFDFDFDFDFE0E0E0E0E0E0E1E1E1E1E1E1E1E2E2E2E2E2E2E2E2E3E3E3E3E3E3E3E3E3E4E4E4E4E4E4E4E4E4E4E4E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E6><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br[0 0 0 0 1 30 63.1579 %_BS%_0 0 0 0 1 30 63.1579 Bs0.6 0.9 0.000031 0.000031 1 50 100 %_BS%_0.6 0.9 0.000031 0.000031 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Super Soft Black Vignette)(Super Soft Black Vignette) 1 3 Bd[0.20.20.211 %_Br0.20.20.211 %_Br[0.2 0.2 0.2 1 1 56.0729 57.4443 %_BS%_0.2 0.2 0.2 1 1 56.0729 57.4443 Bs0.2 0.2 0.2 1 1 31.8603 79.7713 %_BS%_0.2 0.2 0.2 1 1 31.8603 79.7713 Bs0.2 0.2 0.2 1 1 50 100 %_BS%_0.2 0.2 0.2 1 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 26)(Unnamed gradient 26) 0 3 Bd[<00000000010101010101020202020202020303030303030303040404040404040405050505050505050506060606060606060606070707070707070707070707080808080808080808080808090909090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D><0001020303040506070808090A0B0C0C0D0E0F0F10111212131414151616171818191A1A1B1C1C1D1D1E1E1F20202121222223232425252626272727282829292A2A2B2B2C2C2C2D2D2E2E2F2F2F303030313132323233333334343435353536363637373737383838393939393A3A3A3A3B3B3B3B3C3C3C3C3D3D3D3D3E3E3E3E3E3F3F3F3F3F3F40404040404141414141414242424242424243434343434343434444444444444444454545454545454545454646464646464646464646464747474747474747474747474747474848484848484848484848484848484848484848484849494949494949494949494949494949494949494949494949494949494949494949494949494949494949494A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A><00020406080A0C0E10121416181A1C1E1F21232527282A2C2D2F3132343637393A3C3D3F404243454647494A4C4D4E50515253555657585A5B5C5D5E606162636465666768696A6B6C6D6E6F70717273747576777778797A7B7C7C7D7E7F8080818282838485858687878889898A8B8B8C8C8D8E8E8F8F9090919192929394949495959696979798989999999A9A9B9B9B9C9C9D9D9D9E9E9E9F9F9FA0A0A0A1A1A1A2A2A2A2A3A3A3A4A4A4A4A5A5A5A5A6A6A6A6A6A7A7A7A7A7A8A8A8A8A8A9A9A9A9A9A9AAAAAAAAAAAAAAABABABABABABABACACACACACACACACACADADADADADADADADADADADAEAEAEAEAEAEAEAEAEAEAEAEAEAEAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFB0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1><00000000000000000000000000000000000000000000000000010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010102020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202>1 %_Br10 %_Br[0.05246 0.289616 0.692164 0.007477 1 50 100 %_BS%_0.05246 0.289616 0.692164 0.007477 1 50 100 Bs1 0 13 45 %_BS%_1 0 13 45 Bs1 0 50 0 %_BS%_1 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 30)(Unnamed gradient 30) 1 2 Bd[<0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D><181919191A1A1B1C1C1D1D1E1F1F202122222324252526272829292A2B2C2D2E2E2F30313233343536363738393A3B3C3D3E3F404142434445464748494A><CECECECDCDCDCCCCCCCBCBCBCACAC9C9C9C8C8C7C7C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBBBABAB9B9B8B8B7B6B6B5B5B4B3B3B2B2B1B1><0101010101010101010101010101010101010101010101010101010101010101010101010101010101010102020202020202020202020202020202020202>1 %_Br[0.049561 0.095003 0.808347 0.00296 1 57.3034 0 %_BS%_0.049561 0.095003 0.808347 0.00296 1 57.3034 0 Bs0.05246 0.289616 0.692164 0.007477 1 50 100 %_BS%_0.05246 0.289616 0.692164 0.007477 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 31)(Unnamed gradient 31) 0 3 Bd[<0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D><4A494847464544434241403F3E3D3C3B3A393838373635343433323131302F2F2E2D2D2C2B2B2A2A292828272726262525242423232322222121212020201F1F1F1E1E1E1D1D1D1D1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A1A19191919191919191919191918181818181818181818181818181818><B1B1B2B2B3B4B4B5B5B6B7B7B8B8B9B9BABABBBBBCBCBDBDBEBEBFBFC0C0C0C1C1C2C2C2C3C3C3C4C4C4C5C5C5C6C6C6C7C7C7C7C8C8C8C8C9C9C9C9CACACACACACBCBCBCBCBCBCCCCCCCCCCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECECECECECECECECECECECECECECECECECE><020202020202020202020202020202020202020101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101>1 %_Br<0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D><18191A1B1C1D1E1F202122232425262728292A2B2C2D2F303132333435363738393A3B3C3D3E3F404142434445464748494A><CECECDCCCCCBCBCAC9C9C8C7C7C6C6C5C4C4C3C3C2C1C1C0C0BFBEBEBDBDBCBBBBBABAB9B8B8B7B7B6B5B5B4B4B3B2B2B1B1><0101010101010101010101010101010101010101010101010101010101010101020202020202020202020202020202020202>1 %_Br[0.049561 0.095003 0.808347 0.00296 1 50 100 %_BS%_0.049561 0.095003 0.808347 0.00296 1 50 100 Bs0.05246 0.289616 0.692164 0.007477 1 23.7288 50 %_BS%_0.05246 0.289616 0.692164 0.007477 1 23.7288 50 Bs0.049561 0.095003 0.808347 0.00296 1 50 0 %_BS%_0.049561 0.095003 0.808347 0.00296 1 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Laguna)(Laguna) 0 3.1914 84.1563 84.791 [%AI3_Tile(0 O 0 R 0 1 1 0 k 0 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d0 XR42.0781 30.3906 m12.2227 12.8779 9.0488 12.4082 V7.2871 14.1709 0 30.3906 Y13.1641 20.5186 29.1484 23.3389 42.0781 30.3906 Cf42.0781 57.5908 m12.2227 40.0781 9.0488 39.6094 V7.2871 41.3711 0 57.5908 Y13.1641 47.7178 29.1484 50.5391 42.0781 57.5908 Cf42.0781 84.791 m12.2227 67.2773 9.0488 66.8096 V7.2871 68.5703 0 84.791 Y13.1641 74.918 29.1484 77.7402 42.0781 84.791 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.6 0.9 0.000031 0.000031 k 0.6 0.9 0.000031 0.000031 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d0 XR84.1563 30.3906 m54.3008 12.8779 51.127 12.4082 V49.3652 14.1709 42.0781 30.3906 Y55.2422 20.5186 71.2266 23.3389 84.1563 30.3906 Cf84.1563 57.5908 m54.3008 40.0781 51.127 39.6094 V49.3652 41.3711 42.0781 57.5908 Y55.2422 47.7178 71.2266 50.5391 84.1563 57.5908 Cf84.1563 84.791 m54.3008 67.2773 51.127 66.8096 V49.3652 68.5703 42.0781 84.791 Y55.2422 74.918 71.2266 77.7402 84.1563 84.791 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.85 0.1 1 0 k 0.85 0.1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d0 XR21.0391 33.582 m19.2773 33.582 17.8477 32.1523 17.8477 30.3906 c17.8477 28.6289 19.2773 27.2002 21.0391 27.2002 c22.8008 27.2002 24.2285 28.6289 24.2285 30.3906 c24.2285 32.1523 22.8008 33.582 21.0391 33.582 cf21.0391 6.3818 m19.2773 6.3818 17.8477 4.9531 17.8477 3.1914 c17.8477 1.4287 19.2773 0 21.0391 0 c22.8008 0 24.2285 1.4287 24.2285 3.1914 c24.2285 4.9531 22.8008 6.3818 21.0391 6.3818 cf21.0391 60.7822 m19.2773 60.7822 17.8477 59.3525 17.8477 57.5908 c17.8477 55.8291 19.2773 54.3994 21.0391 54.3994 c22.8008 54.3994 24.2285 55.8291 24.2285 57.5908 c24.2285 59.3525 22.8008 60.7822 21.0391 60.7822 cf21.0391 87.9824 m19.2773 87.9824 17.8477 86.5547 17.8477 84.791 c17.8477 83.0283 19.2773 81.5996 21.0391 81.5996 c22.8008 81.5996 24.2285 83.0283 24.2285 84.791 c24.2285 86.5547 22.8008 87.9824 21.0391 87.9824 cf63.1172 33.582 m61.3555 33.582 59.9258 32.1523 59.9258 30.3906 c59.9258 28.6289 61.3555 27.2002 63.1172 27.2002 c64.8789 27.2002 66.3066 28.6289 66.3066 30.3906 c66.3066 32.1523 64.8789 33.582 63.1172 33.582 cf63.1172 6.3818 m61.3555 6.3818 59.9258 4.9531 59.9258 3.1914 c59.9258 1.4287 61.3555 0 63.1172 0 c64.8789 0 66.3066 1.4287 66.3066 3.1914 c66.3066 4.9531 64.8789 6.3818 63.1172 6.3818 cf63.1172 60.7822 m61.3555 60.7822 59.9258 59.3525 59.9258 57.5908 c59.9258 55.8291 61.3555 54.3994 63.1172 54.3994 c64.8789 54.3994 66.3066 55.8291 66.3066 57.5908 c66.3066 59.3525 64.8789 60.7822 63.1172 60.7822 cf63.1172 87.9824 m61.3555 87.9824 59.9258 86.5547 59.9258 84.791 c59.9258 83.0283 61.3555 81.5996 63.1172 81.5996 c64.8789 81.5996 66.3066 83.0283 66.3066 84.791 c66.3066 86.5547 64.8789 87.9824 63.1172 87.9824 cf%AI6_EndPatternLayer) &(0 O 0 R 0.6 0.9 0.000031 0.000031 k 0.6 0.9 0.000031 0.000031 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d0 XR0 3.1914 m29.8535 20.7041 33.0273 21.1738 V34.79 19.4111 42.0781 3.1914 Y28.9141 13.0645 12.9277 10.2422 0 3.1914 Cf0 30.3906 m29.8535 47.9033 33.0273 48.374 V34.79 46.6104 42.0781 30.3906 Y28.9141 40.2646 12.9277 37.4434 0 30.3906 Cf0 57.5908 m29.8535 75.1035 33.0273 75.5752 V34.79 73.8105 42.0781 57.5908 Y28.9141 67.4648 12.9277 64.6436 0 57.5908 Cf%AI6_EndPatternLayer) &(0 O 0 R 0 1 1 0 k 0 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d0 XR42.0781 3.1914 m71.9316 20.7041 75.1055 21.1738 V76.8691 19.4111 84.1563 3.1914 Y70.9922 13.0645 55.0059 10.2422 42.0781 3.1914 Cf42.0781 30.3906 m71.9316 47.9033 75.1055 48.374 V76.8691 46.6104 84.1563 30.3906 Y70.9922 40.2646 55.0059 37.4434 42.0781 30.3906 Cf42.0781 57.5908 m71.9316 75.1035 75.1055 75.5752 V76.8691 73.8105 84.1563 57.5908 Y70.9922 67.4648 55.0059 64.6436 42.0781 57.5908 Cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(New Pattern 1)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6462 4733 m-6462 4674.0254 L-6446.4902 4674.0254 L-6446.4902 4733 L-6462 4733 Ln0 O0 0 0 1 k10 M-6462 4684.0586 m-6462 4683.5742 L-6446.4878 4683.5742 L-6446.4878 4684.0586 L-6462 4684.0586 Lf-6462 4701.3838 m-6462 4700.8965 L-6446.4878 4700.8965 L-6446.4878 4701.3838 L-6462 4701.3838 Lf-6461.9995 4686.3682 m-6461.9995 4685.6494 L-6446.4878 4685.6494 L-6446.4878 4686.3682 L-6461.9995 4686.3682 Lf-6461.9995 4696.6328 m-6461.9995 4695.9121 L-6446.4878 4695.9121 L-6446.4878 4696.6328 L-6461.9995 4696.6328 Lf-6461.9995 4694.4951 m-6461.9995 4693.4141 L-6446.4878 4693.4141 L-6446.4878 4694.4951 L-6461.9995 4694.4951 Lf-6461.9995 4688.9395 m-6461.9995 4687.8594 L-6446.4878 4687.8594 L-6446.4878 4688.9395 L-6461.9995 4688.9395 Lf-6461.9995 4691.9854 m-6461.9995 4690.334 L-6446.4878 4690.334 L-6446.4878 4691.9854 L-6461.9995 4691.9854 Lf*u1 D-6446.4888 4700.1455 m-6461.9995 4700.1455 L-6461.9995 4699.6816 L-6461.6514 4699.6816 L-6461.6514 4698.4844 L-6461.9995 4698.4844 L-6461.9995 4698.0215 L-6446.4888 4698.0215 L-6446.4888 4698.4844 L-6446.8408 4698.4844 L-6446.8408 4699.6846 L-6446.4888 4699.6846 L-6446.4888 4700.1455 Lf0 D-6458.1255 4699.6846 m-6457.4199 4699.6846 L-6457.4199 4698.4844 L-6458.1255 4698.4844 L-6458.1255 4699.6846 Lf-6458.8306 4698.4844 m-6459.5361 4698.4844 L-6459.5361 4699.6846 L-6458.8306 4699.6846 L-6458.8306 4698.4844 Lf-6456.7144 4699.6846 m-6456.0098 4699.6846 L-6456.0098 4698.4844 L-6456.7144 4698.4844 L-6456.7144 4699.6846 Lf-6455.3042 4699.6846 m-6454.5986 4699.6846 L-6454.5986 4698.4844 L-6455.3042 4698.4844 L-6455.3042 4699.6846 Lf-6453.8936 4699.6846 m-6453.1885 4699.6846 L-6453.1885 4698.4844 L-6453.8936 4698.4844 L-6453.8936 4699.6846 Lf-6452.4834 4699.6846 m-6451.7778 4699.6846 L-6451.7778 4698.4844 L-6452.4834 4698.4844 L-6452.4834 4699.6846 Lf-6451.0718 4699.6846 m-6450.3672 4699.6846 L-6450.3672 4698.4844 L-6451.0718 4698.4844 L-6451.0718 4699.6846 Lf-6449.6616 4699.6846 m-6448.9575 4699.6846 L-6448.9575 4698.4844 L-6449.6616 4698.4844 L-6449.6616 4699.6846 Lf-6448.2515 4699.6846 m-6447.5454 4699.6846 L-6447.5454 4698.4844 L-6448.2515 4698.4844 L-6448.2515 4699.6846 Lf-6460.9463 4699.6846 m-6460.2407 4699.6846 L-6460.2407 4698.4844 L-6460.9463 4698.4844 L-6460.9463 4699.6846 Lf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 2)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6462 4732.998 m-6462 4674.0225 L-6403.0254 4674.0225 L-6403.0254 4732.998 L-6462 4732.998 Ln*u1 D0 O0 0 0 1 k10 M-6435.4902 4692.4453 m-6433.9678 4693.9678 -6434.5166 4696.9834 -6436.7153 4699.1836 c-6438.9146 4701.3809 -6441.9302 4701.9297 -6443.4526 4700.4082 c-6444.9751 4698.8857 -6444.4263 4695.8682 -6442.2271 4693.6709 c-6440.0288 4691.4717 -6437.0127 4690.9238 -6435.4902 4692.4453 cf0 D-6436.1519 4693.0781 m-6437.5728 4691.6582 -6440.2241 4692.0059 -6442.0728 4693.8545 c-6443.9214 4695.7031 -6444.2695 4698.3545 -6442.8486 4699.7754 c-6441.4282 4701.1953 -6438.7769 4700.8486 -6436.9282 4699 c-6435.0786 4697.1504 -6434.7314 4694.5 -6436.1519 4693.0781 cf*U-6453.5327 4683.2607 m-6452.7969 4683.1309 l-6452.71 4682.4385 l-6447.9458 4687.9814 l-6453.5327 4683.2607 lf-6442.9409 4680.3145 m-6443.1235 4678.7266 L-6442.7002 4678.4512 -6442.3184 4678.1309 -6441.9346 4677.8145 C-6441.6841 4680.9189 L-6441.3535 4680.9453 L-6441.4678 4677.4395 L-6441.0503 4677.1162 -6440.6089 4676.8213 -6440.0913 4676.6152 C-6440.1235 4681.7266 L-6439.9063 4681.7734 L-6439.5938 4676.4521 L-6439.2007 4676.3516 -6438.7632 4676.3008 -6438.2642 4676.3213 C-6439.0376 4685.4463 L-6437.7666 4676.3594 L-6437.3359 4676.4063 -6436.96 4676.4746 -6436.6289 4676.5625 C-6437.4551 4683.334 L-6437.2998 4683.2109 L-6436.1465 4676.7148 L-6435.7471 4676.8633 -6435.4238 4677.0449 -6435.1528 4677.25 C-6435.7334 4682.0762 L-6435.4688 4681.9414 L-6434.7114 4677.6426 L-6434.2256 4678.1494 -6433.9194 4678.7344 -6433.5127 4679.2822 C-6434.0713 4681.3496 L-6433.6001 4681.1709 L-6433.1338 4679.7383 L-6432.8096 4680.082 -6432.4063 4680.3945 -6431.8394 4680.6406 c-6431.8506 4680.6357 -6430.7393 4680.6826 -6430.7466 4680.6533 c-6430.7959 4680.4375 -6431.6655 4680.2998 -6431.6455 4680.3105 c-6434.2974 4678.8965 -6433.3232 4676.3301 -6437.8735 4675.873 c-6441.4072 4675.5176 -6442.2515 4678.75 -6445.0962 4679.0615 c-6445.1152 4679.0625 -6445.7632 4679.3174 -6445.8442 4679.4502 C-6445.8486 4679.625 -6445.4595 4679.5186 -6445.2417 4679.4766 c-6444.6001 4679.3477 -6444.0498 4679.2402 -6443.5728 4678.9912 C-6443.4023 4680.1914 L-6442.9409 4680.3145 Lf-6455.6626 4692.9463 m-6457.2495 4692.7637 L-6457.5254 4693.1865 -6457.8462 4693.5693 -6458.1626 4693.9521 C-6455.0576 4694.2031 L-6455.0322 4694.5352 L-6458.5376 4694.4189 L-6458.8608 4694.8369 -6459.1558 4695.2783 -6459.3618 4695.7959 C-6454.2505 4695.7637 L-6454.2031 4695.9814 L-6459.5249 4696.293 L-6459.6265 4696.6865 -6459.6758 4697.125 -6459.6558 4697.623 C-6450.5298 4696.8496 L-6459.6177 4698.1201 L-6459.5713 4698.5498 -6459.5024 4698.9277 -6459.4146 4699.2578 C-6452.6426 4698.4316 L-6452.7656 4698.5869 L-6459.2622 4699.7402 L-6459.1138 4700.1406 -6458.9312 4700.4629 -6458.7271 4700.7344 C-6453.9014 4700.1533 L-6454.0352 4700.418 L-6458.3335 4701.1768 L-6457.8271 4701.6621 -6457.2417 4701.9688 -6456.6943 4702.375 C-6454.6274 4701.8145 L-6454.8066 4702.2871 L-6456.2383 4702.752 L-6455.8945 4703.0762 -6455.5825 4703.4814 -6455.3359 4704.0479 c-6455.3408 4704.0361 -6455.2935 4705.1484 -6455.3242 4705.1416 c-6455.54 4705.0908 -6455.6768 4704.2227 -6455.6675 4704.2412 c-6457.0806 4701.5898 -6459.6475 4702.5645 -6460.1045 4698.0127 c-6460.4595 4694.4805 -6457.2271 4693.6367 -6456.9165 4690.791 c-6456.9136 4690.7725 -6456.6602 4690.125 -6456.5273 4690.043 C-6456.3535 4690.0381 -6456.4575 4690.4277 -6456.5015 4690.6455 c-6456.6294 4691.2871 -6456.7368 4691.8369 -6456.9858 4692.3145 C-6455.7842 4692.4854 L-6455.6626 4692.9463 Lf-6426.0127 4691.2285 m-6421.2495 4692.6348 -6419.9502 4694.9209 -6419.9746 4696.5654 C-6419.5366 4693.459 -6417.6558 4695.8652 -6417.1313 4697.0029 C-6418.0498 4693.416 -6415.4463 4696.5439 -6415.2715 4696.8496 C-6416.2593 4693.4063 -6423.3955 4690.9404 -6426.0127 4691.2285 Cf-6431.9775 4690.2197 m-6435.3242 4684.1738 -6432.4233 4682.5703 -6431.7354 4682.377 c-6431.9233 4682.4287 -6432.3135 4683.2949 -6432.2026 4683.6367 C-6431.9482 4683.0928 -6431.4111 4682.8193 -6430.8994 4682.6094 C-6432.1626 4683.6094 -6432.6943 4686.4111 -6431.9082 4689.9512 c-6431.9775 4690.2197 lf-6434.2222 4690.5254 m-6436.6035 4688.1016 -6438.0474 4687.2773 -6436.1035 4684.668 c-6436.2202 4684.8262 -6436.3838 4685.7168 -6436.1758 4686.0117 C-6436.0942 4685.418 -6435.6626 4684.998 -6435.2358 4684.6455 C-6436.9395 4688.0732 -6434.2222 4690.5254 yf-6426.6577 4689.4199 m-6426.9897 4687.5615 -6425.4922 4686.4688 -6423.8662 4685.8496 C-6424.4194 4685.8662 -6425.0176 4685.9307 -6425.4482 4686.3496 C-6425.4302 4685.9893 -6424.7598 4685.3184 -6424.5654 4685.3359 c-6425.2778 4685.2744 -6427.4951 4684.8447 -6426.8408 4689.6191 c-6426.6577 4689.4199 lf-6423.5576 4690.1133 m-6423.1538 4688.7266 -6420.9502 4688.459 V-6421.5342 4688.2871 -6422.2314 4688.3662 -6422.6626 4688.7852 C-6422.6455 4688.4258 -6421.8408 4687.7178 -6421.6479 4687.7568 c-6423.3921 4687.4141 -6423.6782 4689.9072 y-6423.5576 4690.1133 lf-6420.1152 4691.3213 m-6419.8408 4690.627 -6419.0942 4690.1201 -6418.2646 4690 C-6418.6475 4689.8975 -6419.0854 4689.9873 -6419.4297 4690.3242 C-6419.4175 4690.0352 -6418.7744 4689.4863 -6418.6182 4689.502 c-6420.2729 4689.3496 -6420.1152 4691.3213 Yf-6429.5562 4689.4629 m-6429.6504 4686.1309 -6428.4175 4684.4541 -6426.9761 4683.6514 C-6427.5264 4683.7148 -6428.1162 4683.8271 -6428.5103 4684.2793 C-6428.5249 4683.9189 -6427.9087 4683.1953 -6427.7134 4683.1973 c-6428.4287 4683.1943 -6431.0034 4683.0898 -6429.7866 4689.7109 c-6429.5562 4689.4629 lf-6444.7944 4710.0137 m-6443.3882 4714.7754 -6441.1006 4716.0762 -6439.4575 4716.0518 C-6442.5635 4716.4893 -6440.1567 4718.3701 -6439.0195 4718.8945 C-6442.6074 4717.9766 -6439.4795 4720.5791 -6439.1729 4720.7549 C-6442.6162 4719.7676 -6445.0825 4712.6309 -6444.7944 4710.0137 Cf-6445.8022 4704.0488 m-6451.8481 4700.7002 -6453.4521 4703.6025 -6453.6465 4704.291 c-6453.5938 4704.1025 -6452.7295 4703.7119 -6452.3857 4703.8242 C-6452.9297 4704.0781 -6453.2017 4704.6152 -6453.4126 4705.127 C-6452.4126 4703.8633 -6449.6113 4703.334 -6446.0703 4704.1182 c-6445.8022 4704.0488 lf-6445.4966 4701.8037 m-6447.9214 4699.4229 -6448.7446 4697.9805 -6451.3535 4699.9229 c-6451.1968 4699.8066 -6450.3057 4699.6426 -6450.0112 4699.8496 C-6450.6064 4699.9307 -6451.0239 4700.3633 -6451.3774 4700.79 C-6447.9487 4699.0879 -6445.4966 4701.8037 yf-6446.6025 4709.3682 m-6448.4614 4709.0361 -6449.5537 4710.5342 -6450.1729 4712.1602 C-6450.1558 4711.6074 -6450.0918 4711.0098 -6449.6719 4710.5791 C-6450.0327 4710.5957 -6450.7041 4711.2656 -6450.6865 4711.4609 c-6450.7485 4710.75 -6451.1777 4708.5313 -6446.4038 4709.1846 c-6446.6025 4709.3682 lf-6445.9087 4712.4688 m-6447.2959 4712.873 -6447.5649 4715.0762 V-6447.7354 4714.4922 -6447.6558 4713.7949 -6447.2368 4713.3633 C-6447.5967 4713.3809 -6448.3042 4714.1865 -6448.2666 4714.3789 c-6448.6079 4712.6348 -6446.1152 4712.3477 y-6445.9087 4712.4688 lf-6444.7007 4715.9111 m-6445.3955 4716.1846 -6445.9009 4716.9307 -6446.0234 4717.7617 C-6446.1265 4717.3789 -6446.0337 4716.9404 -6445.6982 4716.5967 C-6445.9873 4716.6104 -6446.5361 4717.252 -6446.5215 4717.4082 c-6446.6729 4715.7529 -6444.7007 4715.9111 Yf-6446.5591 4706.4697 m-6449.8921 4706.377 -6451.5679 4707.6094 -6452.3696 4709.0508 C-6452.3081 4708.502 -6452.1953 4707.9102 -6451.7422 4707.5146 C-6452.1035 4707.5029 -6452.8262 4708.1162 -6452.8257 4708.3135 c-6452.8286 4707.5967 -6452.9321 4705.0234 -6446.3115 4706.2402 c-6446.5591 4706.4697 lfuu-6456.0234 4682.709 m-6456.2856 4682.1953 -6456.0479 4681.6689 -6454.2905 4681.6504 C-6455.0322 4680.9082 L-6456.9927 4680.9941 -6457.3423 4682.1777 -6457.1665 4682.7578 c-6456.9736 4683.3906 -6456.5488 4683.9023 -6456.2085 4684.25 C-6457.2031 4684.6113 -6457.2505 4685.3916 -6457.0479 4685.79 c-6456.7729 4686.334 -6456.2998 4686.752 -6455.9487 4687.0176 C-6456.9448 4687.377 -6456.8623 4688.1133 -6456.6074 4688.457 c-6456.2856 4688.8906 -6455.8174 4689.2031 -6455.4751 4689.4023 C-6456.4585 4689.8301 -6456.3022 4690.5234 -6456.0239 4690.8154 c-6455.6929 4691.166 -6455.2466 4691.3916 -6454.9199 4691.5322 C-6455.7695 4692.0225 -6455.5537 4692.6318 -6455.2715 4692.8633 c-6454.9458 4693.1318 -6454.5342 4693.2842 -6454.23 4693.377 C-6454.9395 4693.9082 -6454.6802 4694.4297 -6454.4014 4694.6074 c-6454.0698 4694.8174 -6453.6714 4694.9082 -6453.3857 4694.9541 C-6453.9673 4695.5098 -6453.6768 4695.9482 -6453.4097 4696.0762 c-6452.9326 4696.3037 -6452.3511 4696.2764 -6452.1768 4696.2813 c-6451.6343 4696.2959 -6450.8838 4696.125 -6450.4272 4696.0703 c-6449.3442 4695.9434 -6445.5718 4695.2754 -6443.9023 4695.4385 C-6444.1704 4695.2285 -6444.1714 4695.2285 v-6446.1304 4695.041 -6449.0479 4695.4678 -6450.1294 4695.5957 c-6450.9839 4695.6953 -6452.1182 4695.9951 -6452.9951 4695.7295 c-6453.2593 4695.6494 -6453.3696 4695.4453 -6452.8906 4695.0215 C-6452.3135 4695.0732 -6451.5737 4695.002 -6451.1118 4695.0039 c-6449.9009 4695.0098 -6445.6504 4694.7832 -6443.8311 4695.1895 C-6444.0986 4694.9209 -6444.0986 4694.9199 v-6446.2344 4694.4492 -6449.5098 4694.5254 -6450.7202 4694.5186 c-6451.6758 4694.5137 -6452.9673 4694.6914 -6453.8984 4694.2783 c-6454.1777 4694.1563 -6454.2729 4693.918 -6453.6953 4693.5166 C-6453.0615 4693.6602 -6452.2153 4693.6816 -6451.6968 4693.7471 c-6450.3623 4693.918 -6445.6431 4694.2441 -6443.6929 4694.9375 C-6443.9502 4694.6064 -6443.9512 4694.6064 v-6446.2422 4693.7969 -6449.8647 4693.4375 -6451.1992 4693.2656 c-6452.2529 4693.1309 -6453.7007 4693.1504 -6454.6719 4692.5703 c-6454.9624 4692.3975 -6455.0352 4692.123 -6454.3481 4691.7578 C-6453.6704 4691.998 -6452.7578 4692.1328 -6452.2026 4692.2754 c-6450.7534 4692.6445 -6445.5938 4693.6426 -6443.5361 4694.6689 C-6443.7754 4694.2695 -6443.7759 4694.2695 v-6446.1934 4693.0664 -6450.1392 4692.1797 -6451.5879 4691.8105 c-6452.7314 4691.5186 -6454.3311 4691.3457 -6455.3242 4690.5723 c-6455.6182 4690.3457 -6455.6626 4690.0352 -6454.8745 4689.7305 C-6454.1606 4690.082 -6453.1802 4690.3535 -6452.5889 4690.584 c-6451.0415 4691.1865 -6445.4863 4692.9863 -6443.3564 4694.3984 C-6443.5654 4693.9258 -6443.5674 4693.9248 v-6446.0698 4692.2695 -6450.3018 4690.7578 -6451.8486 4690.1543 c-6453.0703 4689.6777 -6454.8115 4689.2695 -6455.8018 4688.2842 c-6456.0786 4688.0098 -6456.1006 4687.6846 -6455.3384 4687.4551 C-6454.5942 4687.9404 -6453.5234 4688.3584 -6452.8926 4688.6895 c-6451.2446 4689.5518 -6445.2441 4692.2246 -6443.1055 4694.0957 C-6443.2407 4693.5186 -6443.2417 4693.5186 v-6445.7559 4691.3281 -6450.2954 4689.127 -6451.9438 4688.2617 c-6453.2456 4687.5801 -6455.1602 4686.9248 -6456.0815 4685.6709 c-6456.3135 4685.3555 -6456.2974 4685.0127 -6455.6118 4684.8105 C-6454.8594 4685.4668 -6453.6641 4686.0762 -6452.9888 4686.5322 c-6451.27 4687.6953 -6444.9126 4691.377 -6442.8442 4693.7637 C-6443.1377 4692.9902 -6443.1382 4692.9893 v-6445.5718 4690.1934 -6450.0825 4687.2842 -6451.8018 4686.1221 c-6453.1582 4685.2031 -6455.2295 4684.2607 -6456.0234 4682.709 cfUu-6453.2329 4679.918 m-6453.7446 4679.6543 -6454.2715 4679.8926 -6454.2905 4681.6504 C-6455.0313 4680.9082 L-6454.9473 4678.9473 -6453.7622 4678.5977 -6453.1826 4678.7754 c-6452.5503 4678.9658 -6452.0386 4679.3916 -6451.6919 4679.7324 C-6451.3306 4678.7373 -6450.5498 4678.6904 -6450.1504 4678.8906 c-6449.6064 4679.168 -6449.1895 4679.6406 -6448.9224 4679.9922 C-6448.5649 4678.9951 -6447.8281 4679.0781 -6447.4834 4679.334 c-6447.0498 4679.6543 -6446.7368 4680.123 -6446.5376 4680.4648 C-6446.1113 4679.4824 -6445.4175 4679.6387 -6445.1255 4679.918 c-6444.7759 4680.248 -6444.5488 4680.6943 -6444.4082 4681.0215 C-6443.9185 4680.1719 -6443.3086 4680.3877 -6443.0767 4680.6689 c-6442.8086 4680.9951 -6442.6553 4681.4053 -6442.5649 4681.7109 C-6442.0327 4681.002 -6441.5103 4681.2607 -6441.3345 4681.5391 c-6441.1235 4681.8701 -6441.0322 4682.2695 -6440.9858 4682.5537 C-6440.4312 4681.9727 -6439.9912 4682.2637 -6439.8638 4682.5313 c-6439.6367 4683.0078 -6439.6655 4683.5898 -6439.6592 4683.7637 c-6439.6431 4684.3066 -6439.8159 4685.0566 -6439.8696 4685.5137 c-6439.9966 4686.5957 -6440.6655 4690.3682 -6440.5034 4692.0381 C-6440.7129 4691.7695 l-6440.8999 4689.8105 -6440.4727 4686.8926 -6440.3457 4685.8105 c-6440.2446 4684.957 -6439.9458 4683.8223 -6440.2114 4682.9453 c-6440.2915 4682.6816 -6440.4946 4682.5703 -6440.9199 4683.0508 C-6440.8682 4683.6279 -6440.9395 4684.3662 -6440.9375 4684.8281 c-6440.9302 4686.04 -6441.1567 4690.29 -6440.7524 4692.1094 C-6441.0195 4691.8428 -6441.0195 4691.8418 v-6441.4922 4689.7061 -6441.4155 4686.4316 -6441.4214 4685.2207 c-6441.4272 4684.2646 -6441.25 4682.9736 -6441.6616 4682.043 c-6441.7847 4681.7637 -6442.0234 4681.668 -6442.4238 4682.2461 C-6442.2798 4682.8789 -6442.2593 4683.7246 -6442.1929 4684.2441 c-6442.0225 4685.5781 -6441.6958 4690.2959 -6441.0034 4692.248 C-6441.3345 4691.9902 -6441.3354 4691.9893 v-6442.1455 4689.6982 -6442.5039 4686.0762 -6442.6753 4684.7402 c-6442.8096 4683.6885 -6442.79 4682.2402 -6443.3706 4681.2695 c-6443.5435 4680.9785 -6443.8174 4680.9053 -6444.1816 4681.5938 C-6443.9434 4682.2695 -6443.8081 4683.1836 -6443.6665 4683.7383 c-6443.2969 4685.1865 -6442.2993 4690.3477 -6441.27 4692.4053 C-6441.6704 4692.166 -6441.6714 4692.166 v-6442.8745 4689.7471 -6443.7607 4685.8008 -6444.1294 4684.3535 c-6444.4214 4683.209 -6444.5962 4681.6094 -6445.3662 4680.6172 c-6445.5962 4680.3232 -6445.9058 4680.2783 -6446.2114 4681.0664 C-6445.8594 4681.7793 -6445.5874 4682.7617 -6445.3574 4683.3516 c-6444.7534 4684.8984 -6442.9546 4690.4541 -6441.5415 4692.585 C-6442.0161 4692.375 l-6443.6704 4689.8711 -6445.1826 4685.6387 -6445.7866 4684.0918 c-6446.2622 4682.8701 -6446.6714 4681.1289 -6447.6558 4680.1387 c-6447.9312 4679.8623 -6448.2559 4679.8398 -6448.4858 4680.6016 C-6448.0015 4681.3457 -6447.5825 4682.418 -6447.2529 4683.0469 c-6446.3887 4684.6953 -6443.7158 4690.6973 -6441.8447 4692.8359 C-6442.4209 4692.6992 -6442.4214 4692.6992 v-6444.6128 4690.1846 -6446.8145 4685.6455 -6447.6782 4683.9961 c-6448.3599 4682.6943 -6449.0161 4680.7793 -6450.2695 4679.8594 c-6450.5854 4679.627 -6450.9272 4679.6426 -6451.1313 4680.3281 C-6450.4736 4681.082 -6449.8638 4682.2764 -6449.4072 4682.9512 c-6448.2441 4684.6709 -6444.5635 4691.0273 -6442.1768 4693.0967 C-6442.9502 4692.8037 -6442.9512 4692.8018 v-6445.7471 4690.3682 -6448.6558 4685.8584 -6449.8184 4684.1387 c-6450.7368 4682.7822 -6451.6802 4680.7119 -6453.2329 4679.918 cfUU*u1 D-6403.0264 4684.0566 m-6409.5264 4684.0566 L-6409.1826 4684.4189 -6408.7622 4684.7578 -6408.1777 4685.0332 c-6408.1978 4685.0234 -6407.3994 4685.1563 -6407.2622 4685.332 c-6407.0967 4685.541 -6408.7886 4685.582 -6409.6929 4684.5342 C-6410.3486 4687.709 L-6410.8135 4688.0273 L-6410.0918 4684.0977 L-6410.5249 4683.5703 -6410.8594 4683.002 -6411.3687 4682.5186 C-6412.0337 4688.6289 L-6412.29 4688.7754 L-6411.8286 4682.1475 L-6412.1104 4681.957 -6412.4424 4681.791 -6412.8486 4681.6621 C-6413.7119 4689.0225 L-6413.9482 4689.0078 L-6413.3369 4681.5322 L-6413.6729 4681.4609 -6414.0518 4681.4111 -6414.4834 4681.3857 C-6415.0303 4688.9541 L-6415.1992 4688.9521 L-6414.9814 4681.3711 L-6415.4814 4681.377 -6415.9175 4681.4473 -6416.3042 4681.5674 C-6416.4155 4688.7061 L-6416.6338 4688.6689 L-6416.7935 4681.7549 L-6417.2998 4681.9863 -6417.7266 4682.3018 -6418.1279 4682.6455 C-6418.0454 4688.2412 L-6418.3774 4688.0273 L-6418.5752 4683.043 L-6418.9434 4683.377 -6419.3096 4683.7168 -6419.7178 4684.0127 C-6419.7217 4687.3389 L-6420.1455 4687.0645 L-6420.1553 4684.2988 L-6420.6191 4684.5693 -6421.5854 4685.0098 -6422.4014 4684.8672 C-6421.1714 4684.543 -6420.7925 4684.3301 -6420.5034 4684.0566 C-6423.7295 4684.0566 L-6419.8955 4688.4512 -6413.3394 4692.6865 -6408.3018 4686.0225 C-6408.1807 4685.8838 -6407.8174 4685.5625 -6407.1255 4685.6475 C-6403.0264 4685.6475 L-6403.0264 4686.3672 L-6406.4834 4686.3672 L-6406.1318 4686.6777 -6405.8223 4687.4863 -6406.0386 4687.8574 C-6403.0264 4687.8574 L-6403.0264 4688.9385 L-6406.1689 4688.9385 L-6406.2935 4689.4492 -6406.5439 4689.8857 -6406.8218 4690.3311 C-6403.0264 4690.3311 L-6403.0264 4691.9873 L-6407.7354 4691.9873 L-6407.9424 4692.4453 -6408.1016 4692.9082 -6408.1768 4693.4121 C-6403.0264 4693.4121 L-6403.0264 4694.4922 L-6408.1714 4694.4922 L-6408.1074 4694.9834 -6407.9614 4695.4668 -6407.7378 4695.9111 C-6403.0264 4695.9111 L-6403.0264 4696.6309 L-6407.2744 4696.6309 L-6406.9375 4697.0039 -6405.8535 4697.5938 -6405.9375 4698.0225 C-6403.0239 4698.0225 L-6403.0239 4698.4824 L-6403.3721 4698.4824 L-6403.3721 4699.6826 L-6403.0239 4699.6826 L-6403.0239 4700.1426 L-6410.9736 4700.1426 L-6411.4082 4700.4375 -6412.2192 4700.4521 -6412.9897 4700.1426 C-6416.8564 4700.1426 L-6417.1162 4700.4609 -6418.1807 4700.5693 -6418.6846 4700.1426 C-6419.8232 4700.1426 L-6420.0439 4700.3994 -6420.3174 4700.6387 -6420.6782 4700.8975 C-6403.0264 4700.8975 L-6403.0264 4701.3809 L-6421.8394 4701.3809 L-6422.1982 4701.5615 -6423.2417 4701.8389 -6424.3774 4701.3809 C-6434.6406 4701.3809 L-6434.6406 4711.6494 L-6434.1826 4712.7861 -6434.4614 4713.8281 -6434.6455 4714.1895 C-6434.6455 4733 L-6435.1279 4733 L-6435.1279 4715.3477 L-6435.3838 4715.709 -6435.6235 4715.9824 -6435.8794 4716.2031 C-6435.8794 4717.3418 L-6435.4536 4717.8457 -6435.5615 4718.9082 -6435.8794 4719.1689 C-6435.8794 4723.0361 L-6435.5698 4723.8076 -6435.5854 4724.6182 -6435.8833 4725.0518 C-6435.8833 4732.998 L-6436.3394 4732.998 L-6436.3394 4732.6543 L-6437.5435 4732.6543 L-6437.5435 4732.998 L-6438.0039 4732.998 L-6438.0039 4730.0879 L-6438.4287 4730.1738 -6439.0186 4729.0898 -6439.3955 4728.752 C-6439.3955 4732.9951 L-6440.1113 4732.9951 L-6440.1113 4728.2891 L-6440.5552 4728.0654 -6441.0376 4727.9189 -6441.5298 4727.8555 C-6441.5298 4732.9951 L-6442.6138 4732.9951 L-6442.6138 4727.8496 L-6443.1143 4727.9248 -6443.5767 4728.085 -6444.0391 4728.29 C-6444.0391 4732.9951 L-6445.6958 4732.9951 L-6445.6958 4729.2041 L-6446.1362 4729.4824 -6446.5728 4729.7324 -6447.0854 4729.8555 C-6447.0854 4732.9951 L-6448.1689 4732.9951 L-6448.1689 4729.9893 L-6448.5552 4730.1289 -6449.3486 4729.8945 -6449.6543 4729.543 C-6449.6543 4732.9951 L-6450.3794 4732.9951 L-6450.3794 4728.9014 L-6450.4634 4728.209 -6450.1382 4727.8457 -6450.0015 4727.7227 C-6443.3359 4722.6885 -6447.5713 4716.1309 -6451.9658 4712.2959 C-6451.9658 4715.5244 L-6451.6919 4715.2344 -6451.48 4714.8555 -6451.1558 4713.625 C-6451.0127 4714.4414 -6451.4526 4715.4082 -6451.7246 4715.8711 C-6448.9575 4715.8828 L-6448.6831 4716.3047 L-6452.0103 4716.3066 L-6452.3066 4716.7168 -6452.6455 4717.084 -6452.98 4717.4512 C-6447.9951 4717.6475 L-6447.7817 4717.9814 L-6453.3774 4717.8984 L-6453.7202 4718.2998 -6454.0361 4718.7266 -6454.2681 4719.2314 C-6447.3535 4719.3926 L-6447.3169 4719.6113 L-6454.4546 4719.7227 L-6454.5742 4720.1094 -6454.6465 4720.5439 -6454.6514 4721.0449 C-6447.0688 4720.8262 L-6447.0688 4720.9951 L-6454.6362 4721.543 L-6454.6113 4721.9746 -6454.5615 4722.3545 -6454.4888 4722.6895 C-6447.0142 4722.0781 L-6446.9995 4722.3145 L-6454.3599 4723.1777 L-6454.2314 4723.585 -6454.0654 4723.916 -6453.8755 4724.1973 C-6447.2485 4723.7354 L-6447.3945 4723.9932 L-6453.5034 4724.6572 L-6453.0215 4725.168 -6452.4521 4725.502 -6451.9238 4725.9336 C-6447.9946 4725.2139 L-6448.3135 4725.6768 L-6451.4878 4726.334 L-6450.4409 4727.2373 -6450.4814 4728.9297 -6450.6914 4728.7637 c-6450.8657 4728.627 -6450.9985 4727.8281 -6450.9897 4727.8486 c-6451.2656 4727.2637 -6451.6035 4726.8438 -6451.9697 4726.502 C-6451.9697 4733 L-6452.4536 4733 L-6452.4536 4726.085 L-6453.6582 4725.1377 -6454.9551 4724.5674 -6455.1167 4721.4111 c-6455.25 4718.8311 -6453.5562 4717.7656 -6452.4497 4716.2871 C-6452.4497 4711.7441 L-6453.5767 4710.418 -6454.5225 4708.9912 -6454.9614 4707.1455 C-6455.8809 4702.3662 -6452.7568 4696.8545 -6447.7959 4696.4863 C-6447.7183 4696.6133 L-6452.1494 4697.5352 -6454.8442 4702.6641 -6453.9814 4707.1455 C-6453.0635 4711.0029 -6449.9395 4713.0234 -6447.5503 4716.1475 C-6445.8975 4718.5361 -6445.3457 4721.1094 -6446.0806 4723.8652 c-6446.8545 4726.6133 -6449.25 4727.5977 -6449.5649 4728.5303 c-6449.8506 4729.375 -6448.6689 4729.7002 -6447.6968 4729.6348 C-6445.5454 4729.4395 -6444.1602 4726.4922 -6440.3184 4727.7559 c-6439.2222 4728.1162 -6438.5913 4728.9375 -6438.3042 4729.5469 c-6438.1104 4729.957 -6436.7241 4729.4395 -6437.9165 4727.2207 C-6440.8774 4727.0879 -6440.4521 4725.0645 -6440.2026 4725.2109 c-6438.5015 4726.209 -6437.1826 4724.3047 -6438.1055 4723.2959 c-6440.2129 4720.9902 -6441.8481 4721.2861 -6443.9248 4717.3174 c-6446.2095 4712.9521 -6447.2695 4707.0723 -6444.7959 4702.9082 C-6444.7954 4702.1387 L-6445.0479 4701.5439 -6445.0249 4701.085 -6445.2134 4700.168 c-6445.3818 4699.3535 -6445.6689 4699.085 -6445.9575 4698.9121 C-6446.1304 4698.7969 -6446.5015 4698.9053 -6446.5054 4699.1445 c-6446.52 4699.7461 -6445.7842 4699.5225 -6445.8271 4699.584 c-6446.1895 4700.0869 -6446.7329 4699.7295 -6446.8345 4699.377 c-6446.9648 4698.9287 -6446.6606 4698.5762 -6446.3145 4698.4902 C-6445.6655 4698.3594 -6445.1968 4698.9277 -6444.9575 4699.457 c-6444.4365 4700.6074 -6444.4746 4702.252 -6443.2607 4702.8574 c-6442.4385 4703.2471 -6441.5537 4702.9277 -6440.7271 4702.6328 c-6437.8296 4701.6016 -6434.3096 4698.082 -6433.2783 4695.1836 c-6432.9834 4694.3574 -6432.6641 4693.4727 -6433.0537 4692.6494 c-6433.6606 4691.4375 -6435.3042 4691.4746 -6436.4546 4690.9541 c-6436.9834 4690.7148 -6437.5513 4690.2461 -6437.4214 4689.5967 C-6437.3345 4689.25 -6436.9824 4688.9473 -6436.5327 4689.0762 c-6436.1826 4689.1797 -6435.8242 4689.7227 -6436.3281 4690.084 c-6436.3882 4690.127 -6436.1655 4689.3906 -6436.7681 4689.4053 c-6437.0054 4689.4111 -6437.1143 4689.7813 -6436.9995 4689.9541 C-6436.8257 4690.2422 -6436.5591 4690.5293 -6435.7422 4690.6973 c-6434.7085 4690.9102 -6434.2578 4690.8535 -6433.5386 4691.2266 C-6433.1167 4691.2266 L-6428.9546 4688.7529 -6423.0674 4689.8008 -6418.7095 4692.0977 c-6418.0527 4692.4551 -6417.4834 4692.8008 -6416.9126 4693.1475 c-6415.5488 4693.9766 -6413.5542 4696.8857 Y-6413.1782 4697.332 -6412.9521 4697.7979 -6412.5225 4698.0625 c-6411.3569 4698.7783 -6409.8184 4697.5215 -6410.8154 4695.8193 c-6410.9614 4695.5703 -6408.9385 4695.1455 -6408.8057 4698.1064 C-6406.5874 4699.2988 -6406.0698 4697.9121 -6406.4795 4697.7178 c-6407.0889 4697.4316 -6407.9087 4696.7998 -6408.2705 4695.7041 c-6409.5342 4691.8623 -6406.3599 4690.0234 -6406.4463 4688.3262 C-6406.3008 4687.5322 -6406.6514 4686.1719 -6407.4961 4686.459 c-6408.4282 4686.7725 -6409.4126 4689.168 -6412.1606 4689.9414 c-6414.9175 4690.6768 -6417.4897 4690.125 -6419.8774 4688.4717 C-6423.0034 4686.084 -6425.0234 4682.959 -6428.8818 4682.041 C-6433.3623 4681.1777 -6438.4902 4683.873 -6439.4126 4688.3037 C-6439.5391 4688.2266 L-6439.1729 4683.2656 -6433.6592 4680.1426 -6428.8818 4681.0615 C-6427.0361 4681.502 -6425.6104 4682.4453 -6424.2822 4683.5723 C-6419.7393 4683.5723 L-6418.2607 4682.4668 -6417.1943 4680.7725 -6414.6143 4680.9053 c-6411.4585 4681.0664 -6410.8882 4682.3633 -6409.9409 4683.5723 C-6403.0264 4683.5723 L-6403.0264 4684.0566 Lf0 D-6432.1362 4693.4121 m-6424.5166 4693.4121 L-6425.5635 4692.8301 -6426.5435 4692.3184 -6427.8057 4691.9873 C-6432.6079 4691.9873 L-6432.2998 4692.3809 -6432.1055 4692.8701 -6432.1362 4693.4121 Cf-6433.0591 4695.9111 m-6421.5254 4695.9111 L-6421.6338 4695.6201 -6422.0063 4694.9404 -6422.8042 4694.4922 C-6432.4321 4694.4922 L-6432.6118 4694.9727 -6432.8232 4695.4463 -6433.0591 4695.9111 Cf-6421.8096 4698.0225 m-6421.3174 4697.4395 -6421.2568 4697.2207 -6421.3857 4696.6309 C-6433.4521 4696.6309 L-6433.7295 4697.1074 -6434.0322 4697.5723 -6434.3599 4698.0225 C-6426.2568 4698.0225 L-6425.9111 4697.2041 -6425.1665 4697.3711 -6424.8218 4698.0225 C-6421.8096 4698.0225 Lf-6423.1201 4698.4824 m-6423.1201 4698.8242 L-6422.5664 4698.7861 -6422.4995 4698.752 -6422.1982 4698.4824 C-6423.1201 4698.4824 Lf-6424.4863 4698.4824 m-6424.3311 4698.6719 -6424.0264 4698.8154 -6423.8257 4698.8457 C-6423.8257 4698.4824 L-6424.4863 4698.4824 Lf-6427.3535 4698.4824 m-6427.3535 4699.6826 L-6426.6465 4699.6826 L-6426.6465 4698.4824 L-6427.3535 4698.4824 Lf-6428.7622 4698.4824 m-6428.7622 4699.6826 L-6428.0576 4699.6826 L-6428.0576 4698.4824 L-6428.7622 4698.4824 Lf-6430.1729 4698.4824 m-6430.1729 4699.6826 L-6429.4678 4699.6826 L-6429.4678 4698.4824 L-6430.1729 4698.4824 Lf-6431.5835 4698.4824 m-6431.5835 4699.6826 L-6430.8774 4699.6826 L-6430.8774 4698.4824 L-6431.5835 4698.4824 Lf-6432.9946 4698.4824 m-6432.9946 4699.6826 L-6432.2886 4699.6826 L-6432.2886 4698.4824 L-6432.9946 4698.4824 Lf-6438 4709.7695 m-6438 4701.6504 L-6438.4497 4701.9756 -6438.9146 4702.2754 -6439.3911 4702.5449 C-6439.3911 4714.6406 L-6438.8018 4714.7695 -6438.5825 4714.709 -6438 4714.2158 C-6438 4711.2041 L-6438.6514 4710.8613 -6438.8169 4710.1152 -6438 4709.7695 Cf-6437.5391 4709.3799 m-6436.3394 4709.3799 L-6436.3394 4708.6748 L-6437.5391 4708.6748 L-6437.5391 4709.3799 Lf-6436.3394 4707.9688 m-6436.3394 4707.2637 L-6437.5391 4707.2637 L-6437.5391 4707.9688 L-6436.3394 4707.9688 Lf-6436.3394 4706.5586 m-6436.3394 4705.8535 L-6437.5391 4705.8535 L-6437.5391 4706.5586 L-6436.3394 4706.5586 Lf-6436.3394 4705.1484 m-6436.3394 4704.4434 L-6437.5391 4704.4434 L-6437.5391 4705.1484 L-6436.3394 4705.1484 Lf-6436.3394 4703.7373 m-6436.3394 4703.0313 L-6437.5391 4703.0313 L-6437.5391 4703.7373 L-6436.3394 4703.7373 Lf-6436.3394 4702.3262 m-6436.3394 4701.6201 L-6437.5391 4701.6201 L-6437.5391 4702.3262 L-6436.3394 4702.3262 Lf-6436.3394 4700.918 m-6436.3394 4700.2725 L-6436.5728 4700.4941 -6436.8135 4700.709 -6437.0591 4700.918 C-6436.3394 4700.918 Lf-6434.4058 4699.6826 m-6433.6992 4699.6826 L-6433.6992 4698.4824 L-6434.4058 4698.4824 L-6434.4058 4699.6826 Lf-6435.7495 4699.6826 m-6435.1094 4699.6826 L-6435.1094 4698.9746 L-6435.3159 4699.2158 -6435.5288 4699.4521 -6435.7495 4699.6826 Cf-6441.5298 4703.5273 m-6441.5298 4713.2227 L-6441.0815 4714.0186 -6440.4014 4714.3926 -6440.1113 4714.502 C-6440.1113 4702.9258 L-6440.5762 4703.1563 -6441.0488 4703.3564 -6441.5298 4703.5273 Cf-6444.0352 4703.209 m-6444.0352 4708.2207 L-6443.7041 4709.4844 -6443.1929 4710.4629 -6442.6094 4711.5098 C-6442.6094 4703.7725 L-6443.1606 4703.7705 -6443.6494 4703.5439 -6444.0352 4703.209 Cf-6436.3394 4731.2441 m-6437.5391 4731.2441 L-6437.5391 4731.9482 L-6436.3394 4731.9482 L-6436.3394 4731.2441 Lf-6436.3394 4729.834 m-6437.3896 4729.834 L-6437.4375 4729.8838 -6437.4878 4729.9297 -6437.5391 4729.9678 C-6437.5391 4730.5381 L-6436.3394 4730.5381 L-6436.3394 4729.834 Lf-6436.3394 4728.4209 m-6437.0039 4728.4209 L-6436.9702 4728.6475 -6436.9595 4728.9121 -6437.0137 4729.1279 C-6436.3394 4729.1279 L-6436.3394 4728.4209 Lf-6436.3394 4727.0117 m-6437.5015 4727.0117 L-6437.3872 4727.2461 -6437.2798 4727.4814 -6437.1919 4727.7168 C-6436.3394 4727.7168 L-6436.3394 4727.0117 Lf-6436.3394 4725.9033 m-6436.4614 4726.0625 -6436.5938 4726.2197 -6436.6753 4726.3066 C-6436.3394 4726.3066 L-6436.3394 4725.9033 Lf-6436.4399 4710.4395 m-6436.6968 4710.2891 -6438.0845 4709.8135 -6438.0737 4710.5381 c-6438.0674 4710.9502 -6437.4512 4711.2412 -6437.2495 4711.4473 c-6436.6338 4712.0703 -6436.1885 4713.5254 -6437.2974 4714.4238 c-6439.6328 4716.3145 -6441.1865 4714.5879 Y-6445.1118 4710.7324 -6445.1104 4705.1113 Y-6446.2295 4709.334 -6444.9663 4714.3936 -6443.4048 4717.1426 c-6440.8818 4721.584 -6439.9575 4720.0566 -6437.6113 4722.9482 c-6436.8047 4723.9434 -6437.1294 4726.3818 -6439.9546 4725.75 c-6440.2026 4725.6934 -6439.7759 4726.2949 -6439.2681 4726.5498 c-6437.1104 4727.6406 -6435.8618 4725.1631 -6436.1338 4723.8594 c-6436.4761 4722.2109 -6437.0986 4721.3662 -6439.1616 4720.2246 C-6438.8311 4720.2373 -6437.2134 4720.541 -6436.2295 4719.0088 c-6436.0195 4718.6826 -6435.8745 4717.7578 -6436.3042 4717.877 c-6436.3906 4717.9023 -6436.6416 4718.1973 -6436.9414 4718.3613 c-6438.9321 4719.3945 -6439.7075 4717.0137 Y-6437.4165 4716.8418 -6436.7515 4716.7637 -6435.2559 4714.7637 c-6435.0542 4714.4941 -6434.1162 4711.8047 -6436.4399 4710.4395 cf-6437.5391 4717.1367 m-6437.5391 4718.0225 L-6437.2993 4717.998 -6436.9302 4717.957 -6436.3394 4717.4033 C-6436.3394 4717.1367 L-6437.5391 4717.1367 Lf-6438.9946 4717.2305 m-6438.8042 4717.7031 -6438.4185 4717.9473 -6438 4718.0127 C-6438 4717.1709 L-6438.3857 4717.2354 -6438.9946 4717.2305 Yf-6436.3394 4720.666 m-6436.3394 4719.959 L-6436.6382 4719.959 L-6436.9136 4720.1475 -6437.2246 4720.293 -6437.5391 4720.3818 C-6437.5391 4720.666 L-6436.3394 4720.666 Lf-6436.9897 4721.3682 m-6436.7935 4721.5342 -6436.5576 4721.7813 -6436.3394 4722.1084 C-6436.3394 4721.3682 L-6436.9897 4721.3682 Lf-6438.2495 4720.4746 m-6438.1914 4720.5273 -6438.1025 4720.5967 -6438 4720.6719 C-6438 4720.4668 L-6438.0835 4720.4746 -6438.1675 4720.4785 -6438.2495 4720.4746 Cf-6437.5391 4712.9063 m-6437.5391 4713.8262 L-6437.2715 4713.5273 -6437.2358 4713.46 -6437.1982 4712.9063 C-6437.5391 4712.9063 Lf-6437.1758 4712.2012 m-6437.2065 4712.002 -6437.3506 4711.6943 -6437.5391 4711.54 C-6437.5391 4712.2012 L-6437.1758 4712.2012 Lf-6425.1865 4700.8975 m-6425.4233 4700.6943 -6425.6401 4700.4463 -6425.8271 4700.1426 C-6435.8794 4700.1426 L-6435.8794 4710.1992 L-6435.5762 4710.3857 -6435.3271 4710.6025 -6435.1255 4710.8408 C-6435.1265 4700.8975 L-6425.1865 4700.8975 Lf-6418.6226 4699.6826 m-6418.0698 4699.0928 -6418.0298 4698.7227 -6418.0034 4698.4824 C-6418.8887 4698.4824 L-6418.8887 4699.6826 L-6418.6226 4699.6826 Lf-6418.8564 4698.0225 m-6418.0127 4698.0225 L-6418.0791 4697.6045 -6418.3232 4697.2188 -6418.7959 4697.0273 C-6418.7915 4697.6367 -6418.8564 4698.0225 Vf-6415.3623 4698.4824 m-6415.6455 4698.4824 L-6415.7334 4698.7979 -6415.8799 4699.1084 -6416.0674 4699.3838 C-6416.0674 4699.6826 L-6415.3623 4699.6826 L-6415.3623 4698.4824 Lf-6415.3545 4698.0225 m-6415.4302 4697.9199 -6415.4995 4697.8311 -6415.5518 4697.7734 C-6415.5479 4697.8555 -6415.5518 4697.9395 -6415.5601 4698.0225 C-6415.3545 4698.0225 Lf-6413.9185 4699.6826 m-6414.2446 4699.4648 -6414.4912 4699.2305 -6414.6577 4699.0332 C-6414.6577 4699.6826 L-6413.9185 4699.6826 Lf-6409.7202 4699.3477 m-6409.8066 4699.4287 -6409.9639 4699.5615 -6410.1226 4699.6826 C-6409.7202 4699.6826 L-6409.7202 4699.3477 Lf-6409.4751 4696.7549 m-6409.7329 4696.2461 -6410.0913 4695.8945 -6410.2778 4696.0684 c-6410.4248 4696.2041 -6409.4424 4697.9434 -6410.9009 4698.7725 c-6411.7158 4699.2354 -6412.8721 4698.873 -6413.2842 4698.3066 c-6415.5615 4695.1836 -6415.4746 4694.5586 -6418.8848 4692.6172 c-6421.6318 4691.0537 -6426.6943 4689.793 -6430.9155 4690.9121 C-6425.2935 4690.9102 -6421.4385 4694.8359 V-6419.7119 4696.3906 -6421.6025 4698.7246 v-6422.5015 4699.834 -6423.9551 4699.3887 -6424.5791 4698.7734 c-6424.7842 4698.5703 -6425.0752 4697.9551 -6425.4873 4697.9482 c-6426.2134 4697.9385 -6425.7378 4699.3242 -6425.5874 4699.582 c-6424.2217 4701.9063 -6421.5322 4700.9678 -6421.2622 4700.7656 c-6419.2622 4699.2705 -6419.1846 4698.6064 -6419.0127 4696.3145 C-6416.6328 4697.0898 -6417.6655 4699.0801 v-6417.8286 4699.3809 -6418.1245 4699.6318 -6418.1489 4699.7178 c-6418.2695 4700.1475 -6417.3423 4700.0029 -6417.0176 4699.7949 c-6415.4858 4698.8086 -6415.7881 4697.1914 -6415.8018 4696.8613 C-6414.6602 4698.9248 -6413.8154 4699.5469 -6412.1675 4699.8887 c-6410.8633 4700.1602 -6408.3857 4698.9121 -6409.4751 4696.7549 cf-6408.3096 4698.8301 m-6408.5454 4698.7422 -6408.7817 4698.6357 -6409.0142 4698.5215 C-6409.0142 4699.6826 L-6408.3096 4699.6826 L-6408.3096 4698.8301 Lf-6406.8994 4699.0088 m-6407.1143 4699.0625 -6407.3794 4699.0518 -6407.6055 4699.0186 C-6407.6055 4699.6826 L-6406.8994 4699.6826 L-6406.8994 4699.0088 Lf-6404.7822 4699.6826 m-6404.0767 4699.6826 L-6404.0767 4698.4824 L-6404.7822 4698.4824 L-6404.7822 4699.6826 Lf-6406.1934 4699.6826 m-6405.4878 4699.6826 L-6405.4878 4698.4824 L-6406.0586 4698.4824 L-6406.0967 4698.5342 -6406.1426 4698.585 -6406.1934 4698.6328 C-6406.1934 4699.6826 Lf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed 3)0 Auu0 J 0 j 1 w 4 M []0 d0 XR-2589.5 860.291 m-2490.5696 860.291 L-2490.5696 843.9272 L-2589.5 843.9272 L-2589.5 860.291 Lnuu0 O0 0 0 1 k-2493.0071 849.6094 m-2492.7832 849.5537 -2492.5879 849.8643 -2492.6721 850.0039 C-2492.2161 849.6274 -2492.2063 850.0557 -2492.1472 849.3262 C-2491.8545 848.9683 -2491.5422 849.4639 -2491.8752 849.7598 C-2491.0313 849.3135 L-2491.5359 849.1997 L-2491.3984 848.5933 -2490.7295 849.3809 -2490.5696 848.6743 C-2491.4832 848.7334 L-2491.4375 848.5313 L-2491.6455 848.749 -2492.0496 848.6582 -2492.1904 848.5732 C-2492.1682 848.4736 -2492.1824 848.3115 -2492.0212 848.2935 C-2493.1243 848.2471 -2492.3184 849.3545 -2493.2336 849.5557 C-2493.1763 849.541 -2493.1052 849.5493 -2493.0071 849.6094 Cf-2493.9441 848.125 m-2494.3289 848.8853 L-2494.9744 848.6895 L-2494.9817 848.9517 -2495.4519 849.1641 -2495.1335 849.3955 C-2495.0713 849.3545 -2494.9482 849.2759 -2494.8489 849.2998 C-2494.9209 849.8672 -2495.7073 849.583 -2495.5176 850.1572 C-2495.0071 850.0068 -2494.9287 850.1318 -2494.6145 849.6709 C-2494.1465 849.7236 -2493.8057 849.8545 -2493.5872 850.0615 C-2493.4482 849.9751 -2493.4287 849.6274 -2493.2522 849.5576 C-2493.2913 849.5664 -2493.3271 849.5752 -2493.3721 849.5796 C-2493.3911 848.7261 L-2493.5383 848.9063 -2493.6775 848.8213 -2493.8408 848.8389 C-2493.0852 847.8423 L-2493.3289 847.0435 -2494.0713 847.5127 -2494.3679 847.1807 C-2494 847.8984 -2494.6609 847.5376 -2493.9441 848.125 Cf-2493.2522 849.5576 m-2493.2473 849.5576 -2493.2393 849.5566 -2493.2336 849.5557 C-2493.2393 849.5566 -2493.2473 849.5566 -2493.2522 849.5576 Cf-2549.7073 854.5225 m-2549.8679 854.5376 -2549.9153 854.7393 -2549.9385 854.8408 C-2548.1296 854.8247 L-2548.1863 854.6006 -2548.7073 854.3232 -2548.3591 854.1895 C-2548.5144 853.9414 -2548.9873 854.1533 -2549.0559 854.4561 C-2548.9248 854.1143 L-2549.3416 854.5518 -2549.6262 853.6919 -2549.3545 853.4336 C-2549.3896 853.4385 L-2550.5439 855.123 L-2550.1201 855.2212 -2550.2175 854.5435 -2549.7073 854.5225 Cf-2586.8567 853.665 m-2586.6223 853.5869 -2586.5935 853.5059 -2586.6201 853.4229 C-2586.7041 853.4854 -2586.7839 853.5576 -2586.8567 853.665 Cf-2550.8137 855.5181 m-2551.1753 856.0454 L-2551.0305 855.9033 -2550.9033 855.7139 -2550.8137 855.5181 Cf-2548.3088 847.499 m-2548.3081 847.4712 -2548.3042 847.4463 -2548.3137 847.4087 C-2548.4761 847.6782 L-2548.4736 847.6782 -2548.4729 847.6782 -2548.4719 847.6782 C-2548.4121 847.6187 -2548.3584 847.5591 -2548.3088 847.499 Cf-2559.0212 857.499 m-2559.0601 857.5127 -2559.0935 857.5181 -2559.1399 857.5356 C-2559.0967 857.5313 -2559.0576 857.5176 -2559.0212 857.499 Cf-2543.4087 844.4854 m-2544.2129 844.9927 L-2544.1057 844.7524 -2544.4937 844.8247 -2544.3242 844.5449 C-2544.3855 844.583 -2544.6729 844.6782 -2544.5945 844.8013 C-2544.4304 844.7856 L-2544.8545 845.4854 -2544.5977 845.7544 -2545.3008 846.2871 C-2544.8643 846.7017 -2544.6729 846.3223 -2544.4417 846.0039 C-2544.3633 845.9551 -2544.2976 845.9336 -2544.2312 845.9072 C-2543.5625 844.9292 L-2543.4087 844.4854 Lf-2575.6504 849.6934 m-2575.6416 849.6392 L-2575.6497 849.6582 -2575.6511 849.6763 -2575.6504 849.6934 Cf-2575.6064 849.415 m-2575.6416 849.6392 L-2575.5984 849.5269 -2575.4329 849.4199 -2575.6064 849.415 Cf-2550.6809 855.0654 m-2550.6919 855.1953 -2550.7383 855.3545 -2550.8137 855.5181 C-2550.5439 855.123 L-2550.5823 855.1152 -2550.6328 855.0879 -2550.6809 855.0654 Cf-2550.0671 853.5376 m-2549.3896 853.4385 L-2549.1399 853.0752 L-2549.3992 853.2124 -2549.7024 853.3062 -2550.0671 853.5376 Cf-2557.9512 857.9102 m-2559.3545 858.0176 -2557.6064 857.0869 -2558.2512 856.8887 C-2558.6409 856.9854 -2558.7783 857.3765 -2559.0212 857.499 C-2557.9082 857.165 -2559.1721 858.7856 -2558.0496 858.5791 C-2558.2092 859.2856 -2558.8591 859.3496 -2559.24 859.1582 C-2559.6711 858.4771 -2558.8633 858.6592 -2558.7656 857.9912 C-2559.2161 858.1021 -2559.1367 858.2261 -2559.3279 858.6064 C-2560.0352 858.4478 -2560.7913 859.4429 -2561.2136 858.499 C-2561.7256 858.6494 -2561.6919 858.9751 -2561.9863 859.334 C-2562.0449 860.063 -2561.2249 859.7168 -2561.0352 860.291 C-2561.0745 860.2295 -2561.1511 860.1064 -2561.1289 860.0039 C-2560.6863 860.1572 L-2561.1064 859.9033 -2560.6279 859.4287 -2560.4033 859.3716 C-2560.24 859.3564 -2559.9153 859.3232 -2559.96 859.5254 C-2560.2073 859.6816 L-2559.8889 859.9126 -2559.5049 859.1504 -2559.1687 859.5454 C-2559.1511 859.709 -2559.2783 859.7856 -2559.2976 859.8877 C-2558.9209 859.3896 -2558.5576 859.4185 -2558 859.0664 C-2558.3232 859.7896 L-2557.8772 858.9893 -2556.8672 859.2168 -2556.1672 859.6392 C-2556.2449 859.5166 -2556.3848 859.4307 -2556.3008 859.291 C-2555.8896 859.1182 -2555.5791 859.6143 -2555.7695 859.9951 C-2555.3679 859.3955 -2554.2393 860.5 -2553.6919 859.7207 C-2551.1753 856.0454 L-2551.2695 856.1377 -2551.3704 856.2124 -2551.4744 856.2437 C-2551.7031 855.6094 -2551.8264 855.6865 -2551.4255 855.0879 C-2551.8191 855.4238 -2551.6687 855.9336 -2552.26 855.96 C-2552.0281 855.6406 -2551.9695 854.9121 -2552.5359 854.8369 C-2553.9519 855.4712 -2554.8904 857.2759 -2556.2129 858.1982 C-2556.2617 857.709 -2557.3 857.8462 -2557.8047 857.731 C-2557.6121 857.2061 -2557.2375 857.0566 -2556.8489 856.9502 C-2557.0928 856.917 -2557.5127 856.9033 -2557.8242 856.8799 C-2557.9512 857.9102 Lf-2554.6631 856.2661 m-2554.6985 856.2227 -2554.7351 856.1982 -2554.7727 856.1753 C-2554.7527 856.2158 -2554.72 856.2471 -2554.6631 856.2661 Cf-2556.7305 856.9648 m-2556.7256 856.9473 -2556.7273 856.9326 -2556.7256 856.9126 C-2556.7664 856.9238 -2556.8071 856.9385 -2556.8489 856.9502 C-2556.8071 856.9541 -2556.76 856.96 -2556.7305 856.9648 Cf-2551.0127 853.9604 m-2550.9287 853.8213 -2550.8665 853.7822 -2550.7825 853.6416 C-2550.8342 853.6895 -2550.8992 853.7271 -2550.9617 853.7695 C-2551.0212 853.8354 -2551.0496 853.9014 -2551.0127 853.9604 Cf-2550.7295 854.8213 m-2550.7744 855.0225 L-2550.7383 855.0449 -2550.7129 855.0493 -2550.6809 855.0654 C-2550.6711 854.957 -2550.6816 854.8662 -2550.7295 854.8213 Cf-2563.3137 853.4873 m-2563.4482 853.5933 L-2563.3672 853.5854 -2563.3323 853.542 -2563.3137 853.4873 Cf-2559.5144 857.0796 m-2559.0264 857.0313 -2559.4561 856.3496 -2558.7656 856.3462 C-2558.9683 856.3013 L-2558.4729 855.9893 -2557.6023 856.1328 -2557.0137 856.1064 C-2557.0801 856.3984 -2556.6567 856.4604 -2556.7256 856.9126 C-2556.3232 856.8062 -2555.9248 856.7061 -2555.7175 856.2393 C-2555.4683 856.3926 -2555.0896 855.9824 -2554.7727 856.1753 C-2554.9065 855.9019 -2554.3215 855.2515 -2555.0928 855.5854 C-2555.0305 855.5479 -2555.0696 855.4854 -2555.0081 855.4473 C-2555.5049 855.0664 -2555.7041 855.7124 -2556.1321 855.7212 C-2556.3879 855.4517 -2555.7136 855.2856 -2555.9551 855.1782 C-2556.4895 855.4292 -2557.6321 854.8535 -2557.5967 855.8677 C-2557.9856 855.9395 -2558.0393 855.7158 -2558.1553 855.5303 C-2558.7705 856.6108 -2560.4385 855.0664 -2560.4329 856.4478 C-2560.2083 856.3936 -2559.8423 856.4229 -2559.5127 856.1274 C-2559.5144 857.0796 Lf-2551.8323 854.0313 m-2551.8623 854.0254 -2551.9023 854.0303 -2551.9272 854.0181 C-2551.8992 854.0254 -2551.8643 854.0303 -2551.8323 854.0313 Cf*u1 D-2545.6736 858.0356 m-2545.8777 858.9395 L-2547.0398 859.1553 -2547.46 858.9014 -2548.4761 858.9375 C-2548.5537 858.8135 -2548.4304 858.7349 -2548.3679 858.6953 C-2549.0823 858.7998 -2550.1511 858.6104 -2550.6711 859.0254 C-2550.8984 859.0181 -2551.4951 858.731 -2551.2693 858.4648 C-2551.3799 858.5454 -2551.5063 858.623 -2551.6335 858.5942 C-2551.6672 858.2695 -2551.3489 858.5015 -2551.3416 858.2349 C-2551.4424 858.2134 -2551.4817 858.1504 -2551.5049 858.2524 C-2551.3352 857.9736 -2551.6809 857.1509 -2550.8896 857.1719 C-2550.5833 857.9307 -2551.4385 857.2598 -2551.2576 858.0967 C-2550.9951 858.1021 -2551.0256 857.7783 -2551.0032 857.6763 C-2550.6687 857.6953 -2550.6775 857.9053 -2550.6953 858.0967 C-2550.5671 857.8369 -2550.1465 858.1982 -2549.9695 857.8037 C-2549.3191 857.7393 -2550.0049 858.4326 -2549.5801 858.4229 C-2549.3352 857.5752 L-2548.6289 857.7349 L-2547.6064 857.4375 -2548.7751 856.2705 -2547.6064 855.791 C-2547.76 856.2334 -2547.2913 856.9766 -2546.7473 857.1533 C-2547.0728 857.1846 -2547.6743 857.7373 -2548.0945 857.4854 C-2547.5022 858.1494 -2548.9097 857.5654 -2548.6023 858.3252 C-2548.3096 857.9648 -2547.8215 857.917 -2547.4409 858.1108 C-2547.5657 858.1895 L-2547.1609 858.2793 -2546.8545 857.3926 -2546.2959 857.731 C-2546.0183 857.7041 -2546.0703 857.9429 -2546.1191 858.1416 C-2545.8843 858.0142 -2545.6743 857.8486 -2545.6736 858.0356 Cf0 D-2546.2783 858.2134 m-2546.6497 858.1294 L-2546.5615 858.2695 -2546.4231 858.2646 -2546.2783 858.2134 Cf*U-2499.1377 848.2349 m-2499.1008 848.2573 -2499.0583 848.2803 -2499.0249 848.3037 C-2499.0496 848.2646 -2499.0923 848.2471 -2499.1377 848.2349 Cf-2532.0967 847.9102 m-2531.8816 847.9385 L-2531.9656 847.9092 -2532.0344 847.9053 -2532.0967 847.9102 Cf-2527.2693 845.1104 m-2526.9551 844.9126 L-2527.0791 844.9253 -2527.1763 845.0039 -2527.2693 845.1104 Cf-2501.7024 848.1768 m-2501.7129 848.1709 L-2501.7305 848.1846 -2501.7439 848.2041 -2501.7625 848.2158 C-2501.7024 848.1768 Lf-2517.5872 847.0933 m-2517.5393 847.165 -2517.4856 847.23 -2517.4121 847.2803 C-2517.4209 847.1963 -2517.4863 847.1353 -2517.5872 847.0933 Cf-2527.3271 845.1475 m-2527.3191 845.1553 -2527.3145 845.1572 -2527.3081 845.1631 C-2527.2959 845.1455 -2527.2825 845.1265 -2527.2693 845.1104 C-2527.3271 845.1475 Lf-2534.2231 845.4385 m-2534.2693 845.4648 -2534.3113 845.4854 -2534.3608 845.5225 C-2534.2959 845.5059 -2534.2561 845.4741 -2534.2231 845.4385 Cf-2533.9199 847.8408 m-2533.9695 847.8623 -2534.0168 847.8887 -2534.0537 847.9253 C-2533.9199 847.8408 Lf-2541.3577 846.1934 m-2541.6472 846.3145 L-2541.5049 846.3013 -2541.4199 846.2544 -2541.3577 846.1934 Cf-2534.6863 847.2856 m-2534.7031 847.3252 -2534.72 847.3633 -2534.7312 847.4014 C-2534.6912 847.375 -2534.6721 847.3252 -2534.6863 847.2856 Cf-2497.2976 850.7617 m-2497.3042 850.7617 -2497.3113 850.7646 -2497.3152 850.7646 C-2497.3225 850.8633 L-2497.2976 850.7617 Lf-2496.5935 849.5269 m-2496.5105 849.5015 -2496.4241 849.479 -2496.3391 849.457 C-2496.4336 849.4517 -2496.5256 849.4785 -2496.5935 849.5269 Cf-2513.3809 848.457 m-2513.3042 848.5796 -2513.1243 848.7261 -2513.2083 848.8662 C-2513.0615 848.6895 -2513.0713 848.2603 -2513.3809 848.457 Cf-2498.7092 856.0664 m-2498.6631 855.9517 -2498.6057 855.8643 -2498.5481 855.7783 C-2498.6553 855.9019 -2498.7493 856.0039 -2498.7092 856.0664 Cf-2498.5481 855.7783 m-2498.4951 855.7173 -2498.4385 855.6533 -2498.3911 855.5869 C-2498.4463 855.6416 -2498.4993 855.7061 -2498.5481 855.7783 Cf-2515.3313 855.4912 m-2515.3503 855.4336 -2515.3799 855.3853 -2515.4199 855.3701 C-2515.4082 855.4854 -2515.3762 855.5103 -2515.3313 855.4912 Cf-2496.1335 849.5928 m-2496.0879 849.3911 -2494.9817 848.9517 -2495.9121 848.8486 C-2495.8762 848.2192 -2495.3152 848.5576 -2495.0671 848.4019 C-2495.2473 848.2544 -2494.9775 847.998 -2495.0322 847.7734 C-2495.1553 847.8496 -2495.3015 848.0303 -2495.5049 847.9854 C-2495.5984 847.6982 -2495.2898 847.5024 -2495.0488 847.6104 C-2495.3457 847.2783 -2494.6721 847.1118 -2495.0923 846.8574 C-2495.9905 847.0791 -2496.6252 847.3076 -2497.2568 848.2261 C-2496.7449 848.0752 -2496.1721 847.8877 -2495.7522 848.1406 C-2495.9287 848.6846 L-2496.4033 848.2061 -2496.6963 848.563 -2497.1631 848.5127 C-2496.1145 848.8013 L-2495.6233 849.2544 -2495.9519 849.3584 -2496.3391 849.457 C-2496.2439 849.4639 -2496.1577 849.4966 -2496.1335 849.5928 Cf-2496.8401 854.3662 m-2496.8225 854.3809 L-2496.8071 854.3623 -2496.7881 854.3496 -2496.7783 854.3267 C-2496.8401 854.3662 Lf-2541.3042 857.2017 m-2541.3943 857.4077 L-2541.3191 857.3145 -2541.2959 857.2515 -2541.3042 857.2017 Cf-2497.4656 851.731 m-2497.4648 851.731 L-2497.4719 851.7373 -2497.4736 851.7373 -2497.4656 851.731 Cf-2539.0632 857.2437 m-2539.0664 857.2583 -2539.0696 857.2744 -2539.0752 857.291 C-2539.0671 857.2744 -2539.0671 857.2583 -2539.0632 857.2437 Cf-2538.4641 845.5142 m-2538.4683 845.4893 -2538.4695 845.4648 -2538.4792 845.4404 C-2538.5271 845.4712 -2538.5039 845.4966 -2538.4641 845.5142 Cf-2539.0615 857.1934 m-2539.0615 857.21 -2539.0601 857.2261 -2539.0632 857.2437 C-2539.0615 857.2261 -2539.0576 857.209 -2539.0615 857.1934 Cf-2528.1641 855.1963 m-2528.1985 855.1021 -2528.2527 855.0127 V-2528.2737 855.063 -2528.2527 855.1221 -2528.1641 855.1963 Cf-2530.3152 854.3911 m-2530.3152 854.3911 L-2530.3289 854.3711 -2530.3369 854.3535 -2530.3545 854.3311 C-2530.3152 854.3911 Lf-2513.8896 846.0068 m-2513.9961 845.999 -2514.0759 846.0127 -2514.1433 846.0356 C-2514.0657 846.0493 -2513.9817 846.0479 -2513.8896 846.0068 Cf-2539.0752 857.291 m-2539.0977 857.3486 -2539.1296 857.4077 -2539.1824 857.4814 c-2539.1243 857.4033 -2539.0935 857.3433 -2539.0752 857.291 Cf-2524.8843 852.4478 m-2524.9072 852.4692 -2524.9287 852.4893 -2524.9504 852.5078 C-2524.9373 852.5181 -2524.9241 852.5225 -2524.9111 852.5352 C-2524.8843 852.4478 Lf-2523.7617 852.8486 m-2523.8 852.9102 -2523.8176 852.9741 -2523.8391 853.0303 C-2523.4385 852.8037 -2522.7024 853.0493 -2522.6152 852.4712 C-2522.7512 852.4854 -2523.4561 852.1455 -2523.3359 851.8062 C-2523.6152 851.9512 -2524.0281 851.5454 -2524.1785 851.6406 C-2523.72 851.957 -2524.1289 852.1289 -2524.4385 852.3232 C-2524.72 852.1553 -2524.3855 851.8584 -2524.6279 851.7515 C-2525.2793 851.8145 L-2524.7119 851.8916 L-2524.8843 852.4478 L-2524.8633 852.4292 -2524.8489 852.417 -2524.8264 852.3955 C-2523.8665 852.1353 -2524.7449 853.21 -2523.7617 852.8486 Cf-2523.8391 853.0303 m-2523.8992 853.0654 -2523.9519 853.1079 -2523.9929 853.167 C-2523.9023 853.1582 -2523.8672 853.1016 -2523.8391 853.0303 Cf-2519.9172 853.9478 m-2519.8679 853.9292 -2519.8145 853.9033 -2519.7473 853.8599 c-2519.7793 853.8809 -2519.8535 853.9077 -2519.9172 853.9478 Cf-2548.6584 853.167 m-2548.6416 853.3311 -2548.0823 853.6685 -2548.0923 853.2407 C-2548.0923 853.2407 L-2548.2583 853.1982 -2548.4255 853.1533 -2548.5935 853.1064 C-2548.6584 853.167 Lf-2509.2336 851.4604 m-2509.2959 851.4478 -2509.3584 851.4429 -2509.4209 851.4502 C-2509.4343 851.4712 -2509.4473 851.4951 -2509.4573 851.5166 C-2509.4192 851.5796 -2509.2959 851.5015 -2509.2336 851.4604 Cf-2523.1631 851.605 m-2523.2656 851.6709 -2523.3113 851.7383 -2523.3359 851.8062 C-2523.2695 851.7725 -2523.2083 851.7173 -2523.1631 851.605 Cf-2509.1985 852.4785 m-2509.1191 852.6006 -2509.0022 852.7871 -2508.9856 852.9502 C-2508.8232 852.9541 -2508.7092 852.7295 -2508.5439 852.6494 C-2508.7305 852.7119 -2508.9463 852.6685 -2509.1985 852.4785 Cf-2508.5305 852.6416 m-2508.5352 852.6455 -2508.5398 852.6475 -2508.5439 852.6494 C-2508.5393 852.6494 -2508.5352 852.644 -2508.5305 852.6416 Cf*u1 D-2548.9912 852.9854 m-2549.0393 853.0181 -2549.0889 853.0479 -2549.1399 853.0752 C-2549.0625 852.9604 L-2549.1912 852.9185 -2549.3191 852.8774 -2549.4473 852.8311 C-2549.4937 852.8584 -2549.5439 852.8843 -2549.6057 852.8984 C-2549.5808 852.8843 -2549.5615 852.8389 -2549.5496 852.792 C-2549.5913 852.7764 -2549.6321 852.7593 -2549.6729 852.7422 C-2549.9792 853.1851 -2550.7417 853.5088 -2550.9617 853.7695 C-2551.2527 853.959 -2551.6089 854.0664 -2551.8323 854.0313 C-2551.6252 854.041 -2551.3503 853.9517 -2551.4329 853.707 C-2551.8533 853.4517 -2552.0576 852.7173 -2552.7832 853.3486 C-2552.3577 853.3389 L-2553.3145 854.2896 L-2553.6497 853.8955 -2552.8369 853.8145 -2552.7041 853.4727 C-2553.4482 853.9414 -2554.0671 852.6895 -2554.4121 853.5127 C-2554.4607 853.0244 -2554.5422 852.21 -2555.0305 852.2583 C-2554.6785 852.8145 -2555.3232 852.6157 -2555.0344 853.2119 C-2555.2031 853.4912 -2555.5791 853.0356 -2555.6072 853.4014 C-2555.5615 853.1992 L-2556.3953 852.4263 -2556.6682 853.6377 -2557.0249 854.0356 C-2558.0232 854.2349 -2558.4817 853.9185 -2559.2959 854.0015 C-2559.3279 853.6743 -2559.5496 852.7744 -2559.8762 852.8086 C-2560.0281 853.2515 -2560.7649 853.4561 -2560.8401 854.0225 C-2560.2561 854.2598 -2560.3623 853.5479 -2560.0127 853.415 C-2559.7217 854.0093 -2559.9863 854.0024 -2559.5889 854.3584 C-2559.9097 854.1274 -2561.0383 854.6685 -2561.3896 854.1104 C-2561.2656 854.0313 L-2561.8264 853.6934 -2561.9336 852.291 -2562.8679 853.1396 C-2563.3137 853.4873 L-2563.2922 853.4307 -2563.2898 853.3643 -2563.2783 853.3135 C-2564.0081 853.2544 -2563.8088 852.6094 -2564.6145 853.1182 c-2564.5522 853.0791 -2564.5913 853.0166 -2564.5281 852.9785 C-2564.9873 852.6597 -2565.4504 853.2998 -2565.7976 853.4336 C-2566.0095 852.9604 -2565.7473 852.9683 -2565.6162 852.6265 C-2566.4241 852.4429 -2567.2959 853.2544 -2567.7976 853.8311 C-2568.3184 853.5537 L-2568.0095 853.3584 -2567.6321 852.8599 -2567.7263 852.5742 C-2568.0127 852.6685 -2567.9573 852.8926 -2568.3623 852.8013 C-2568.2932 852.499 -2568.1233 852.2173 -2567.9329 851.8369 C-2568.7705 851.3311 -2568.1201 852.9092 -2568.7063 851.9814 C-2568.9695 851.9751 -2569.1223 852.417 -2569.1511 852.7822 C-2569.6279 852.3037 L-2569.6809 852.7695 -2570.2695 852.7959 -2570.6553 852.8662 C-2570.7024 853.0664 -2570.3447 853.3623 -2570.1985 853.1816 C-2570.2273 853.5479 -2570.6377 853.7192 -2570.9016 853.7124 C-2570.9983 852.7373 -2572.6296 853.8535 -2572.3176 852.7041 C-2573.5032 853.021 -2575.1687 853.1201 -2575.9512 853.5269 C-2576.2092 853.2573 -2576.7351 853.2437 -2576.4199 852.7856 C-2577.3743 852.7822 -2577.8665 853.7832 -2578.8137 853.5166 C-2578.8921 853.394 -2578.3855 853.5078 -2578.4192 853.1816 C-2579.0383 853.5732 -2579.5457 852.7695 -2580.5063 853.0303 C-2580.3447 853.0127 -2580.2976 852.8115 -2580.2751 852.71 C-2580.2583 852.8716 -2580.6687 853.0454 -2580.9172 853.2017 C-2581.0569 853.1182 -2580.7312 853.0854 -2580.8096 852.9604 C-2582.6653 852.4873 -2584.0791 853.8135 -2585.9248 853.7695 c-2585.3977 853.7822 -2585.1985 853.1353 -2585.1929 852.8716 C-2585.7092 852.8599 L-2585.9082 853.1816 -2586.2959 853.1816 -2586.6201 853.4229 C-2586.6599 853.3013 -2586.8176 853.1709 -2586.6567 853.0181 C-2587.6768 852.3643 -2588.25 854.1982 -2589.5 853.8623 C-2587.9863 852.5591 L-2588.3608 852.105 L-2587.6953 851.5127 L-2588.0928 851.1553 -2588.4385 851.9814 -2588.4863 851.4912 C-2588.4023 851.3535 -2588.2 851.3975 -2588.1936 851.1328 C-2588.5752 850.9414 -2588.6052 851.3062 -2588.8921 851.4014 C-2588.1362 850.4053 -2586.6543 850.4209 -2585.8567 850.1768 C-2585.7312 850.0977 -2585.9641 850.417 -2585.9863 850.5181 C-2585.6609 850.4854 -2585.4656 850.7959 -2585.0559 850.623 C-2584.8015 850.2017 -2585.25 850.3135 -2585.4519 850.2695 C-2585.4241 849.9033 -2585.3225 849.9253 -2585.0977 849.8701 C-2585.0488 850.3584 -2583.8633 850.0435 -2583.5735 850.6392 C-2582.3721 850.4854 -2583.7656 849.375 -2582.5928 849.5869 C-2582.2424 850.1455 L-2581.5615 849.7139 -2580.6809 849.3311 -2579.9104 849.4502 C-2580.0728 849.4683 L-2580.1809 849.707 -2580.0022 849.8545 -2579.9231 849.9766 C-2579.3408 850.2158 -2578.8176 849.5376 -2578.4648 850.0967 C-2577.8008 849.5024 -2576.6936 849.063 -2575.9343 848.7568 C-2575.7295 849.4932 -2576.9248 849.3809 -2577.2407 849.8413 C-2576.5496 849.8389 L-2576.9768 849.8486 -2577.1455 850.1289 -2577.4016 850.5479 C-2576.7959 850.6846 -2576.5967 850.04 -2576.0225 849.8535 C-2576.0671 850.0537 -2575.9905 850.1768 -2575.7256 850.1816 C-2575.6504 849.6934 L-2575.6455 849.7334 -2575.6162 849.7705 -2575.5344 849.8013 C-2574.5127 849.5024 L-2574.7295 849.2935 -2574.74 848.8677 -2575.0039 848.8623 C-2574.9097 849.1475 -2575.1335 849.2041 -2575.3977 849.1963 C-2575.1663 848.8774 -2575.6553 848.9272 -2575.6497 848.6631 C-2575.1201 848.6763 -2574.4695 848.6104 -2574.1223 848.4766 C-2574.0095 848.9272 L-2573.5049 849.041 -2572.9719 848.7896 -2572.6296 848.9209 C-2572.7375 849.1597 L-2572.1321 849.2979 -2571.5359 849.0078 -2570.9983 849.4473 C-2570.4583 848.9326 -2569.7783 848.5039 -2569.3369 847.9648 C-2569.1008 847.3843 -2567.7522 848.6953 -2567.1433 847.8774 C-2567.1023 847.9395 -2567.5615 848.3145 -2567.7693 848.5342 C-2567.3643 848.624 -2567.0422 847.9014 -2566.9153 848.5132 C-2567.8242 848.3076 -2566.8665 849.0015 -2567.2759 849.1753 C-2566.8503 849.1641 -2566.4016 849.0537 -2566.1929 848.8354 C-2566.8816 848.8398 -2565.9482 847.9893 -2566.6455 848.2559 C-2566.1052 847.7412 -2565.3679 847.5356 -2564.7241 847.7349 C-2564.7305 847.999 -2564.6511 848.1221 -2564.4111 848.231 C-2564.2175 847.8486 L-2563.9163 847.9185 -2564.8 848.3013 -2564.1936 848.4385 C-2563.5696 847.7832 -2562.3145 848.8096 -2562.0413 847.5977 C-2561.5657 848.0767 -2562.9463 848.083 -2562.2295 848.6685 C-2562.6465 849.1064 -2563.2217 848.605 -2563.3591 849.21 C-2562.9504 849.0376 -2563.21 849.7212 -2562.9463 849.7271 C-2562.4905 849.3545 L-2562.5913 849.3311 L-2561.8264 848.7603 -2560.6145 849.0342 -2559.6377 848.9375 C-2558.8103 848.3281 -2558.2407 847.4478 -2557.2483 847.5142 C-2557.5413 847.8716 -2556.4241 847.8584 -2557.0488 848.5132 C-2556.5896 848.8286 -2556.1362 848.4551 -2556.1272 848.1909 C-2556.5313 848.1006 -2556.2693 848.1064 -2556.6096 847.9766 C-2556.3799 847.6563 -2555.8503 847.6709 -2555.6328 847.8799 C-2555.7336 847.8564 -2555.6953 847.9185 -2555.7175 848.0181 C-2555.2351 848.2334 -2555.4863 847.6997 -2555.1377 847.5664 C-2555.0271 848.0142 -2554.3679 847.6865 -2554.0496 847.9185 C-2553.5879 847.2793 L-2553.8416 847.6992 -2553.1455 847.4326 -2553.0728 847.8188 C-2552.7417 847.5225 -2552.4641 847.0024 -2551.96 847.1157 C-2552.1682 847.3354 -2551.5 847.4326 -2551.4912 847.8584 C-2550.6279 848.2661 -2550.0615 846.6963 -2549.2439 847.3062 C-2549.2693 847.4063 -2549.4343 847.6865 -2549.1953 847.7935 C-2549.0071 847.6743 -2548.6775 847.7246 -2548.4761 847.6782 C-2548.4824 847.6904 L-2548.4785 847.6865 -2548.4761 847.6816 -2548.4719 847.6782 C-2548.3733 847.6553 -2548.3113 847.6021 -2548.3088 847.499 C-2547.9641 847.082 -2547.7864 846.6553 -2547.1079 846.3013 C-2547.1577 845.8135 -2547.7305 846.0024 -2547.9785 846.1597 C-2548.1929 846.6416 L-2548.3977 845.9053 -2548.8047 846.7695 -2548.9607 846.521 C-2548.5537 845.6582 -2547.3816 845.8701 -2546.6785 845.3398 C-2547.1072 844.6597 -2548.0398 844.5537 -2548.8535 844.6353 C-2548.4951 844.9287 L-2548.9209 844.9385 L-2548.5088 845.457 L-2548.9121 845.3662 -2549.2607 845.499 -2549.6252 845.4692 C-2549.1985 845.46 -2549.0322 846.1328 -2549.2737 846.0264 C-2549.7493 845.5479 -2549.7693 846.3389 -2550.1328 846.3096 C-2549.9304 846.3545 -2549.6672 846.3623 -2549.8369 846.6416 C-2550.5537 846.0557 -2550.7473 846.4375 -2551.3992 845.8115 C-2551.3184 846.625 -2552.2136 845.8926 -2552.3113 846.5591 C-2552.0088 846.6274 L-2552.6504 847.1187 L-2553.2424 846.4561 -2552.1262 846.4429 -2553.0271 845.9741 C-2553.8584 845.8926 -2553.8369 846.7471 -2554.4905 846.8101 C-2554.2751 846.3286 -2553.7568 845.915 -2553.2295 845.9287 C-2553.5488 845.6963 L-2553.3799 845.417 -2552.6504 845.4756 -2552.2864 845.5044 C-2552.8879 846.0576 -2552.0049 845.6743 -2551.7312 846.1064 C-2551.6809 845.6406 -2552.0671 845.7139 -2551.6111 845.3398 C-2552.0383 845.3486 -2552.1008 845.3877 -2552.6443 845.2119 C-2551.4695 845.4238 -2551.5879 843.5933 -2550.5625 843.9854 C-2551.0352 844.1963 -2550.3977 844.6582 -2550.3408 844.8843 C-2550.1184 844.8281 -2549.6672 844.7173 -2549.4817 844.6006 C-2549.6497 843.9272 L-2549.0522 843.6353 -2548.8447 845.0625 -2548.1553 844.3677 C-2548.0657 843.9648 -2548.7617 844.231 -2548.6377 844.1533 C-2547.6943 843.73 -2547.3545 844.8145 -2546.5168 845.3223 C-2546.4695 845.1201 -2546.4792 844.6934 -2546.1863 844.3369 C-2546.2783 844.7412 -2546.0615 844.9478 -2546.3911 845.2437 C-2546.1111 845.415 -2545.7793 845.1182 -2545.5322 844.9604 C-2546.1152 844.7236 -2545.2937 844.3799 -2545.1863 844.1377 C-2544.8843 844.2061 -2545.2783 844.541 -2545.4641 844.6582 C-2545.2217 844.7661 -2544.9336 845.3623 -2544.7959 844.7568 C-2544.7864 845.1816 -2545.4736 845.8774 -2545.9231 845.9873 C-2545.6201 846.0557 L-2545.8289 846.2734 -2545.8679 846.2119 -2546.1687 846.1455 C-2545.8743 846.4756 -2545.9033 846.8398 -2545.9719 847.1431 C-2546.0105 847.0811 -2545.9504 847.042 -2545.9873 846.9814 C-2546.2295 846.873 -2546.4153 846.9893 -2546.3591 847.2158 C-2546.5769 847.7876 -2546.0232 847.5732 -2545.8591 847.8584 C-2545.7351 847.8213 -2545.6111 847.7822 -2545.4895 847.7437 C-2544.2312 845.9072 L-2543.6936 845.6934 -2543.4519 846.1328 -2543.0481 846.4102 C-2542.9373 845.9185 L-2542.4695 845.9692 -2542.0281 846.125 -2542.3279 846.7471 C-2542.3447 846.583 -2542.4065 846.6221 -2542.5081 846.5977 C-2542.5215 846.665 -2542.5449 846.7124 -2542.5745 846.7515 C-2542.5842 846.7803 -2542.5896 846.8086 -2542.5977 846.8369 C-2542.0967 846.6782 -2541.7839 846.5752 -2541.7551 846.5566 C-2542.6057 847.2695 -2541.7976 847.4478 -2541.9399 848.3188 C-2541.0808 848.0352 L-2541.6016 847.7593 -2541.0903 847.6094 -2540.9055 847.4912 C-2540.8545 847.9814 -2540.2136 847.4873 -2539.9121 847.5557 C-2539.9343 847.6563 L-2539.6553 847.8262 -2539.1663 847.7783 -2538.8184 847.6455 C-2538.8342 847.4814 -2538.3879 846.6807 -2538.1736 846.1982 C-2538.7705 846.0142 -2538.4163 845.8184 -2538.4641 845.5142 C-2538.4023 845.542 -2538.2913 845.5479 -2538.2783 845.4854 C-2538.1929 845.3462 -2538.3943 845.2998 -2538.4111 845.1377 C-2539.0457 845.3662 -2539.6985 845.4307 -2539.9573 846.1143 C-2539.7625 846.4238 -2539.6252 845.8184 -2539.4072 846.0254 C-2539.7217 846.4854 -2540.1272 846.394 -2540.6543 846.3809 C-2540.8271 845.9712 L-2541.3577 846.1934 L-2541.1362 845.9766 -2541.2695 845.5479 -2540.7129 845.4648 C-2540.7839 845.0791 -2541.2649 845.5537 -2541.6057 845.4238 C-2541.78 845.9683 L-2541.7129 845.665 -2542.4424 845.6064 -2541.9241 845.1924 C-2541.0808 844.7471 L-2541.3152 844.375 L-2540.6023 844.2705 L-2540.7705 844.5518 L-2539.6252 844.1753 -2540.4329 845.6353 -2539.28 844.9927 C-2538.9192 844.333 -2538.5313 844.2622 -2537.8247 844.4229 C-2538.3359 844.5703 -2537.8772 844.8877 -2538.0696 845.2695 C-2537.5481 845.5449 -2537.3721 845.0015 -2537.1016 844.7437 C-2536.9688 845.0923 -2536.8743 845.3774 -2537.3401 845.3262 C-2537.3984 846.0557 -2536.7273 845.1997 -2536.6848 845.9512 C-2535.1416 845.9287 -2535.4482 843.5254 -2533.6443 844.4639 C-2533.7119 844.7661 L-2532.5664 844.3896 -2531.9055 844.7515 -2530.8447 844.5127 C-2530.0095 845.2832 L-2530.1963 845.4014 -2530.6985 845.9771 -2530.4641 846.3486 C-2530.8704 845.5688 -2531.3015 845.8413 -2531.7393 845.4238 C-2531.7839 845.6265 -2531.6057 845.7725 -2531.5281 845.8975 C-2531.7922 845.8896 -2531.9248 845.541 -2532.2737 845.6763 C-2532.2568 845.8369 -2531.8762 846.0303 -2532.1631 846.125 C-2532.6377 845.6455 L-2533.2727 845.874 -2532.9504 846.7935 -2533.6963 846.5732 C-2533.5576 846.1455 -2533.2744 845.5264 -2532.9856 845.4238 C-2533.3264 845.3311 -2532.5313 845.165 -2532.8423 844.9092 C-2533.3333 845.5435 -2533.5703 845.041 -2534.2231 845.4385 C-2534.1465 845.3496 -2534.1262 845.2256 -2533.9656 845.1865 C-2534.9128 844.9185 L-2534.6785 845.2896 -2535.6953 845.3262 -2535.6072 845.8774 C-2534.5977 846.105 -2534.8943 845.7725 -2533.7439 846.0854 C-2534.0696 846.21 -2534.4895 846.7705 -2534.6863 847.2856 C-2534.6963 847.2646 -2534.7129 847.2471 -2534.7483 847.2373 C-2534.9241 847.7822 -2534.7449 847.9287 -2534.7483 848.8809 C-2534.2231 848.2041 -2533.8721 848.7617 -2533.2527 848.3716 C-2533.1362 847.8496 -2533.6121 847.7061 -2533.9199 847.8408 C-2533.3743 847.4951 L-2533.4817 847.7349 L-2532.0967 847.9102 L-2532.3591 847.9385 -2532.4482 848.2407 -2532.5852 848.4688 C-2532.4065 848.4893 -2532.2295 848.6274 -2532.0413 848.7783 C-2532.0808 848.2803 -2532.0559 847.9287 -2531.8816 847.9385 C-2530.9905 848.0566 -2530.4951 848.5039 -2530.1663 849.0728 C-2530.1321 849.0615 -2530.0935 849.0493 -2530.0625 849.0376 C-2530.2119 848.5269 -2529.4297 848.1201 -2529.1536 847.5977 C-2529.1672 848.1265 -2528.6943 847.915 -2528.4375 848.1846 C-2528.3008 847.5791 -2528.4832 846.7432 -2528.7959 846.248 C-2529.3984 846.8013 -2529.1335 846.8062 -2529.4182 847.5923 C-2530.3848 848.1157 L-2530.1687 847.6328 L-2530.6511 847.4199 -2531.1145 848.0576 -2531.0791 847.4292 C-2530.8242 847.0103 -2530.4033 847.2646 -2530.1504 846.8438 C-2530.4695 846.6143 L-2529.9065 845.9966 -2530.1809 847.209 -2529.4993 846.7783 C-2529.75 846.2437 -2529.4375 846.7393 -2529.1455 846.3809 C-2529.3799 846.0093 -2530.3457 846.5342 -2530.1409 845.6265 C-2529.7864 845.2295 -2528.9482 846.6904 -2528.4792 845.7876 C-2528.5022 845.8896 L-2527.8103 846.0078 -2527.5671 845.4893 -2527.3081 845.1631 C-2527.0137 845.457 -2526.6072 845.0435 -2526.2881 845.0103 C-2526.2959 845.2744 L-2525.8457 845.1641 L-2526.0601 845.6455 -2526.3733 845.1509 -2526.76 845.2212 C-2526.7119 845.7119 L-2527.1577 845.1294 -2527.4551 846.0142 -2527.8008 846.4375 C-2527.2976 846.0127 -2526.3799 846.5576 -2526.2617 845.5977 C-2525.9504 846.0942 L-2525.8015 845.915 L-2525.5696 846.2871 -2525.8064 846.8701 -2526.2561 846.9814 C-2526.3342 846.8574 -2526.3733 846.7959 -2526.3496 846.6934 C-2526.5583 846.9126 -2526.75 847.2935 -2527.2551 847.1807 C-2526.9856 846.9209 L-2527.6145 846.8853 -2528.1863 847.0752 -2528.4016 847.5576 C-2527.4937 847.7622 -2526.6008 847.8057 -2525.7483 847.7832 C-2525.4968 846.6743 -2525.1985 846.0518 -2525.0703 845.021 C-2524.4983 844.8311 -2523.7217 844.6895 -2523.2249 845.0664 C-2523.2705 845.2695 L-2523.0281 845.375 -2522.8047 845.3188 -2522.6184 845.2017 C-2522.3623 845.4727 -2522.7937 845.7471 -2522.6152 845.8936 C-2521.7959 845.5479 L-2521.8464 846.0142 -2522.5359 846.0166 -2522.8633 846.0493 C-2522.8015 846.0103 -2522.6768 845.9326 -2522.7168 845.8701 C-2523.0977 845.6782 -2523.8071 846.4727 -2523.9736 845.7979 C-2524.1592 845.915 -2523.5967 845.2998 -2524.2249 845.2646 C-2524.6455 845.0103 -2524.7825 845.6157 -2524.8264 845.8184 C-2524.8333 846.083 -2524.1663 846.1807 -2524.3977 846.499 C-2524.0703 846.4648 -2523.9399 846.125 -2523.5212 846.3799 C-2523.8457 846.4121 -2524.2864 846.9478 -2524.4592 846.5376 C-2525.1008 847.0303 -2525.0088 848.2705 -2524.7063 848.3389 C-2524.7783 847.9502 -2523.5359 847.8599 -2524.3772 847.3535 C-2523.9993 846.8535 -2523.3088 846.8496 -2522.8145 846.5376 C-2522.8369 846.6377 L-2522.2231 846.5127 L-2522.3096 846.6509 -2522.4951 846.7695 -2522.5012 847.0313 C-2521.6511 846.3232 L-2522.1296 846.7998 -2521.3545 846.6543 -2521.1367 846.8643 C-2521.0457 846.46 -2520.7136 846.1641 -2521.0322 845.9326 C-2521.3904 845.6392 -2521.2407 846.1509 -2521.5664 846.1816 C-2521.1052 845.5449 L-2521.0657 845.6064 L-2520.7881 845.0854 L-2520.1599 845.1221 -2521.0625 846.2979 -2520.2576 845.7876 C-2520.3623 845.0767 L-2519.4304 845.1816 -2518.2336 845.9814 -2517.5752 845.6533 C-2517.7568 846.0576 -2517.8369 846.708 -2517.5872 847.0933 C-2517.8711 846.9712 -2518.4417 846.9966 -2518.8489 847.063 C-2518.9272 846.9385 -2518.3401 846.2227 -2517.8977 846.3765 C-2518.1121 845.2119 -2519.0105 847.0791 -2519.0625 845.8984 C-2520.1897 845.4873 -2519.9033 847.0356 -2520.8601 846.3433 C-2520.8733 846.8701 -2521.1321 846.6006 -2521.1824 847.0654 C-2520.8992 847.9253 -2519.9033 847.0356 -2519.2825 847.3369 C-2519.3433 847.375 -2519.4656 847.4541 -2519.4895 847.5537 C-2519.0457 847.708 -2518.8623 847.5908 -2518.5522 847.3955 C-2518.5913 847.333 L-2518.0496 846.8184 -2518.2561 847.7261 -2517.9373 847.958 C-2517.8137 847.8799 -2517.3704 848.0313 -2517.4417 847.6455 C-2516.8643 848.1465 L-2516.8921 847.5576 L-2516.5664 847.5225 -2516.4951 847.9121 -2516.2 847.5537 C-2516.1863 847.0269 L-2516.9951 846.8438 L-2516.5852 846.6719 -2516.8809 846.3398 -2516.4304 846.2295 C-2516.9336 846.8057 -2516.0745 846.5215 -2516.0249 847.0103 C-2515.6936 846.7139 L-2515.7783 846.8545 L-2515.5183 847.125 -2515.4688 846.6582 -2515.1653 846.7271 C-2515.5232 846.4336 -2515.7576 846.063 -2516.2136 846.4375 C-2515.8816 846.1416 -2515.2231 845.8135 -2515.0615 845.7959 C-2514.7129 845.5752 -2514.4695 845.9766 -2514.1433 846.0356 C-2514.7693 846.2471 -2513.9241 847.6328 -2515.1785 847.2544 C-2515.1553 847.1533 -2515.0537 847.1763 -2515.0144 847.2383 C-2515.1816 846.5654 -2515.7664 847.2803 -2516.0383 847.5376 C-2515.9683 847.9253 -2516.2527 848.021 -2515.7705 848.2349 C-2515.9287 847.9873 -2515.3643 847.3716 -2514.9055 847.6895 C-2514.9863 848.5181 L-2514.3184 848.6157 L-2514.3809 848.6553 L-2514.1296 849.1895 -2513.6682 848.5518 -2513.2083 848.8662 C-2512.8762 848.5703 -2511.6023 848.8057 -2512.1504 847.9385 C-2511.7375 848.457 -2511.3752 847.7959 -2510.9248 847.6846 C-2511.4863 847.3462 L-2510.8225 846.7524 -2511.0137 847.1353 -2510.4824 846.1924 C-2510.4287 846.4185 -2510.3103 846.605 -2510.4182 846.8438 C-2509.5264 846.8877 -2508.2527 847.1221 -2507.7295 846.4429 C-2507.1008 846.479 -2507.0022 847.4561 -2506.1201 847.0728 C-2505.9343 846.9561 -2506.2649 846.2979 -2505.6809 846.5356 C-2505.6416 846.5977 -2506.2432 847.1504 -2505.5928 847.0854 C-2505.1296 846.4473 -2504.5049 847.4375 -2503.9023 846.8843 C-2503.5842 847.1143 -2503.0322 847.0269 -2503.1472 847.5313 C-2503.6511 847.417 -2504.3643 847.5225 -2504.4729 847.7646 C-2504.4033 847.46 -2504.8313 847.4692 -2504.46 847.2349 C-2505.2217 846.8535 -2504.9543 847.5479 -2505.6377 847.2871 C-2505.6848 847.4893 -2505.2864 847.8457 -2505.1399 847.665 C-2505.1367 848.3545 -2506.4873 847.998 -2505.8799 848.8247 C-2505.1497 848.8843 -2504.9329 847.4473 -2504.3 848.1729 C-2504.5537 848.5923 -2504.9504 848.2373 -2505.2727 848.9604 C-2504.7527 849.2383 L-2504.3752 848.7393 L-2504.3977 848.8413 L-2503.4792 849.4727 -2503.5481 848.1318 -2502.7263 847.7856 C-2503.2024 847.3076 -2502.6162 846.5908 -2502.9744 846.2979 C-2502.4248 846.21 -2502.0212 846.3013 -2502.0176 846.9912 C-2503.0457 847.5537 -2502.0759 847.7207 -2503.0264 848.4077 C-2502.8704 848.6553 -2503.2527 849.417 -2502.6863 849.4932 C-2502.0481 849.0015 -2502.8772 848.9185 -2502.2407 848.6909 C-2502.2031 848.7524 -2502.1641 848.8145 -2502.1863 848.916 C-2501.8936 848.5576 -2501.8447 849.0454 -2501.4905 848.6494 C-2501.5745 848.7876 L-2501.1377 849.2061 -2501.0967 848.3135 -2500.7207 848.7695 C-2500.8711 848.2573 -2500.4683 848.3496 -2500.2351 848.0303 C-2500.6162 847.8369 -2500.8225 847.1021 -2501.5745 847.1431 C-2501.6653 847.5479 -2501.6104 847.7725 -2501.9192 847.9683 C-2501.4304 847.9185 L-2501.5359 847.9854 -2501.6162 848.0894 -2501.7129 848.1709 C-2502.1824 847.9604 L-2501.5872 847.6719 -2501.8601 847.2393 -2501.6072 846.8184 C-2501.0625 846.9951 -2501.1577 846.707 -2500.8152 846.8389 C-2500.8496 847.4326 -2499.7649 847.8535 -2499.1377 848.2349 C-2499.2351 848.2119 -2499.3608 848.2271 -2499.4287 848.2119 C-2499.8843 848.5869 -2499.1152 848.707 -2499.0984 848.8701 C-2498.7664 848.5732 L-2498.8289 848.6143 -2498.9153 848.7524 -2498.7737 848.8369 C-2498.3242 848.7261 -2498.3503 848.1377 -2497.9016 848.0264 C-2497.8679 848.3535 -2498.2473 848.8496 -2497.9683 849.021 C-2497.8721 849.3062 -2497.5657 850.0654 -2496.9695 849.7764 C-2496.9272 849.6509 -2496.7727 849.5811 -2496.5935 849.5269 C-2496.6184 849.5449 -2496.6497 849.5576 -2496.6609 849.5811 C-2496.2649 849.9375 L-2496.6023 850.4951 -2496.9473 849.6743 -2497.2864 850.2344 C-2497.3152 850.7646 L-2497.5791 850.7661 -2497.9375 850.9956 -2498.1023 851.2705 C-2497.7 851.3604 -2497.6152 851.2212 -2497.1653 851.1108 C-2497.1023 851.4463 -2497.4192 851.6953 -2497.4648 851.731 C-2497.3977 851.4292 L-2497.9343 850.9902 -2498.2 851.9375 -2498.8679 851.8389 C-2498.9688 851.8174 -2498.9072 851.7783 -2498.8848 851.6772 C-2499.4255 852.1909 -2499.9561 851.4873 -2500.4817 852.165 C-2500.3103 851.8853 L-2500.6682 852.1108 -2501.3679 852.6328 -2502.0671 853.1377 C-2502.0728 853.3438 L-2501.9951 853.4683 -2502.2576 853.4604 -2502.3984 853.3774 C-2502.3977 853.374 L-2502.7483 853.6265 -2503.0852 853.8584 -2503.3608 854.0313 C-2503.2727 854.1592 -2503.1599 854.2661 -2503.0305 854.2959 C-2502.9209 854.0537 -2502.2783 854.2524 -2502.3665 853.7017 C-2502.0696 854.0342 -2501.5913 853.5576 -2501.3733 853.7661 C-2501.7705 853.4126 -2501.0967 853.2471 -2501.0271 852.9429 C-2500.8936 853.291 -2500.4385 852.917 -2500.4905 853.3843 C-2500.4121 853.5059 -2500.6855 853.0742 -2500.8545 853.3545 C-2501.2705 853.7896 -2500.0928 853.7373 -2500.6111 854.1509 C-2499.9519 853.8232 -2499.0833 853.9648 -2498.4033 853.5352 C-2498.7839 853.3438 L-2498.4817 853.4126 -2497.7664 853.3086 -2497.7129 853.5342 C-2497.9375 853.5889 -2498.2 853.583 -2498.4873 853.6768 C-2498.5012 854.2041 -2497.7969 853.6729 -2497.7649 853.999 C-2496.9304 853.1265 L-2497.2959 853.0967 L-2497.0657 852.7764 -2496.3015 853.1631 -2495.7351 853.2373 C-2496.0601 853.959 -2496.5896 853.2559 -2497.1855 853.5454 C-2497.6184 853.8188 -2496.9182 854.2422 -2497.3279 854.415 C-2497.2217 854.583 -2496.9543 854.563 -2496.8225 854.3809 C-2496.6609 854.5127 L-2497.0264 855.1685 -2497.8457 855.0225 -2498.3911 855.5869 C-2498.3433 855.5166 -2498.3015 855.4424 -2498.2864 855.3662 C-2498.7063 855.1118 -2499.1328 855.1221 -2499.5422 855.2959 C-2499.3257 855.5024 -2499.24 855.3623 -2499.1162 855.2856 C-2499.1008 855.4478 -2499.4873 855.5181 -2499.6335 855.6982 C-2499.2527 855.8896 -2499.5625 856.0854 -2499.3215 856.1934 C-2499.5696 856.3496 -2499.7705 856.3037 -2500.0728 856.2349 C-2500.2295 855.9873 -2499.9431 855.8936 -2499.9751 855.5688 C-2500.2864 855.7646 -2500.4287 854.9873 -2500.8843 855.3623 C-2500.2783 855.499 -2501.0439 856.0688 -2501.2527 856.2876 C-2501.1511 856.3101 L-2501.3433 856.6909 -2501.5063 856.707 -2501.6392 856.3584 C-2501.3911 856.2017 -2501.1511 856.3101 -2501.2217 855.9229 C-2501.3855 855.9395 -2501.5488 855.9561 -2501.7344 856.0728 C-2501.5657 855.7935 L-2502.3799 855.874 L-2502.5088 856.2158 -2502.7241 856.6982 -2502.8369 857.2017 C-2503.0322 856.8926 -2503.3042 857.1504 -2503.4895 857.2695 C-2503.4033 857.1274 L-2503.7625 856.8354 -2504.5615 857.0791 -2504.6289 857.3809 C-2504.8855 857.1118 -2502.8152 855.457 -2504.6289 855.7373 C-2505.3184 855.7393 -2505.0583 856.7017 -2505.4519 857.0356 C-2505.4297 856.9375 -2505.4688 856.874 V-2505.7705 856.8037 -2505.8008 857.1709 -2506.0488 857.3262 C-2505.8679 857.4727 -2505.6057 857.479 -2505.5212 857.3398 C-2505.6121 857.7432 -2506.1497 857.3037 -2506.3809 857.6221 C-2506.0808 857 -2506.9641 857.3848 -2506.7312 857.0654 C-2507.3313 856.665 -2507.9729 857.1572 -2508.2881 857.6157 C-2508.6953 856.8354 -2509.0022 857.7192 -2509.6631 857.3584 C-2509.5615 857.3809 -2509.3772 857.2646 -2509.2351 857.3486 C-2508.8584 856.8535 -2509.9199 857.0889 -2509.3401 856.6353 C-2509.4641 856.7139 -2509.3489 856.8984 -2509.2217 856.8213 C-2508.9993 856.7656 -2508.7898 856.5479 -2508.8457 856.3223 C-2509.3843 855.8843 L-2509.1963 855.7646 L-2510.0137 855.1582 L-2510.0359 855.2573 -2509.9592 855.3809 -2509.9199 855.4429 C-2510.8679 855.1768 -2511.9519 855.5142 -2512.7825 855.4336 C-2512.9385 856.8311 -2514.8271 856.0313 -2515.4983 856.8896 C-2515.3184 856.4893 -2515.22 855.7822 -2515.3313 855.4912 C-2515.1816 855.4326 -2514.8752 854.8677 -2514.5359 854.9854 C-2514.4817 855.21 -2514.0625 855.4639 -2514.3323 855.7207 C-2513.3943 855.5615 -2514.4592 855.1079 -2514.1824 854.5879 C-2515.2217 854.7236 -2515.8313 855.542 -2516.4873 855.8711 C-2516.5039 855.7061 L-2516.9993 856.0181 L-2516.5945 856.1108 -2516.6145 856.9033 -2517.1362 856.6265 C-2517.0728 856.5869 L-2517.3704 856.2544 -2517.9895 856.6455 -2518.4543 856.5942 C-2518.7695 857.0518 L-2519.2351 857 -2519.2551 856.1475 -2519.4065 855.6367 C-2520.1362 855.5767 -2520.5576 856.2759 -2521.0759 856.6909 C-2521.3103 856.3188 -2522.4033 856.231 -2521.8242 855.7803 C-2522.4824 856.1079 -2522.3496 858.1006 -2523.4785 856.9966 C-2523.1855 856.6377 L-2524.2649 856.7124 -2525.8042 857.4263 -2526.3015 857.0488 C-2525.9033 855.7598 -2527.6497 855.7373 -2527.8416 854.4736 c-2527.7881 854.7622 -2528.1936 854.8584 -2528.2527 855.0127 C-2528.3416 854.8643 -2528.4895 854.7207 -2528.6465 854.9814 C-2528.2256 855.2349 -2528.9424 856.2935 -2528.1377 855.7832 C-2528.5449 856.6494 -2529.0696 857.3262 -2529.9617 857.2832 C-2529.9482 856.7559 L-2529.2424 856.916 L-2529.3137 856.5269 -2528.9504 856.5566 -2528.8015 856.3774 C-2530.1145 856.0811 -2528.6296 855.1431 -2529.9719 855.2119 C-2530.1016 855.5537 -2530.0176 855.4126 -2530.3665 855.5479 C-2530.2024 855.5303 -2530.1729 855.167 -2530.4373 855.1597 C-2530.6912 855.5811 L-2531.1599 854.7017 -2529.9153 855.0088 -2530.3152 854.3911 C-2529.7969 853.9771 -2528.8992 853.7559 -2529.0664 853.083 C-2529.9128 852.8389 -2529.8279 854.3433 -2530.7129 854.0376 C-2530.8071 853.7515 L-2531.1184 853.9463 -2531.1687 854.4102 -2531.3391 854.6904 C-2531.3545 854.5269 -2531.4336 854.4053 -2531.6335 854.3584 C-2532.1592 855.0356 -2532.5081 855.1685 -2532.9929 855.9077 C-2531.7024 855.3535 -2531.8896 856.4229 -2530.5576 855.9287 C-2530.7664 856.1475 -2531.7041 856.3076 -2531.7617 857.0356 C-2531.7493 856.5078 L-2532.1824 856.7822 -2532.6152 857.0537 -2533.1592 856.8799 C-2532.8271 856.583 L-2533.5481 856.9502 -2534.0256 855.7822 -2534.5945 856.6597 C-2534.3936 856.707 -2534.2305 856.6909 -2534.1064 856.6108 c-2534.4775 856.8462 -2534.9431 856.7935 -2535.3464 856.7041 C-2536.1809 857.5752 L-2536.1736 857.3135 -2536.7024 857.2979 -2536.4473 856.8799 C-2537.0481 856.4785 -2537.3313 857.2646 -2537.6785 857.3955 C-2538.2937 856.8354 -2537.1455 857.1455 -2537.0852 856.417 C-2537.9329 856.1729 -2538.8313 856.3936 -2539.3096 856.8677 C-2539.1367 856.9741 -2539.0527 857.0654 -2539.0615 857.1934 C-2539.0872 857.0269 -2539.4287 857.0703 -2539.6191 857.0654 C-2539.75 857.4077 L-2540.0671 857.1763 -2540.0225 856.9741 -2539.7527 856.7158 C-2540.0559 856.6494 -2540.4172 857.3086 -2540.7295 856.8145 C-2540.2119 856.4014 -2539.5522 856.7617 -2539.2825 856.5044 C-2540.3643 856.8423 -2540.3711 855.4604 -2541.7424 855.8955 C-2541.7593 855.731 -2541.5271 855.4126 -2541.7913 855.4077 C-2542.4033 855.5342 -2541.9512 856.1143 -2542.1423 856.4951 C-2541.6711 856.2822 -2541.4519 856.4912 -2541.1785 856.9238 C-2541.3042 857.2017 L-2541.3232 857.0576 -2541.6191 857.0493 -2541.7063 856.9102 C-2541.7825 857.4771 L-2541.7473 856.8496 -2542.2207 856.3716 -2542.5928 856.6064 C-2542.2168 857.0615 -2542.3184 857.0376 -2542.2161 857.7524 C-2542.7393 858.4292 -2542.8064 857.0869 -2543.3928 857.8037 C-2543.3489 857.6021 -2542.8369 857.4517 -2543.2793 857.2979 C-2543.6455 857.2705 -2543.5967 857.7593 -2543.8423 857.915 C-2543.5657 857.3926 -2543.6367 857.0044 -2543.3369 856.3843 C-2542.6863 856.3184 -2543.0745 856.3911 -2542.4385 856.1631 C-2542.9768 855.7212 L-2542.4255 855.6353 -2542.5759 855.123 -2542.5305 854.9229 C-2543.4719 854.3911 -2543.24 855.7168 -2543.8457 855.5796 C-2544.1377 855.9385 -2543.2783 855.6553 -2543.7351 856.0303 C-2544.3015 855.9541 -2543.8643 856.3716 -2544.5 856.5977 C-2544.3936 856.3584 L-2544.5879 856.0479 -2544.78 856.4307 -2545.0049 856.4829 C-2545.2522 856.6416 -2544.7249 858.2998 -2545.7417 858.3354 C-2545.6919 858.1895 -2545.6736 858.0967 -2545.6736 858.0356 C-2544.6816 853.6455 L-2545.7119 853.6563 -2546.8992 853.5342 -2548.0923 853.2393 C-2548.3733 852.3809 -2547.2407 852.5313 -2547.3137 852.1455 C-2546.7695 852.3213 L-2546.8 852.6851 -2547.9097 852.4336 -2547.4182 853.0767 C-2546.4573 852.8145 -2546.0212 853.2334 -2545.1096 852.4829 C-2545.3928 851.623 -2546.3103 852.6353 -2546.9033 851.9712 C-2546.6543 852.0269 -2546.4441 851.9326 -2546.24 851.8096 C-2546.7969 851.6997 -2547.3928 851.5811 -2548.0264 851.4478 C-2548.1687 851.6563 L-2547.7417 851.7524 -2547.4463 851.8262 -2547.4082 851.8574 C-2547.9744 851.7822 -2548.4519 852.2583 -2548.4895 852.8877 C-2548.3889 852.9102 L-2548.5935 853.1064 L-2548.7263 853.0664 -2548.8591 853.0269 -2548.9912 852.9854 Cf-2585.6936 852.8369 m-2585.6592 852.7764 -2585.6321 852.7061 -2585.6121 852.6182 c-2585.6328 852.71 -2585.6096 852.7695 -2585.6936 852.8369 Cf0 D-2537.9033 850.875 m-2538.6584 850.7832 -2539.4199 850.6118 -2540.1455 850.5356 C-2538.8359 851.7793 -2537.9153 852.7207 -2540.1008 852.6963 C-2540.2439 852.7856 L-2539.9583 852.9385 -2539.4656 852.957 -2539.0022 852.8672 C-2538.6272 852.4263 -2537.4172 850.8062 -2537.4304 850.6631 C-2537.5632 850.3145 -2537.7568 850.6953 -2537.9983 850.5889 C-2537.9033 850.875 Lf-2537.3665 852.958 m-2536.9385 853.0967 -2537.0359 852.8213 -2536.9695 852.5732 C-2537.1201 852.605 -2537.2705 852.6377 -2537.4192 852.667 C-2537.3623 852.7295 -2537.3342 852.8174 -2537.3665 852.958 Cf1 D-2536.9951 852.3252 m-2537.0432 852.3188 -2537.0842 852.3076 -2537.1057 852.2744 C-2536.9951 852.3252 Lf0 D-2545.3191 852.0103 m-2545.3 852.0044 -2545.2932 851.999 -2545.2751 851.9951 C-2545.3762 851.9751 -2545.4775 851.957 -2545.5833 851.9375 C-2545.5422 851.9771 -2545.4641 852.0078 -2545.3191 852.0103 Cf-2544.4504 852.6182 m-2544.3489 852.1641 L-2544.4431 852.1475 -2544.5393 852.1294 -2544.6377 852.1118 C-2544.6052 852.3174 -2544.5713 852.4966 -2544.4504 852.6182 Cf-2541.6584 854.1118 m-2541.4824 853.5664 -2540.8928 853.542 -2540.8567 852.9126 C-2540.8191 852.7515 -2540.9431 852.6895 -2541.0823 852.6377 C-2541.2375 852.623 -2541.4033 852.6055 -2541.5791 852.5854 C-2541.5852 852.6768 -2541.6201 852.7622 -2541.6785 852.8438 C-2541.5049 852.9229 -2541.3889 853.0791 -2541.4592 853.4648 C-2541.9055 852.623 -2541.8591 854.0654 -2542.3416 853.8496 C-2542.4951 854.2935 -2541.8047 854.2896 -2541.6584 854.1118 Cf1 D-2504.5752 852.4727 m-2504.5615 852.5269 -2504.5144 852.6685 -2504.4482 852.8438 C-2504.7881 853.1553 L-2505.3943 853.0181 -2505.8799 852.1143 -2506.4255 852.8916 C-2506.6809 852.6963 -2506.8176 852.2832 -2506.9482 851.9429 C-2506.8232 851.9683 -2506.7063 852.0015 -2506.6089 852.0537 C-2505.0791 850.915 -2505.8113 853.2544 -2504.5752 852.4727 Cf0 D-2511.5449 851.3643 m-2511.4824 851.3252 -2511.46 851.2227 Y-2512.8145 852.3774 -2513.9297 852.7119 -2514.6599 852.667 C-2514.5183 853.125 -2513.8633 853.479 -2513.5522 853.6685 C-2513.8279 854.1904 L-2514 853.7803 L-2514.4785 854.2544 L-2514.3447 854.605 -2513.9583 854.5313 -2513.7 854.8013 C-2513.6775 854.7017 -2512.8503 854.0933 -2512.6191 853.7725 C-2513.28 853.4121 L-2513.1016 853.5576 -2512.2249 853.4375 -2511.8772 853.3037 C-2511.8704 853.042 -2512.4695 852.6392 -2512.5449 853.207 C-2512.6162 852.8188 -2511.9255 852.8145 -2512.3623 852.3984 C-2511.8447 851.9854 -2511.0212 852.3311 -2510.6392 852.5225 C-2510.5745 853.1753 L-2510.1553 853.4287 -2510.2913 852.3896 -2509.7932 852.7661 C-2510.4055 852.8936 -2509.6897 853.4814 -2510.1768 853.5303 C-2510.0212 853.7764 -2510.1736 854.2192 -2509.6855 854.1709 C-2509.2793 853.3076 -2509.1711 854.7119 -2508.7871 853.9502 C-2508.5305 854.2192 -2509.0632 854.4692 -2508.5583 854.5854 C-2507.9792 854.1318 -2508.0127 853.8062 -2507.9768 853.1782 C-2508.5183 853.0024 -2508.5852 853.9951 -2509.0281 853.8423 C-2508.1472 852.7661 L-2508.3096 852.6143 -2508.4297 852.5977 -2508.5305 852.6416 C-2508.3535 852.5791 -2508.2031 852.4199 -2508.0745 852.1997 c-2508.0012 852.0767 -2507.9336 851.9712 -2507.8711 851.8809 C-2508.3704 851.875 -2508.8137 851.8599 -2508.8921 851.5923 C-2508.8232 851.2876 L-2509 851.0078 -2509.2881 851.2271 -2509.4209 851.4502 C-2509.8679 851.4829 -2510.3145 851.9077 -2510.4121 851.5132 C-2510.2424 851.2344 L-2510.7922 851.3223 -2510.8535 851.3604 -2511.5449 851.3643 Cf-2529.5625 850.6709 m-2529.2295 851.7876 -2528.8623 852.7744 -2527.3081 852.5791 C-2527.4304 852.6563 L-2526.6472 853.3574 -2525.9033 851.7295 -2524.9504 852.5078 C-2525.4128 852.9287 -2525.3879 852.8896 -2525.8984 853.8535 C-2525.4023 853.5376 L-2525.5398 854.1455 -2525.0449 853.8311 -2524.6809 853.8599 C-2525.0022 854.583 L-2525.2207 854.375 -2525.7871 854.2998 -2525.7705 854.4648 C-2525.6465 854.3848 -2526.5183 853.5518 -2526.9919 853.7622 C-2526.9431 854.2524 -2525.9431 854.0537 -2526.3896 854.8545 C-2525.9961 854.5181 -2525.9473 855.0068 -2525.5359 854.8354 C-2525.9304 855.1709 -2525.6335 855.5024 -2525.9272 855.8599 C-2525.2527 855.6934 L-2525.2351 855.8564 -2526.2351 856.0557 -2525.6824 856.6582 C-2525.4121 856.4014 -2524.6904 856.7236 -2524.6775 856.1963 C-2524.6609 856.3584 L-2524.1553 856.4727 -2524.4385 855.6118 -2523.8176 855.9126 C-2523.8103 855.6475 -2523.9287 855.4639 -2524.1511 855.5181 C-2524.3391 855.6353 -2524.3679 855.999 -2524.7551 856.0728 C-2524.9287 855.6597 -2524.2881 856.124 -2524.5569 855.4263 c-2524.6904 855.0791 -2525.5791 855.7261 -2525.2959 854.9424 C-2524.7913 855.0557 L-2524.7783 854.5269 -2524.4128 854.5576 -2524.4231 854.1318 C-2524.1145 853.9375 -2523.8232 854.5313 -2523.5081 854.0728 C-2523.3772 853.731 -2523.6057 853.0967 -2523.0842 853.373 C-2522.6768 854.1543 -2521.4761 854.0024 -2521.0264 853.8896 C-2520.6328 853.5537 L-2520.6663 853.2295 -2521.3848 853.5977 -2521.1321 853.1768 C-2520.5183 853.0493 L-2520.5657 853.2524 L-2520.3623 853.2979 -2520.1543 853.0796 -2519.9688 852.9639 C-2520.1599 853.3438 -2520.6023 853.1909 -2520.5144 853.7412 C-2520.2263 853.8496 -2520.1824 854.0537 -2519.9172 853.9478 C-2519.9751 853.9873 -2520.0249 854.041 -2520.0176 854.1182 C-2519.4343 854.3564 -2519.4543 853.5024 -2519.3081 853.3232 c-2518.7217 852.6084 -2519.8992 852.6597 -2519.8242 852.0933 C-2518.1121 851.791 L-2518.2583 851.9692 -2518.4055 852.1475 -2518.3503 852.373 C-2517.9304 852.6274 -2518.3408 852.7998 -2517.7512 852.7734 C-2517.7932 852.0215 -2517.0088 852.3047 -2516.5923 851.8701 C-2516.3977 852.1782 -2516.3577 852.2393 -2516.7832 852.249 C-2516.7344 852.7373 -2516.1631 852.5493 -2515.96 852.5942 C-2515.8423 852.4727 -2515.6416 852.4019 -2515.5144 852.2935 C-2515.6848 852.0493 -2515.6121 851.7437 -2515.2432 851.5356 C-2515.2217 851.4336 L-2515.8264 851.2998 -2516.7664 850.7661 -2517.1455 851.2661 C-2517.0383 851.0244 L-2517.7383 850.6021 -2518.5615 851.9014 -2518.8843 850.979 C-2518.8545 850.6143 -2519.0249 850.8955 -2519.0127 850.3677 C-2519.5281 850.7803 L-2519.4209 850.541 L-2520.2976 850.6597 L-2520.2744 850.5615 L-2520.6912 851.0391 -2521.0176 851.4287 -2521.2783 851.7471 C-2521.2793 851.9771 -2521.2522 852.0479 -2521.3911 852.2173 C-2521.5305 852.3311 -2521.6362 852.3486 -2521.7305 852.3184 C-2521.7312 852.3188 -2521.7312 852.3188 -2521.7312 852.3213 C-2521.7312 852.3188 -2521.7312 852.3188 -2521.7312 852.3184 C-2521.9463 852.2515 -2522.0896 851.9209 -2522.3545 851.7856 C-2521.5393 851.7295 L-2521.4729 851.3389 -2521.5422 850.9336 -2521.9417 850.6597 C-2521.7783 850.6455 -2521.71 850.3408 -2521.9121 850.2959 C-2521.9343 850.3975 -2522.4463 850.5454 -2522.2512 850.8564 C-2523.0256 850.999 -2524.2793 849.9736 -2525.4551 850.7158 C-2524.6104 850.2695 -2526.1321 850.1924 -2525.1943 850.0313 C-2525.8489 849.4072 -2525.7576 850.6475 -2526.4248 850.5493 C-2526.4817 850.3252 -2526.0615 850.5791 -2525.9082 850.1353 C-2527.0176 849.8853 -2527.78 851.1455 -2528.8533 850.9561 C-2528.8992 850.4688 L-2529.1023 850.5313 -2529.3279 850.6006 -2529.5625 850.6709 Cf-2531.6855 851.2783 m-2531.8921 851.333 -2532.1016 851.3896 -2532.3145 851.4463 C-2532.2937 851.4541 -2532.2744 851.4541 -2532.2527 851.4604 C-2532.8733 851.8535 L-2532.4919 852.0435 -2532.2407 852.5791 -2532.7744 852.8286 C-2532.7295 852.6274 -2532.8855 852.3799 -2532.7 852.2622 C-2533.0576 851.9692 -2533.8423 851.6865 -2533.6377 852.4229 C-2532.9504 851.7271 -2533.4775 853.3604 -2532.9375 852.8438 C-2533.2273 853.3232 -2533.5144 853.1079 -2533.7881 853.3223 C-2533.5032 852.9209 -2533.8545 852.4126 -2534.2825 852.2212 C-2534.4688 852.3398 -2534.9729 852.2261 -2535.2825 852.4209 C-2535.1721 852.8711 -2535.4417 853.1289 -2534.9373 853.2422 C-2535.1223 853.3604 -2535.4087 853.4541 -2535.7295 853.2227 C-2535.6023 853.1455 -2535.3799 853.0894 -2535.3953 852.9272 C-2535.6023 852.5127 -2535.8447 852.5313 -2535.9785 852.3545 C-2536.0852 852.3799 -2536.1929 852.4019 -2536.2976 852.4263 C-2536.2664 852.4648 -2536.2393 852.5166 -2536.22 852.5811 C-2536.5745 852.9785 L-2536.1023 852.7661 -2536.3562 853.1865 -2536.3623 853.4502 c-2536.3496 852.9229 -2536.6663 853.3809 -2536.8279 853.3984 C-2536.4768 853.9561 L-2536.6465 854.2349 -2537.0759 853.5537 -2536.9873 854.105 C-2536.2424 854.3262 -2535.9561 854.231 -2535.2825 854.0654 C-2535.5559 853.6328 L-2534.7959 853.3267 -2535.0872 854.375 -2534.2344 854.3545 C-2533.8799 853.959 -2532.9519 854.3267 -2532.9343 853.5352 C-2533.0413 853.7764 -2532.4033 854.2393 -2532.1111 853.8809 C-2531.7881 853.1572 -2530.8113 853.0596 -2531.1072 852.7295 C-2531.3711 852.7207 -2531.7263 853.1182 -2531.9385 852.6475 C-2531.4265 852.4966 L-2531.7625 852.1021 L-2531.5889 852.2437 -2531.6057 851.8584 -2531.6855 851.2783 Cf1 D-2543.1455 846.8389 m-2543.1511 846.8354 -2543.1584 846.833 -2543.1653 846.8286 C-2543.1577 846.8311 -2543.1504 846.8311 -2543.1433 846.8311 C-2543.1455 846.8389 Lf*U0 D-2496.9968 850.8311 m-2496.8496 850.6509 -2496.4856 850.6807 -2496.5569 850.2935 C-2496.5481 850.7192 -2497.2073 850.3584 -2496.9968 850.8311 Cf-2496.5615 851.248 m-2496.5359 851.1465 -2496.5537 850.9829 -2496.3904 850.9683 C-2496.8401 851.0767 L-2496.5615 851.248 Lf-2496.1052 854.1597 m-2495.8733 853.8423 -2495.7263 853.6631 -2495.3623 853.6919 C-2495.2256 854.731 -2495.9583 853.9824 -2496.1233 854.9517 C-2495.4561 855.0493 -2495.2512 854.1416 -2494.7024 854.0537 C-2494.9744 853.6201 -2496.0852 853.3701 -2496.1052 854.1597 Cf-2496.4016 855.4736 m-2496.0305 855.2393 L-2496.0671 855.1782 L-2496.4385 855.4126 L-2496.4016 855.4736 Lf-2504.4385 846.4429 m-2504.4719 846.1182 -2504.7031 846.4385 -2504.8271 846.5166 C-2504.7263 846.5376 -2504.5852 846.623 -2504.4385 846.4429 Cf-2577.3503 846.105 m-2580.1809 846.4185 L-2579.3665 846.3369 -2578.6145 846.2959 -2577.3503 846.105 Cf-2513.8313 848.5664 m-2513.0713 848.2603 -2512.7336 847.6997 -2511.9592 847.5576 C-2512.9775 846.9033 -2513.3042 848.5796 -2514.1592 847.9092 C-2513.8313 848.5664 Lf-2513.5632 845.9751 m-2513.4373 846.5869 -2514.1497 846.6919 -2514.0393 847.1406 C-2513.5271 846.9912 -2513.8008 846.5576 -2513.3359 846.6104 C-2513.5632 845.9751 Lf-2510.1191 856.0889 m-2510.3496 856.4072 L-2510.1641 856.291 L-2510.1191 856.0889 Lf-2517.0271 846.5181 m-2516.9431 846.3799 L-2517.3242 846.1865 L-2517.0271 846.5181 Lf-2516.8591 846.2393 m-2516.9431 846.3799 L-2516.9431 846.3799 L-2516.8591 846.2393 Lf-2510.4153 857.4014 m-2510.0728 857.5313 L-2509.9033 857.2515 L-2510.4153 857.4014 Lf-2513.4385 854.1187 m-2513.1321 853.9229 L-2513.1929 853.9604 -2513.6121 853.709 -2513.4385 854.1187 Cf-2519.3545 846.2583 m-2519.7273 846.4932 L-2519.6892 846.5537 L-2519.3176 846.3188 L-2519.3545 846.2583 Lf-2515.8369 855.8057 m-2515.6252 856.2759 -2516.4482 855.9326 -2516.0127 856.3486 C-2515.6252 856.2759 -2515.7825 856.0303 -2515.8369 855.8057 Cf-2520.3352 852.6157 m-2520.3855 852.6157 -2520.4385 852.6328 -2520.4895 852.6851 C-2520.4287 852.665 -2520.3777 852.6406 -2520.3352 852.6157 Cf-2520.3352 852.6157 m-2520.1729 852.6157 -2520.0105 852.7959 -2519.8992 852.6597 C-2520.1016 852.4473 -2520.1753 852.5269 -2520.3352 852.6157 Cf-2522.1953 852.7256 m-2522.0481 852.7593 L-2522.1985 852.9912 -2522.1272 852.957 -2521.9929 852.7705 C-2521.8369 852.7544 -2521.8457 852.6055 -2521.8271 852.5039 C-2521.7959 852.4473 -2521.7649 852.3853 -2521.7312 852.3213 C-2521.7793 852.3809 -2521.8225 852.4404 -2521.8591 852.4912 C-2522.1008 852.4873 -2522.2483 852.5103 -2522.1953 852.7256 Cf-2529.1052 844.7998 m-2528.5615 844.9751 -2528.4209 845.0596 -2528.4504 845.4248 C-2527.9343 845.541 -2528.0144 844.9126 -2527.7031 844.7661 C-2528.2871 844.8369 -2528.4065 844.6685 -2529.1052 844.7998 Cf-2527.7031 844.7661 m-2527.6377 844.7593 -2527.5752 844.7515 -2527.4993 844.7373 C-2527.5842 844.7261 -2527.6472 844.7412 -2527.7031 844.7661 Cf-2520.0212 856.7173 m-2520.3591 857.2759 L-2520.2351 857.1982 L-2520.0212 856.7173 Lf-2529.9121 844.6157 m-2529.8113 844.6392 -2529.6497 844.623 -2529.5703 844.748 C-2529.5413 844.3809 -2530.0127 844.5933 -2529.9121 844.6157 cf-2527.8152 851.7744 m-2527.76 851.998 -2527.4121 851.8643 -2527.2705 851.9502 C-2527.4736 851.9033 -2527.6392 851.23 -2527.8152 851.7744 Cf-2531.4719 846.1221 m-2531.3711 846.1455 -2531.2161 846.3911 -2531.2832 846.6934 C-2531.1367 846.5142 -2530.9385 845.8701 -2531.4719 846.1221 Cf-2528.8088 851.709 m-2528.7312 851.833 L-2528.3591 851.5977 L-2528.8088 851.709 Lf-2527.4817 857.1006 m-2527.0632 856.665 -2528.1455 856.0493 -2527.4248 855.6807 C-2528.3545 855.2246 -2527.3535 856.2979 -2528.0393 856.2271 C-2527.6377 856.374 -2527.4409 856.9253 -2527.4817 857.1006 Cf-2528.0393 856.2271 m-2528.0977 856.2041 -2528.1609 856.1909 -2528.2295 856.1895 C-2528.1536 856.21 -2528.0923 856.2212 -2528.0393 856.2271 Cf-2533.9287 853.4692 m-2533.8679 853.4238 -2533.8264 853.374 -2533.7881 853.3223 C-2533.8359 853.3584 -2533.8816 853.4033 -2533.9287 853.4692 Cf-2530.2295 856.5869 m-2529.6023 855.9326 L-2530.0212 856.3677 -2531.0752 856.3413 -2531.0095 856.9927 C-2530.6682 857.125 -2530.2576 856.9517 -2530.0889 856.6709 C-2530.2295 856.5869 Lf-2537.4287 844.7764 m-2537.1577 844.5181 L-2537.4961 844.4424 L-2537.3992 844.54 -2537.5745 845.0181 -2537.4287 844.7764 Cf-2537.5615 844.4287 m-2537.4961 844.4424 L-2537.5105 844.4263 -2537.5313 844.4199 -2537.5615 844.4287 Cf-2532.7424 853.1543 m-2532.5398 853.1997 -2532.3777 853.1816 -2532.1929 853.0664 C-2532.2695 852.9429 -2532.7744 852.8286 -2532.7424 853.1543 Cf-2539.3369 845.7236 m-2538.8896 845.6118 L-2539.3777 845.6597 L-2539.3369 845.7236 Lf-2541.4241 844.6157 m-2541.5012 844.4932 L-2541.8721 844.7271 L-2541.7937 844.8496 L-2541.4241 844.6157 Lf-2538.6943 857.4326 m-2538.3911 857.5024 -2538.1543 856.917 -2538.2336 856.7935 C-2538.8215 856.8188 L-2538.6721 857.3311 -2538.6584 856.8037 -2538.3176 856.9336 C-2538.6943 857.4326 Lf-2556.9153 845.5732 m-2556.7839 845.231 -2556.1409 845.4292 -2556.1072 845.7544 C-2556.1936 845.8955 -2556.5422 846.0303 -2556.3232 846.2373 C-2555.8145 845.3975 L-2555.1377 845.9209 -2556.3289 846.5015 -2556.6631 846.7979 C-2555.9736 846.9063 -2555.7693 846.3545 -2555.0359 846.3574 C-2555.2522 846.2822 -2555.3889 846.0728 -2555.5032 845.8926 C-2555.5281 845.3013 -2554.8447 845.563 -2554.3562 845.5166 C-2554.6672 845.2598 -2554.4873 845.0435 -2554.2607 844.8115 C-2554.22 844.7935 -2554.1929 844.7593 -2554.1736 844.7192 C-2554.1472 844.6919 -2554.1223 844.665 -2554.0967 844.6367 C-2554.1553 844.6377 L-2554.1511 844.5713 -2554.1641 844.4912 -2554.2063 844.3809 C-2554.6162 844.5537 -2554.9297 844.0596 -2555.1936 844.0518 C-2554.9329 845.0132 -2556.0923 844.2744 -2556.4241 844.5703 C-2556.8071 844.665 L-2556.9504 844.667 L-2556.9792 844.5615 -2556.9385 844.4292 -2556.72 844.2393 C-2556.9023 844.4287 -2557.5105 844.3623 -2557.4543 844.6709 C-2558.8423 844.6846 L-2558.8855 844.6455 -2558.9287 844.5967 -2558.9607 844.5269 C-2559.0088 844.5879 -2559.0168 844.6377 -2559.0105 844.6865 C-2565.0576 844.748 L-2564.7593 844.8232 -2564.5012 845.0435 -2564.1936 845.1494 C-2564.6553 845.7876 -2563.6892 845.2646 -2563.8247 845.8677 C-2564.0322 846.0869 -2564.3359 846.0181 -2564.5168 845.8716 C-2564.5842 846.1763 -2564.3264 846.4463 -2564.3562 846.8101 C-2563.5935 847.1934 -2563.4768 845.7349 -2562.7312 845.957 C-2562.7607 846.3223 -2562.9912 846.6416 -2562.5032 846.5923 C-2562.6272 846.6709 L-2561.8457 846.2622 -2562.0183 847.4966 -2561.5264 846.4951 C-2561.5393 847.0225 L-2561.1848 846.625 -2560.4951 846.6221 -2560.1064 846.5493 C-2560.1296 846.6509 L-2559.0393 846.0479 -2559.5176 846.5225 -2558.2932 846.2705 C-2558.8567 846.8853 L-2558.4343 847.1396 -2558.3391 846.4712 -2558.0359 846.54 C-2558.0576 846.6416 -2557.9873 847.0269 -2558.2737 847.123 C-2556.7881 846.1851 L-2556.4336 845.7876 -2556.8601 845.7979 -2556.9153 845.5732 Cf-2555.0359 846.3574 m-2554.9573 846.3853 -2554.8679 846.3975 -2554.7625 846.3774 C-2554.8643 846.3604 -2554.9519 846.3574 -2555.0359 846.3574 Cf-2565.4824 844.7524 m-2565.0576 844.748 L-2565.1892 844.7158 -2565.3264 844.7061 -2565.4824 844.7524 Cf-2552.9065 845.2061 m-2553.1641 844.9336 -2552.7136 844.8247 -2552.6687 844.6221 C-2553.5913 844.6318 L-2553.5872 844.8354 -2553.6785 845.0625 -2553.6599 845.248 C-2552.9065 845.2061 Lf-2553.8584 844.249 m-2553.8896 844.3896 -2553.9873 844.5166 -2554.0967 844.6367 C-2553.5913 844.6318 L-2553.5945 844.479 -2553.6511 844.3408 -2553.8584 844.249 Cf-2553.7607 855.0894 m-2553.9241 855.1079 L-2554.1711 855.2646 L-2553.7607 855.0894 Lf-2556.3152 854.1963 m-2556.1201 854.5044 -2555.75 854.2705 -2555.6262 854.1924 C-2556.0527 854.2017 -2555.8679 854.0854 -2556.3152 854.1963 Cf-2555.7881 857.4966 m-2556.1992 857.6709 L-2556.1609 857.731 L-2555.7881 857.4966 Lf-2568.6223 846.8281 m-2568.6897 846.8398 -2568.7551 846.8486 -2568.8232 846.8623 C-2568.7312 846.8643 -2568.6711 846.8496 -2568.6223 846.8281 Cf-2565.0945 846.3252 m-2566.0752 845.7334 -2564.4519 845.833 -2564.76 845.0752 C-2565.2937 845.3262 L-2565.2483 845.123 L-2565.8992 845.1895 L-2565.7656 845.5376 -2565.6653 845.5591 -2565.6943 845.9248 C-2566.5632 845.7822 -2565.9683 845.4912 -2566.6057 845.0303 C-2567.5769 845.0967 L-2567.4983 844.9873 L-2567.5801 844.9951 -2567.6162 845.041 -2567.6443 845.1006 C-2570.9172 845.3281 L-2571.5127 845.6182 -2570.5879 845.9854 -2571.0271 846.5225 C-2570.3369 846.521 -2569.3113 846.9102 -2569.2527 846.1816 C-2569.2759 846.2822 -2569.3215 846.4829 -2569.1816 846.5688 C-2568.7825 845.9692 L-2569.1631 845.7783 L-2568.7617 845.1807 -2567.4656 845.3135 -2567.2312 845.6846 C-2567.9683 845.8887 -2567.5984 846.6084 -2568.6252 846.2173 C-2568.5791 846.4019 -2568.3911 846.7271 -2568.6223 846.8281 C-2567.4192 846.6157 -2566.3408 846.9478 -2565.0945 846.3252 Cf-2577.1631 846.6763 m-2577.1536 846.6104 L-2577.1753 846.6455 -2577.1824 846.6719 -2577.1631 846.6763 Cf-2576.7593 846.7661 m-2576.1729 846.0518 L-2577.0872 846.1094 L-2577.1536 846.6104 L-2577.0728 846.4829 -2576.7522 846.2295 -2576.6279 846.4253 C-2576.7593 846.7661 Lf-2575.4919 845.6201 m-2575.9641 845.833 -2575.9385 846.4229 -2575.6809 846.6919 C-2576.1145 846.9648 -2575.9097 846.0576 -2576.2083 846.6807 C-2576.1985 847.1064 -2575.6641 846.8564 -2575.5413 846.7783 C-2575.4919 845.6201 Lf-2572.0081 845.9307 m-2572.1409 846.1753 L-2571.8137 846.2393 L-2572.0081 845.9307 Lf-2572.1409 846.1753 m-2572.4656 846.1094 L-2572.4431 846.291 -2572.4209 846.4683 -2572.3679 846.5923 C-2572.1409 846.1753 Lf-2573.3176 845.9395 m-2573.4551 845.8955 -2573.6072 845.8623 -2573.7922 845.8462 C-2573.3176 845.9395 Lf-2572.9463 846.0894 m-2572.9573 846.0127 L-2573.3176 845.9395 L-2573.1848 845.9854 -2573.0657 846.0356 -2572.9463 846.0894 Cf-2572.4656 846.1094 m-2572.5183 845.6963 -2572.5801 845.2622 -2573.0496 845.3774 C-2572.9573 846.0127 L-2572.4656 846.1094 Lf-2558.7783 856.874 m-2559.1497 857.1079 L-2559.1104 857.1719 L-2558.7393 856.9375 L-2558.7783 856.874 Lf-2560.9209 856.4966 m-2561.0127 856.5688 -2561.0823 856.6455 -2561.1455 856.7236 C-2561.0488 856.6782 -2560.9719 856.6094 -2560.9209 856.4966 Cf-2562.5137 859.3188 m-2562.9504 858.9033 -2561.9111 858.7695 -2562.72 858.5854 C-2562.7913 858.1982 -2562.4121 857.6992 -2562.0313 857.8916 C-2562.0615 858.2559 -2562.4023 858.125 -2562.1682 858.4966 C-2561.9153 858.0752 -2561.8191 858.3623 -2561.9072 857.8135 C-2561.4817 857.4712 -2561.4343 857.0811 -2561.1455 856.7236 C-2561.6599 856.9648 -2562.74 856.4019 -2563.3928 857.1064 C-2563.7527 857.7661 -2563.5344 858.667 -2563.5359 859.6201 C-2563.4817 859.8438 -2562.5488 859.9502 -2562.5137 859.3188 Cf-2561.8264 860.2705 m-2561.6243 860.3174 -2561.5625 860.2793 -2561.4385 860.1997 C-2561.4719 859.874 -2561.6631 860.2559 -2561.8264 860.2705 Cf-2566.4719 853.0942 m-2566.5105 853.2295 -2566.8762 853.3975 -2566.7976 853.6318 C-2566.2432 853.4604 L-2566.3733 853.4385 -2566.4192 853.2725 -2566.4719 853.0942 Cf-2566 853.3877 m-2566.2432 853.4604 L-2566.1824 853.4727 -2566.1072 853.4541 -2566 853.3877 Cf-2566.4983 853.0093 m-2566.4895 853.0376 -2566.4817 853.0664 -2566.4719 853.0942 C-2566.4641 853.0654 -2566.4656 853.0356 -2566.4983 853.0093 Cf-2574.6631 845.7017 m-2574.6553 845.4404 -2574.9023 845.5967 -2575.0264 845.6743 C-2574.9255 845.6963 -2574.7839 845.7822 -2574.6631 845.7017 Cf-2583.9641 846.731 m-2584.1824 846.5225 L-2584.1052 846.6475 -2584.0657 846.709 -2583.9641 846.731 Cf-2587.3279 853.8765 m-2587.3342 853.9272 -2587.3503 853.9692 -2587.3721 854.0093 C-2587.3503 853.9771 -2587.3352 853.9336 -2587.3279 853.8765 cf-2587.3721 854.0093 m-2587.5212 854.2271 -2587.9817 853.8887 -2588.1472 854.2192 C-2588.1262 854.1187 L-2588.4343 854.3145 L-2588.1455 854.2856 -2587.5393 854.3267 -2587.3721 854.0093 CfUUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 40)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6459.4521 4731.5977 m-6067.6909 4731.5977 L-6067.6909 4639.9082 L-6459.4521 4639.9082 L-6459.4521 4731.5977 Ln0 O0 0 0 1 k1 XR-6072.3535 4673.9209 m-6074.1113 4673.9209 -6193.7817 4676.0918 -6269.6519 4677.4717 C-6290.4663 4676.5352 -6311.2529 4675.2227 -6332.0547 4673.502 C-6334.5327 4673.1514 -6337.3472 4672.7949 -6338.8584 4672.6006 c-6339.7114 4672.4863 -6340.5732 4672.3857 -6341.4375 4672.293 C-6340.9829 4672.0605 -6340.54 4671.7998 -6340.1167 4671.4941 C-6339.25 4670.7324 -6338.3955 4669.832 -6337.8735 4668.4541 C-6337.8979 4668.1689 -6337.6997 4667.8193 -6337.6523 4667.5293 c-6337.5532 4666.9121 -6337.6382 4666.1631 -6337.7319 4665.627 c-6337.7939 4665.2725 -6337.9551 4665.0254 -6338.0259 4664.7314 c-6338.0488 4664.6348 -6337.9785 4664.5762 -6338.0059 4664.502 c-6338.1396 4664.1484 -6338.5313 4663.5518 -6338.7539 4663.2266 c-6338.8579 4663.0762 -6338.9873 4662.9775 -6339.1035 4662.8193 c-6339.1196 4662.7969 -6339.0669 4662.7354 -6339.0928 4662.7061 c-6339.6484 4662.0664 -6340.4312 4661.541 -6341.3955 4661.0762 c-6341.4546 4661.0508 -6341.4639 4661.1445 -6341.5366 4661.0869 C-6341.8213 4660.9658 -6342.1143 4660.8535 -6342.3945 4660.791 c-6343.8965 4660.4629 -6345.7163 4660.8477 -6346.8027 4661.6328 c-6347.7998 4662.3555 -6348.5308 4663.8623 -6348.4678 4665.0742 c-6348.4126 4666.1094 -6347.6665 4667.2578 -6346.4458 4668.0352 c-6345.3604 4668.7295 -6344.0479 4668.9834 -6343.2373 4668.3594 C-6343.6499 4668.2295 -6343.9688 4668.0332 -6344.0811 4667.7529 C-6344.0908 4667.4766 -6344.0967 4667.1992 -6343.8755 4666.8594 C-6343.4517 4666.4863 -6342.7925 4666.248 -6342.1235 4666.7158 c-6341.1846 4667.3701 -6341.0728 4668.7891 -6342.0342 4669.5361 C-6342.3086 4669.6406 -6342.5586 4669.8789 -6342.75 4669.9834 c-6343.1826 4670.2188 -6343.5586 4670.3857 -6343.9751 4670.543 c-6345.0938 4670.959 -6346.4839 4671.418 -6347.5327 4671.5977 c-6347.7114 4671.6289 -6347.8989 4671.6475 -6348.0806 4671.6738 C-6351.4038 4671.3789 -6354.54 4671.0693 -6357.1416 4670.5264 C-6357.1138 4670.5234 -6357.0908 4670.5244 -6357.0586 4670.5205 c-6356.2378 4670.4199 -6355.6309 4670.2529 -6354.9043 4670.0137 c-6354.6328 4669.9238 -6354.3184 4669.9121 -6354.0825 4669.8154 c-6353.9985 4669.7852 -6353.9409 4669.6602 -6353.8472 4669.6133 c-6353.5371 4669.4609 -6353.2129 4669.3662 -6352.8999 4669.1602 c-6351.9097 4668.5059 -6350.8774 4667.3359 -6350.7617 4665.8682 C-6350.9463 4664.8262 -6351.3643 4663.8525 -6352.5938 4663.0781 c-6352.7217 4662.9961 -6352.8662 4662.96 -6352.9995 4662.8828 C-6354.8516 4662.2168 -6356.5913 4663.3135 -6356.8066 4665.2061 C-6356.7119 4665.375 -6356.6499 4665.5527 -6356.6616 4665.752 C-6356.2939 4666.4492 -6354.9033 4667.0557 -6354.3057 4666.6143 C-6354.6133 4666.5566 -6354.7495 4666.5254 -6354.8638 4666.2637 C-6354.8892 4665.6074 -6354.0679 4665.4336 -6353.6528 4666.0176 C-6353.4966 4666.7021 -6353.7676 4667.2529 -6354.2939 4667.8105 c-6354.5068 4668.0361 -6354.7837 4668.1689 -6355.0566 4668.3545 c-6355.4199 4668.6016 -6355.7495 4668.8828 -6356.1118 4669.0332 c-6356.4385 4669.1689 -6356.8115 4669.2012 -6357.1445 4669.2891 c-6357.2349 4669.3105 -6357.2969 4669.3613 -6357.3706 4669.3789 c-6357.6274 4669.4336 -6357.8359 4669.5146 -6358.0879 4669.5469 c-6358.4209 4669.585 -6358.7739 4669.5488 -6359.1528 4669.585 c-6359.3398 4669.6055 -6359.5195 4669.6953 -6359.7144 4669.7109 c-6359.8413 4669.7207 -6359.9722 4669.7207 -6360.1025 4669.7227 C-6362.8135 4668.8213 -6365.0957 4667.6094 -6366.9814 4665.2793 c-6370.6704 4660.7227 -6365.0415 4656.5566 -6363.9902 4660.5977 C-6365.9668 4662.0361 -6369.5874 4665.1201 -6361.8892 4665.2471 C-6353.6045 4663.7549 -6360.6982 4648.4922 -6370.6509 4652.5576 c-6379.0151 4655.9746 -6375.1328 4664.6387 -6369.4658 4668.293 c-6360.9902 4673.7559 -6351.5376 4674.4922 -6341.7012 4674.584 C-6352.3862 4679.0488 -6366.9243 4676.4033 -6374.9897 4668.3809 c-6379.1011 4664.293 -6383.0435 4657.9912 -6381.8193 4651.8896 c-6380.5742 4645.6816 -6374.1616 4651.4238 -6379.0957 4651.4424 C-6378.8896 4657.0059 -6365.6387 4650.9648 -6371.9307 4642.8281 c-6377.6011 4635.4922 -6387.5698 4643.5225 -6389.3242 4649.9482 c-6395.0239 4670.8359 -6365.3545 4676.7129 -6351.3813 4677.4238 C-6363.1143 4680.7754 -6379.3892 4678.2734 -6390.5547 4673.7852 c-6394.9663 4672.0098 -6399.9707 4668.8926 -6402.5479 4664.7773 c-6406.4619 4658.5264 -6399.4268 4654.2842 -6398.8955 4656.4033 c-6398.4697 4658.0957 -6404.3765 4658.623 -6399.8267 4661.6992 c-6395.8091 4664.418 -6392.2759 4658.209 -6391.4619 4655.0781 c-6387.6782 4640.5322 -6409.0601 4642.4609 -6411.3667 4656.1982 c-6416.5103 4686.8271 -6370.3071 4680.457 -6354.4902 4679.5928 C-6354.7124 4679.7617 -6354.9331 4679.9189 -6355.1543 4680.082 C-6360.4346 4681.585 -6365.6416 4683.7861 -6370.46 4686.5469 C-6384.9546 4688.2813 -6397.7495 4677.8906 -6413.5913 4672.6152 c-6422.5635 4669.6289 -6433.0933 4673.9277 -6441.2778 4669.3145 c-6445.6235 4666.8545 -6448.6982 4664.2656 -6450.2959 4659.0518 C-6451.9092 4650.1104 -6442.2979 4648.9717 -6444.1396 4653.6416 C-6445.8428 4653.9688 -6445.1772 4652.834 -6446.3354 4652.8418 C-6450.2861 4656.5479 -6442.0244 4661.7314 -6438.1606 4658.4316 c-6431.4497 4652.7031 -6436.2563 4644.332 -6443.0864 4642.0557 C-6461.5703 4642.25 -6462 4664.8613 -6456.0474 4677.3594 c-6440.2217 4710.585 -6406.1445 4698.582 -6378.5376 4691.5479 C-6382.2817 4694.0732 -6384.8975 4697.6426 -6387.5747 4701.2158 c-6392.2197 4707.416 -6394.6694 4716.8545 -6386.0024 4720.8613 C-6385.1616 4724.9834 -6383.6392 4728.8857 -6379.5669 4730.7695 c-6374.7471 4733 -6369.8457 4730.5586 -6368.5508 4725.4512 C-6368.4766 4722.6729 -6369.1968 4720.8262 -6371.5938 4719.3887 c-6373.1733 4718.4414 -6378.5176 4718.5313 -6375.8574 4721.5342 C-6373.9663 4720.041 -6374.1323 4722.4873 -6375.0112 4723.6006 C-6377.8823 4723.5693 -6378.5771 4721.4873 -6378.5156 4718.5186 c-6378.5151 4718.4961 -6378.5142 4718.4697 -6378.5146 4718.4434 C-6378.3574 4711.1367 -6377.1343 4705.3242 -6375.0718 4700.7285 C-6375.0713 4700.7305 -6375.0708 4700.7314 -6375.0698 4700.7324 c-6374.8242 4701.2158 -6374.4819 4701.5 -6374.2485 4701.8945 c-6374.1729 4702.0234 -6374.2495 4702.1387 -6374.1753 4702.2334 c-6373.8262 4702.6855 -6372.9971 4703.3701 -6372.5313 4703.7402 c-6372.3135 4703.9121 -6372.0835 4703.998 -6371.8477 4704.1729 c-6371.8125 4704.1973 -6371.8613 4704.3105 -6371.8115 4704.3418 c-6370.7256 4705.0176 -6369.3638 4705.4277 -6367.7661 4705.6709 C-6367.6699 4705.6816 -6367.6978 4705.543 -6367.5669 4705.5938 C-6367.1035 4705.6406 -6366.6309 4705.6738 -6366.1982 4705.6387 c-6363.8862 4705.4453 -6361.4316 4704.084 -6360.2129 4702.4668 c-6359.0942 4700.9854 -6358.7095 4698.4854 -6359.3379 4696.7646 c-6359.8774 4695.2949 -6361.4629 4693.9697 -6363.5684 4693.3906 c-6365.4419 4692.873 -6367.4492 4693.084 -6368.3408 4694.3477 C-6367.6875 4694.3535 -6367.1406 4694.4941 -6366.8545 4694.8477 C-6366.7178 4695.2422 -6366.5859 4695.6387 -6366.7539 4696.2266 C-6367.2002 4696.9541 -6368.0469 4697.5898 -6369.2178 4697.2129 c-6370.4604 4696.8135 -6371.2119 4695.5781 -6371.0532 4694.3486 C-6365.7505 4688.2031 -6358.0386 4685.6465 -6349.2539 4685.0537 C-6349.2886 4685.0684 -6349.3218 4685.0801 -6349.3604 4685.0977 c-6350.5015 4685.6064 -6351.3027 4686.1143 -6352.2437 4686.7832 c-6352.5957 4687.0332 -6353.0439 4687.1914 -6353.3428 4687.4316 c-6353.4492 4687.5166 -6353.4766 4687.7227 -6353.5913 4687.8301 c-6353.9707 4688.1895 -6354.3975 4688.4688 -6354.7563 4688.9063 c-6355.8945 4690.2891 -6356.8662 4692.4346 -6356.3809 4694.6016 C-6355.6523 4696.0234 -6354.6162 4697.2441 -6352.4995 4697.8145 c-6352.2788 4697.875 -6352.0542 4697.8633 -6351.8276 4697.918 C-6348.8613 4698.0537 -6346.8369 4695.7021 -6347.3667 4692.875 C-6347.5781 4692.6738 -6347.7471 4692.4434 -6347.8184 4692.1514 C-6348.6582 4691.3105 -6350.9336 4691.0508 -6351.5996 4691.9521 C-6351.1309 4691.9004 -6350.9199 4691.8848 -6350.6387 4692.2109 C-6350.3105 4693.1475 -6351.4189 4693.7617 -6352.2759 4693.1045 C-6352.8052 4692.1865 -6352.6587 4691.2695 -6352.1479 4690.2314 c-6351.9409 4689.8105 -6351.5991 4689.5 -6351.2881 4689.1104 c-6350.8735 4688.5938 -6350.5239 4688.041 -6350.0669 4687.6621 c-6349.6563 4687.3232 -6349.1318 4687.1094 -6348.6899 4686.8369 c-6348.5708 4686.7646 -6348.5039 4686.6641 -6348.4043 4686.6074 c-6348.0596 4686.4121 -6347.7935 4686.2031 -6347.4438 4686.0469 c-6346.9819 4685.8418 -6346.4561 4685.7373 -6345.9253 4685.5146 c-6345.6636 4685.4063 -6345.4443 4685.1953 -6345.1709 4685.085 c-6345.0063 4685.0215 -6344.8311 4684.9688 -6344.6592 4684.9141 C-6343.2695 4684.918 -6341.8613 4684.957 -6340.4375 4685.0342 c-6338.7285 4685.0801 -6336.4653 4685.0938 -6334.5728 4685.166 C-6302.4688 4681.6533 -6269.98 4680.7305 -6237.4746 4680.2822 C-6164.0664 4681.6152 -6073.8774 4683.248 -6072.3535 4683.248 c-6069.7773 4683.248 -6067.6909 4681.1602 -6067.6909 4678.584 c-6067.6909 4676.0078 -6069.7773 4673.9209 -6072.3535 4673.9209 cfU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Chalk - Scribble/ A) -(dobe ArtOnPath Brush Tool/ Floral Stem/ Adobe PatternOnPath Br) -(ush Tool/ Decorative Border/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Chalk - Scribble)(1 / Unnamed 3/ / / / / 5 0 0 0 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Floral Stem)(1 / Unnamed Brush Pat 40/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Decorative Border)(1 / New Pattern 1/ / New Pattern 2/ / / 5 0 0.00392157 0.00392) -(157 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 k(White)Pc0 0 0 1 k(Black)Pc0 1 1 0 k(CMYK Red)Pc0 0 1 0 k(CMYK Yellow)Pc1 0 1 0 k(CMYK Green)Pc1 0 0 0 k(CMYK Cyan)Pc1 1 0 0 k(CMYK Blue)Pc0 1 0 0 k(CMYK Magenta)Pc0.15 1 0.9 0.1 k(C=15 M=100 Y=90 K=10)Pc0 0.9 0.85 0 k(C=0 M=90 Y=85 K=0)Pc0 0.8 0.95 0 k(C=0 M=80 Y=95 K=0)Pc0 0.5 1 0 k(C=0 M=50 Y=100 K=0)Pc0 0.35 0.85 0 k(C=0 M=35 Y=85 K=0)Pc0.05 0 0.9 0 k(C=5 M=0 Y=90 K=0)Pc0.2 0 1 0 k(C=20 M=0 Y=100 K=0)Pc0.5 0 1 0 k(C=50 M=0 Y=100 K=0)Pc0.75 0 1 0 k(C=75 M=0 Y=100 K=0)Pc0.85 0.1 1 0.1 k(C=85 M=10 Y=100 K=10)Pc0.9 0.3 0.95 0.3 k(C=90 M=30 Y=95 K=30)Pc0.75 0 0.75 0 k(C=75 M=0 Y=75 K=0)Pc0.8 0.1 0.45 0 k(C=80 M=10 Y=45 K=0)Pc0.7 0.15 0 0 k(C=70 M=15 Y=0 K=0)Pc0.85 0.5 0 0 k(C=85 M=50 Y=0 K=0)Pc1 0.95 0.05 0 k(C=100 M=95 Y=5 K=0)Pc1 1 0.25 0.25 k(C=100 M=100 Y=25 K=25)Pc0.75 1 0 0 k(C=75 M=100 Y=0 K=0)Pc0.5 1 0 0 k(C=50 M=100 Y=0 K=0)Pc0.35 1 0.35 0.1 k(C=35 M=100 Y=35 K=10)Pc0.1 1 0.5 0 k(C=10 M=100 Y=50 K=0)Pc0 0.95 0.2 0 k(C=0 M=95 Y=20 K=0)Pc0.25 0.25 0.4 0 k(C=25 M=25 Y=40 K=0)Pc0.4 0.45 0.5 0.05 k(C=40 M=45 Y=50 K=5)Pc0.5 0.5 0.6 0.25 k(C=50 M=50 Y=60 K=25)Pc0.55 0.6 0.65 0.4 k(C=55 M=60 Y=65 K=40)Pc0.25 0.4 0.65 0 k(C=25 M=40 Y=65 K=0)Pc0.3 0.5 0.75 0.1 k(C=30 M=50 Y=75 K=10)Pc0.35 0.6 0.8 0.25 k(C=35 M=60 Y=80 K=25)Pc0.4 0.65 0.9 0.35 k(C=40 M=65 Y=90 K=35)Pc0.4 0.7 1 0.5 k(C=40 M=70 Y=100 K=50)Pc0.5 0.7 0.8 0.7 k(C=50 M=70 Y=80 K=70)PcBb2 (Fade to Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade to Black)PcBb0 0 0 0 Bh2 (Super Soft Black Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Super Soft Black Vignette)PcBb2 (Green, Yellow, Orange) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Green, Yellow, Orange)PcBb0 0 0 0 Bh2 (Purple Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Purple Radial)Pc(Laguna) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Laguna)Pc0 0 0 1 k(C=0 M=0 Y=0 K=100)Pc0 0 0 0.899994 k(C=0 M=0 Y=0 K=90)Pc0 0 0 0.799988 k(C=0 M=0 Y=0 K=80)Pc0 0 0 0.699997 k(C=0 M=0 Y=0 K=70)Pc0 0 0 0.599991 k(C=0 M=0 Y=0 K=60)Pc0 0 0 0.5 k(C=0 M=0 Y=0 K=50)Pc0 0 0 0.399994 k(C=0 M=0 Y=0 K=40)Pc0 0 0 0.299988 k(C=0 M=0 Y=0 K=30)Pc0 0 0 0.199997 k(C=0 M=0 Y=0 K=20)Pc0 0 0 0.099991 k(C=0 M=0 Y=0 K=10)Pc0 0 0 0.049988 k(C=0 M=0 Y=0 K=5)Pc0 1 1 0 k(C=0 M=100 Y=100 K=0)Pc0 0.75 1 0 k(C=0 M=75 Y=100 K=0)Pc0 0.1 0.95 0 k(C=0 M=10 Y=95 K=0)Pc0.85 0.1 1 0 k(C=85 M=10 Y=100 K=0)Pc1 0.9 0 0 k(C=100 M=90 Y=0 K=0)Pc0.6 0.9 0.000031 0.000031 k(C=60 M=90 Y=0 K=0)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 Au1 Ap0 O0 0 0 0 k0 R0 0 0 1 K0 J 0 j 1 w 10 M []0 d0 XR1667.8813 -875.3706 m1667.8813 -1304.0757 1320.3472 -1651.6099 891.6421 -1651.6099 c462.937 -1651.6099 115.4028 -1304.0757 115.4028 -875.3706 c115.4028 -446.6655 462.937 -99.1313 891.6421 -99.1313 c1320.3472 -99.1313 1667.8813 -446.6655 1667.8813 -875.3706 cb1 g1 XR1222.3892 -875.3706 m1222.3892 -1058.0366 1074.3091 -1206.1167 891.6431 -1206.1167 c708.9761 -1206.1167 560.896 -1058.0366 560.896 -875.3706 c560.896 -692.7036 708.9761 -544.6235 891.6431 -544.6235 c1074.3091 -544.6235 1222.3892 -692.7036 1222.3892 -875.3706 cbu0 0 0 0 k0 XR875.8501 -267.2852 m790.6841 -274.7559 L783.2134 -189.5898 L868.3794 -182.1191 L875.8501 -267.2852 Lb/BBAccumRotation (0.087493) XT440.7173 -449.7637 m382.7153 -512.5718 L319.9077 -454.5693 L377.9106 -391.7617 L440.7173 -449.7637 Lb/BBAccumRotation (0.825149) XT525.8267 -1357.146 m467.8247 -1419.9526 L405.0171 -1361.9507 L463.02 -1299.144 L525.8267 -1357.146 Lb/BBAccumRotation (0.825149) XT1571.7397 -782.8359 m1579.1333 -868.0078 L1493.9614 -875.4028 L1486.5679 -790.2295 L1571.7397 -782.8359 Lb/BBAccumRotation (1.657391) XT969.3276 -1488.0542 m976.7212 -1573.2261 L891.5493 -1580.6206 L884.1558 -1495.4468 L969.3276 -1488.0542 Lb/BBAccumRotation (1.657391) XTUUu3367.8809 -851.1191 m3367.8809 -1279.8242 3020.3477 -1627.3584 2591.6426 -1627.3584 c2162.9375 -1627.3584 1815.4023 -1279.8242 1815.4023 -851.1191 c1815.4023 -422.4141 2162.9375 -74.8799 2591.6426 -74.8799 c3020.3477 -74.8799 3367.8809 -422.4141 3367.8809 -851.1191 cb1 g1 XR2922.3887 -851.1191 m2922.3887 -1033.7852 2774.3086 -1181.8652 2591.6426 -1181.8652 c2408.9766 -1181.8652 2260.8965 -1033.7852 2260.8965 -851.1191 c2260.8965 -668.4521 2408.9766 -520.3721 2591.6426 -520.3721 c2774.3086 -520.3721 2922.3887 -668.4521 2922.3887 -851.1191 cbu0 0 0 0 k0 XR2575.8496 -243.0337 m2490.6836 -250.5044 L2483.2129 -165.3384 L2568.3789 -157.8677 L2575.8496 -243.0337 Lb/BBAccumRotation (0.087493) XT2140.7168 -425.5122 m2082.7148 -488.3203 L2019.9082 -430.3179 L2077.9102 -367.5103 L2140.7168 -425.5122 Lb/BBAccumRotation (0.825149) XT2225.8262 -1332.8945 m2167.8242 -1395.7012 L2105.0176 -1337.6992 L2163.0195 -1274.8926 L2225.8262 -1332.8945 Lb/BBAccumRotation (0.825149) XT3271.7402 -758.5845 m3279.1328 -843.7563 L3193.9609 -851.1514 L3186.5684 -765.978 L3271.7402 -758.5845 Lb/BBAccumRotation (1.657391) XT2669.3281 -1463.8027 m2676.7207 -1548.9746 L2591.5488 -1556.3691 L2584.1563 -1471.1953 L2669.3281 -1463.8027 Lb/BBAccumRotation (1.657391) XTUUu3367.8818 -2483.9697 m3367.8818 -2912.6748 3020.3486 -3260.209 2591.6436 -3260.209 c2162.9385 -3260.209 1815.4033 -2912.6748 1815.4033 -2483.9697 c1815.4033 -2055.2646 2162.9385 -1707.7305 2591.6436 -1707.7305 c3020.3486 -1707.7305 3367.8818 -2055.2646 3367.8818 -2483.9697 cb1 g1 XR2922.3896 -2483.9697 m2922.3896 -2666.6357 2774.3096 -2814.7158 2591.6436 -2814.7158 c2408.9775 -2814.7158 2260.8975 -2666.6357 2260.8975 -2483.9697 c2260.8975 -2301.3027 2408.9775 -2153.2227 2591.6436 -2153.2227 c2774.3096 -2153.2227 2922.3896 -2301.3027 2922.3896 -2483.9697 cbu0 0 0 0 k0 XR2575.8506 -1875.8843 m2490.6846 -1883.355 L2483.2139 -1798.189 L2568.3799 -1790.7183 L2575.8506 -1875.8843 Lb/BBAccumRotation (0.087493) XT2140.7178 -2058.3628 m2082.7158 -2121.1709 L2019.9092 -2063.1685 L2077.9111 -2000.3608 L2140.7178 -2058.3628 Lb/BBAccumRotation (0.825149) XT2225.8271 -2965.7451 m2167.8252 -3028.5518 L2105.0186 -2970.5498 L2163.0205 -2907.7432 L2225.8271 -2965.7451 Lb/BBAccumRotation (0.825149) XT3271.7412 -2391.4351 m3279.1338 -2476.6069 L3193.9619 -2484.002 L3186.5693 -2398.8286 L3271.7412 -2391.4351 Lb/BBAccumRotation (1.657391) XT2669.3291 -3096.6533 m2676.7217 -3181.8252 L2591.5498 -3189.2197 L2584.1572 -3104.0459 L2669.3291 -3096.6533 Lb/BBAccumRotation (1.657391) XTUUu1667.8818 -2498.7065 m1667.8818 -2927.4116 1320.3486 -3274.9458 891.6436 -3274.9458 c462.9385 -3274.9458 115.4033 -2927.4116 115.4033 -2498.7065 c115.4033 -2070.0015 462.9385 -1722.4673 891.6436 -1722.4673 c1320.3486 -1722.4673 1667.8818 -2070.0015 1667.8818 -2498.7065 cb1 g1 XR1222.3896 -2498.7065 m1222.3896 -2681.3726 1074.3096 -2829.4526 891.6436 -2829.4526 c708.9775 -2829.4526 560.8975 -2681.3726 560.8975 -2498.7065 c560.8975 -2316.0396 708.9775 -2167.9595 891.6436 -2167.9595 c1074.3096 -2167.9595 1222.3896 -2316.0396 1222.3896 -2498.7065 cbu0 0 0 0 k0 XR875.8506 -1890.6211 m790.6846 -1898.0918 L783.2139 -1812.9258 L868.3799 -1805.4551 L875.8506 -1890.6211 Lb/BBAccumRotation (0.087493) XT440.7178 -2073.0996 m382.7158 -2135.9077 L319.9092 -2077.9053 L377.9111 -2015.0977 L440.7178 -2073.0996 Lb/BBAccumRotation (0.825149) XT525.8271 -2980.4819 m467.8252 -3043.2886 L405.0186 -2985.2866 L463.0205 -2922.48 L525.8271 -2980.4819 Lb/BBAccumRotation (0.825149) XT1571.7412 -2406.1719 m1579.1338 -2491.3438 L1493.9619 -2498.7388 L1486.5693 -2413.5654 L1571.7412 -2406.1719 Lb/BBAccumRotation (1.657391) XT969.3291 -3111.3901 m976.7217 -3196.562 L891.5498 -3203.9565 L884.1572 -3118.7827 L969.3291 -3111.3901 Lb/BBAccumRotation (1.657391) XTUUu1655.374 -4382.1035 m1655.374 -4810.8086 1307.8398 -5158.3438 879.1348 -5158.3438 c450.4297 -5158.3438 102.8955 -4810.8086 102.8955 -4382.1035 c102.8955 -3953.3984 450.4297 -3605.8652 879.1348 -3605.8652 c1307.8398 -3605.8652 1655.374 -3953.3984 1655.374 -4382.1035 cb1 g1 XR1209.8818 -4382.1035 m1209.8818 -4564.7695 1061.8018 -4712.8496 879.1357 -4712.8496 c696.4688 -4712.8496 548.3887 -4564.7695 548.3887 -4382.1035 c548.3887 -4199.4375 696.4688 -4051.3574 879.1357 -4051.3574 c1061.8018 -4051.3574 1209.8818 -4199.4375 1209.8818 -4382.1035 cbu0 0 0 0 k0 XR863.3428 -3774.0186 m778.1768 -3781.4893 L770.7061 -3696.3232 L855.8721 -3688.8525 L863.3428 -3774.0186 Lb/BBAccumRotation (0.087493) XT428.21 -3956.4971 m370.208 -4019.3047 L307.4004 -3961.3027 L365.4033 -3898.4951 L428.21 -3956.4971 Lb/BBAccumRotation (0.825149) XT513.3193 -4863.8789 m455.3174 -4926.6855 L392.5098 -4868.6836 L450.5127 -4805.877 L513.3193 -4863.8789 Lb/BBAccumRotation (0.825149) XT1559.2324 -4289.5693 m1566.626 -4374.7412 L1481.4541 -4382.1367 L1474.0605 -4296.9629 L1559.2324 -4289.5693 Lb/BBAccumRotation (1.657391) XT956.8203 -4994.7871 m964.2139 -5079.959 L879.042 -5087.3535 L871.6484 -5002.1797 L956.8203 -4994.7871 Lb/BBAccumRotation (1.657391) XTUUu3355.373 -4335.8525 m3355.373 -4764.5576 3007.8398 -5112.0918 2579.1348 -5112.0918 c2150.4297 -5112.0918 1802.8945 -4764.5576 1802.8945 -4335.8525 c1802.8945 -3907.1475 2150.4297 -3559.6133 2579.1348 -3559.6133 c3007.8398 -3559.6133 3355.373 -3907.1475 3355.373 -4335.8525 cb1 g1 XR2909.8809 -4335.8525 m2909.8809 -4518.5186 2761.8008 -4666.5986 2579.1348 -4666.5986 c2396.4688 -4666.5986 2248.3887 -4518.5186 2248.3887 -4335.8525 c2248.3887 -4153.1855 2396.4688 -4005.1055 2579.1348 -4005.1055 c2761.8008 -4005.1055 2909.8809 -4153.1855 2909.8809 -4335.8525 cbu0 0 0 0 k0 XR2563.3418 -3727.7676 m2478.1758 -3735.2383 L2470.7051 -3650.0723 L2555.8711 -3642.6016 L2563.3418 -3727.7676 Lb/BBAccumRotation (0.087493) XT2128.209 -3910.2461 m2070.207 -3973.0537 L2007.4004 -3915.0508 L2065.4023 -3852.2441 L2128.209 -3910.2461 Lb/BBAccumRotation (0.825149) XT2213.3184 -4817.6279 m2155.3164 -4880.4346 L2092.5098 -4822.4326 L2150.5117 -4759.626 L2213.3184 -4817.6279 Lb/BBAccumRotation (0.825149) XT3259.2324 -4243.3184 m3266.625 -4328.4902 L3181.4531 -4335.8848 L3174.0605 -4250.7109 L3259.2324 -4243.3184 Lb/BBAccumRotation (1.657391) XT2656.8203 -4948.5361 m2664.2129 -5033.708 L2579.041 -5041.1025 L2571.6484 -4955.9287 L2656.8203 -4948.5361 Lb/BBAccumRotation (1.657391) XTUUu3355.375 -5968.7031 m3355.375 -6397.4082 3007.8418 -6744.9424 2579.1367 -6744.9424 c2150.4316 -6744.9424 1802.8965 -6397.4082 1802.8965 -5968.7031 c1802.8965 -5539.998 2150.4316 -5192.4639 2579.1367 -5192.4639 c3007.8418 -5192.4639 3355.375 -5539.998 3355.375 -5968.7031 cb1 g1 XR2909.8828 -5968.7031 m2909.8828 -6151.3691 2761.8027 -6299.4492 2579.1367 -6299.4492 c2396.4707 -6299.4492 2248.3906 -6151.3691 2248.3906 -5968.7031 c2248.3906 -5786.0361 2396.4707 -5637.9561 2579.1367 -5637.9561 c2761.8027 -5637.9561 2909.8828 -5786.0361 2909.8828 -5968.7031 cbu0 0 0 0 k0 XR2563.3438 -5360.6172 m2478.1777 -5368.0879 L2470.707 -5282.9219 L2555.873 -5275.4512 L2563.3438 -5360.6172 Lb/BBAccumRotation (0.087493) XT2128.2109 -5543.0957 m2070.209 -5605.9043 L2007.4023 -5547.9023 L2065.4043 -5485.0938 L2128.2109 -5543.0957 Lb/BBAccumRotation (0.825149) XT2213.3203 -6450.4785 m2155.3184 -6513.2852 L2092.5117 -6455.2832 L2150.5137 -6392.4766 L2213.3203 -6450.4785 Lb/BBAccumRotation (0.825149) XT3259.2344 -5876.168 m3266.627 -5961.3398 L3181.4551 -5968.7354 L3174.0625 -5883.5625 L3259.2344 -5876.168 Lb/BBAccumRotation (1.657391) XT2656.8223 -6581.3867 m2664.2148 -6666.5586 L2579.043 -6673.9531 L2571.6504 -6588.7793 L2656.8223 -6581.3867 Lb/BBAccumRotation (1.657391) XTUUu1655.3745 -6005.4395 m1655.3745 -6434.1445 1307.8413 -6781.6797 879.1362 -6781.6797 c450.4312 -6781.6797 102.896 -6434.1445 102.896 -6005.4395 c102.896 -5576.7344 450.4312 -5229.2012 879.1362 -5229.2012 c1307.8413 -5229.2012 1655.3745 -5576.7344 1655.3745 -6005.4395 cb1 g1 XR1209.8823 -6005.4395 m1209.8823 -6188.1055 1061.8022 -6336.1855 879.1362 -6336.1855 c696.4702 -6336.1855 548.3901 -6188.1055 548.3901 -6005.4395 c548.3901 -5822.7734 696.4702 -5674.6934 879.1362 -5674.6934 c1061.8022 -5674.6934 1209.8823 -5822.7734 1209.8823 -6005.4395 cbu0 0 0 0 k0 XR863.3433 -5397.3545 m778.1772 -5404.8252 L770.7065 -5319.6592 L855.8726 -5312.1885 L863.3433 -5397.3545 Lb/BBAccumRotation (0.087493) XT428.2104 -5579.833 m370.2085 -5642.6406 L307.4019 -5584.6387 L365.4038 -5521.8311 L428.2104 -5579.833 Lb/BBAccumRotation (0.825149) XT513.3198 -6487.2148 m455.3179 -6550.0215 L392.5112 -6492.0195 L450.5132 -6429.2129 L513.3198 -6487.2148 Lb/BBAccumRotation (0.825149) XT1559.2339 -5912.9053 m1566.6265 -5998.0771 L1481.4546 -6005.4727 L1474.062 -5920.2988 L1559.2339 -5912.9053 Lb/BBAccumRotation (1.657391) XT956.8218 -6618.123 m964.2144 -6703.2949 L879.0425 -6710.6895 L871.6499 -6625.5156 L956.8218 -6618.123 Lb/BBAccumRotation (1.657391) XTUUuu0 Ap1090.4336 -3497.5352 m1090.4336 -3355.8022 LS1090.4336 -3355.8022 m1161.2998 -3355.8022 LS1090.4336 -3497.5352 m1125.8667 -3497.5352 LS1125.8667 -3497.5352 m1125.8667 -3428.6772 LS1125.8667 -3391.2354 m1161.2998 -3391.2354 LS1125.8667 -3428.6772 m1125.8667 -3391.2354 LS1161.2998 -3391.2354 m1161.2998 -3355.8022 LSUu1223.0313 -3357.811 m1223.0313 -3499.543 LS/BBAccumRotation (3.141593) XT1223.0313 -3499.543 m1152.165 -3499.543 LS/BBAccumRotation (3.141593) XT1223.0313 -3357.811 m1187.5981 -3357.811 LS/BBAccumRotation (3.141593) XT1187.5981 -3357.811 m1187.5981 -3426.6685 LS/BBAccumRotation (3.141593) XT1187.5981 -3464.1113 m1152.165 -3464.1113 LS/BBAccumRotation (3.141593) XT1187.5981 -3426.6685 m1187.5981 -3464.1113 LS/BBAccumRotation (3.141593) XT1152.165 -3464.1113 m1152.165 -3499.543 LS/BBAccumRotation (3.141593) XTUUuu1339.1191 -3490.5049 m1339.1191 -3348.7725 LS1339.1191 -3348.7725 m1409.9854 -3348.7725 LS1339.1191 -3490.5049 m1374.5522 -3490.5049 LS1374.5522 -3490.5049 m1374.5522 -3421.6475 LS1374.5522 -3384.2056 m1409.9854 -3384.2056 LS1374.5522 -3421.6475 m1374.5522 -3384.2056 LS1409.9854 -3384.2056 m1409.9854 -3348.7725 LSUu1471.7168 -3350.7813 m1471.7168 -3492.5137 LS/BBAccumRotation (3.141593) XT1471.7168 -3492.5137 m1400.8506 -3492.5137 LS/BBAccumRotation (3.141593) XT1471.7168 -3350.7813 m1436.2837 -3350.7813 LS/BBAccumRotation (3.141593) XT1436.2837 -3350.7813 m1436.2837 -3419.6387 LS/BBAccumRotation (3.141593) XT1436.2837 -3457.0811 m1400.8506 -3457.0811 LS/BBAccumRotation (3.141593) XT1436.2837 -3419.6387 m1436.2837 -3457.0811 LS/BBAccumRotation (3.141593) XT1400.8506 -3457.0811 m1400.8506 -3492.5137 LS/BBAccumRotation (3.141593) XTUUuu1663.0747 -1429.4097 m1663.0747 -1287.6777 LS1663.0747 -1287.6777 m1733.9414 -1287.6777 LS1663.0747 -1429.4097 m1698.5078 -1429.4097 LS1698.5078 -1429.4097 m1698.5078 -1360.5527 LS1698.5078 -1323.1108 m1733.9414 -1323.1108 LS1698.5078 -1360.5527 m1698.5078 -1323.1108 LS1733.9414 -1323.1108 m1733.9414 -1287.6777 LSUu1795.6719 -1289.6865 m1795.6719 -1431.4194 LS/BBAccumRotation (3.141593) XT1795.6719 -1431.4194 m1724.8062 -1431.4194 LS/BBAccumRotation (3.141593) XT1795.6719 -1289.6865 m1760.2393 -1289.6865 LS/BBAccumRotation (3.141593) XT1760.2393 -1289.6865 m1760.2393 -1358.5439 LS/BBAccumRotation (3.141593) XT1760.2393 -1395.9858 m1724.8062 -1395.9858 LS/BBAccumRotation (3.141593) XT1760.2393 -1358.5439 m1760.2393 -1395.9858 LS/BBAccumRotation (3.141593) XT1724.8062 -1395.9858 m1724.8062 -1431.4194 LS/BBAccumRotation (3.141593) XTUUuu1601.5835 -3489.5 m1601.5835 -3347.7681 LS1601.5835 -3347.7681 m1672.4497 -3347.7681 LS1601.5835 -3489.5 m1637.0166 -3489.5 LS1637.0166 -3489.5 m1637.0166 -3420.6431 LS1637.0166 -3383.2012 m1672.4497 -3383.2012 LS1637.0166 -3420.6431 m1637.0166 -3383.2012 LS1672.4497 -3383.2012 m1672.4497 -3347.7681 LSUu1734.1816 -3349.7769 m1734.1816 -3491.5098 LS/BBAccumRotation (3.141593) XT1734.1816 -3491.5098 m1663.3149 -3491.5098 LS/BBAccumRotation (3.141593) XT1734.1816 -3349.7769 m1698.7476 -3349.7769 LS/BBAccumRotation (3.141593) XT1698.7476 -3349.7769 m1698.7476 -3418.6343 LS/BBAccumRotation (3.141593) XT1698.7476 -3456.0767 m1663.3149 -3456.0767 LS/BBAccumRotation (3.141593) XT1698.7476 -3418.6343 m1698.7476 -3456.0767 LS/BBAccumRotation (3.141593) XT1663.3149 -3456.0767 m1663.3149 -3491.5098 LS/BBAccumRotation (3.141593) XTUUuu1864.6484 -3492.5137 m1864.6484 -3350.7813 LS1864.6484 -3350.7813 m1935.5146 -3350.7813 LS1864.6484 -3492.5137 m1900.082 -3492.5137 LS1900.082 -3492.5137 m1900.082 -3423.6563 LS1900.082 -3386.2144 m1935.5146 -3386.2144 LS1900.082 -3423.6563 m1900.082 -3386.2144 LS1935.5146 -3386.2144 m1935.5146 -3350.7813 LSUu1997.2461 -3352.79 m1997.2461 -3494.5225 LS/BBAccumRotation (3.141593) XT1997.2461 -3494.5225 m1926.3799 -3494.5225 LS/BBAccumRotation (3.141593) XT1997.2461 -3352.79 m1961.8125 -3352.79 LS/BBAccumRotation (3.141593) XT1961.8125 -3352.79 m1961.8125 -3421.6475 LS/BBAccumRotation (3.141593) XT1961.8125 -3459.0898 m1926.3799 -3459.0898 LS/BBAccumRotation (3.141593) XT1961.8125 -3421.6475 m1961.8125 -3459.0898 LS/BBAccumRotation (3.141593) XT1926.3799 -3459.0898 m1926.3799 -3494.5225 LS/BBAccumRotation (3.141593) XTUUuu2085.4688 -3493.5176 m2085.4688 -3351.7856 LS2085.4688 -3351.7856 m2156.335 -3351.7856 LS2085.4688 -3493.5176 m2120.9023 -3493.5176 LS2120.9023 -3493.5176 m2120.9023 -3424.6606 LS2120.9023 -3387.2188 m2156.335 -3387.2188 LS2120.9023 -3424.6606 m2120.9023 -3387.2188 LS2156.335 -3387.2188 m2156.335 -3351.7856 LSUu2218.0664 -3353.7944 m2218.0664 -3495.5273 LS/BBAccumRotation (3.141593) XT2218.0664 -3495.5273 m2147.2002 -3495.5273 LS/BBAccumRotation (3.141593) XT2218.0664 -3353.7944 m2182.6328 -3353.7944 LS/BBAccumRotation (3.141593) XT2182.6328 -3353.7944 m2182.6328 -3422.6519 LS/BBAccumRotation (3.141593) XT2182.6328 -3460.0938 m2147.2002 -3460.0938 LS/BBAccumRotation (3.141593) XT2182.6328 -3422.6519 m2182.6328 -3460.0938 LS/BBAccumRotation (3.141593) XT2147.2002 -3460.0938 m2147.2002 -3495.5273 LS/BBAccumRotation (3.141593) XTUUuu1387.7012 -3719.627 m1387.7012 -3577.8936 LS1387.7012 -3577.8936 m1458.5674 -3577.8936 LS1387.7012 -3719.627 m1423.1348 -3719.627 LS1423.1348 -3719.627 m1423.1348 -3650.7686 LS1423.1348 -3613.3271 m1458.5674 -3613.3271 LS1423.1348 -3650.7686 m1423.1348 -3613.3271 LS1458.5674 -3613.3271 m1458.5674 -3577.8936 LSUu1520.2988 -3579.9033 m1520.2988 -3721.6348 LS/BBAccumRotation (3.141593) XT1520.2988 -3721.6348 m1449.4326 -3721.6348 LS/BBAccumRotation (3.141593) XT1520.2988 -3579.9033 m1484.8652 -3579.9033 LS/BBAccumRotation (3.141593) XT1484.8652 -3579.9033 m1484.8652 -3648.7607 LS/BBAccumRotation (3.141593) XT1484.8652 -3686.2031 m1449.4326 -3686.2031 LS/BBAccumRotation (3.141593) XT1484.8652 -3648.7607 m1484.8652 -3686.2031 LS/BBAccumRotation (3.141593) XT1449.4326 -3686.2031 m1449.4326 -3721.6348 LS/BBAccumRotation (3.141593) XTUUuu1658.5078 -1650.4834 m1658.5078 -1508.75 LS1658.5078 -1508.75 m1729.374 -1508.75 LS1658.5078 -1650.4834 m1693.9414 -1650.4834 LS1693.9414 -1650.4834 m1693.9414 -1581.625 LS1693.9414 -1544.1836 m1729.374 -1544.1836 LS1693.9414 -1581.625 m1693.9414 -1544.1836 LS1729.374 -1544.1836 m1729.374 -1508.75 LSUu1791.1055 -1510.7598 m1791.1055 -1652.4912 LS/BBAccumRotation (3.141593) XT1791.1055 -1652.4912 m1720.2393 -1652.4912 LS/BBAccumRotation (3.141593) XT1791.1055 -1510.7598 m1755.6719 -1510.7598 LS/BBAccumRotation (3.141593) XT1755.6719 -1510.7598 m1755.6719 -1579.6172 LS/BBAccumRotation (3.141593) XT1755.6719 -1617.0596 m1720.2393 -1617.0596 LS/BBAccumRotation (3.141593) XT1755.6719 -1579.6172 m1755.6719 -1617.0596 LS/BBAccumRotation (3.141593) XT1720.2393 -1617.0596 m1720.2393 -1652.4912 LS/BBAccumRotation (3.141593) XTUUuu1864.6484 -3719.627 m1864.6484 -3577.8936 LS1864.6484 -3577.8936 m1935.5146 -3577.8936 LS1864.6484 -3719.627 m1900.082 -3719.627 LS1900.082 -3719.627 m1900.082 -3650.7686 LS1900.082 -3613.3271 m1935.5146 -3613.3271 LS1900.082 -3650.7686 m1900.082 -3613.3271 LS1935.5146 -3613.3271 m1935.5146 -3577.8936 LSUu1997.2461 -3579.9033 m1997.2461 -3721.6348 LS/BBAccumRotation (3.141593) XT1997.2461 -3721.6348 m1926.3799 -3721.6348 LS/BBAccumRotation (3.141593) XT1997.2461 -3579.9033 m1961.8125 -3579.9033 LS/BBAccumRotation (3.141593) XT1961.8125 -3579.9033 m1961.8125 -3648.7607 LS/BBAccumRotation (3.141593) XT1961.8125 -3686.2031 m1926.3799 -3686.2031 LS/BBAccumRotation (3.141593) XT1961.8125 -3648.7607 m1961.8125 -3686.2031 LS/BBAccumRotation (3.141593) XT1926.3799 -3686.2031 m1926.3799 -3721.6348 LS/BBAccumRotation (3.141593) XTUUuu1618.5078 -3719.627 m1618.5078 -3577.8936 LS1618.5078 -3577.8936 m1689.374 -3577.8936 LS1618.5078 -3719.627 m1653.9414 -3719.627 LS1653.9414 -3719.627 m1653.9414 -3650.7686 LS1653.9414 -3613.3271 m1689.374 -3613.3271 LS1653.9414 -3650.7686 m1653.9414 -3613.3271 LS1689.374 -3613.3271 m1689.374 -3577.8936 LSUu1751.1055 -3579.9033 m1751.1055 -3721.6348 LS/BBAccumRotation (3.141593) XT1751.1055 -3721.6348 m1680.2393 -3721.6348 LS/BBAccumRotation (3.141593) XT1751.1055 -3579.9033 m1715.6719 -3579.9033 LS/BBAccumRotation (3.141593) XT1715.6719 -3579.9033 m1715.6719 -3648.7607 LS/BBAccumRotation (3.141593) XT1715.6719 -3686.2031 m1680.2393 -3686.2031 LS/BBAccumRotation (3.141593) XT1715.6719 -3648.7607 m1715.6719 -3686.2031 LS/BBAccumRotation (3.141593) XT1680.2393 -3686.2031 m1680.2393 -3721.6348 LS/BBAccumRotation (3.141593) XTUUuu1637.0166 -3968.3584 m1637.0166 -3826.625 LS1637.0166 -3826.625 m1707.8828 -3826.625 LS1637.0166 -3968.3584 m1672.4502 -3968.3584 LS1672.4502 -3968.3584 m1672.4502 -3899.5 LS1672.4502 -3862.0586 m1707.8828 -3862.0586 LS1672.4502 -3899.5 m1672.4502 -3862.0586 LS1707.8828 -3862.0586 m1707.8828 -3826.625 LSUu1769.6143 -3828.6348 m1769.6143 -3970.3662 LS/BBAccumRotation (3.141593) XT1769.6143 -3970.3662 m1698.748 -3970.3662 LS/BBAccumRotation (3.141593) XT1769.6143 -3828.6348 m1734.1807 -3828.6348 LS/BBAccumRotation (3.141593) XT1734.1807 -3828.6348 m1734.1807 -3897.4922 LS/BBAccumRotation (3.141593) XT1734.1807 -3934.9346 m1698.748 -3934.9346 LS/BBAccumRotation (3.141593) XT1734.1807 -3897.4922 m1734.1807 -3934.9346 LS/BBAccumRotation (3.141593) XT1698.748 -3934.9346 m1698.748 -3970.3662 LS/BBAccumRotation (3.141593) XTUUuu1653.9404 -1849.4639 m1653.9404 -1707.7305 LS1653.9404 -1707.7305 m1724.8066 -1707.7305 LS1653.9404 -1849.4639 m1689.374 -1849.4639 LS1689.374 -1849.4639 m1689.374 -1780.6055 LS1689.374 -1743.1641 m1724.8066 -1743.1641 LS1689.374 -1780.6055 m1689.374 -1743.1641 LS1724.8066 -1743.1641 m1724.8066 -1707.7305 LSUu1786.5381 -1709.7402 m1786.5381 -1851.4717 LS/BBAccumRotation (3.141593) XT1786.5381 -1851.4717 m1715.6719 -1851.4717 LS/BBAccumRotation (3.141593) XT1786.5381 -1709.7402 m1751.1045 -1709.7402 LS/BBAccumRotation (3.141593) XT1751.1045 -1709.7402 m1751.1045 -1778.5977 LS/BBAccumRotation (3.141593) XT1751.1045 -1816.04 m1715.6719 -1816.04 LS/BBAccumRotation (3.141593) XT1751.1045 -1778.5977 m1751.1045 -1816.04 LS/BBAccumRotation (3.141593) XT1715.6719 -1816.04 m1715.6719 -1851.4717 LS/BBAccumRotation (3.141593) XTUUuu1653.9404 -4996.5488 m1653.9404 -4854.8154 LS1653.9404 -4854.8154 m1724.8066 -4854.8154 LS1653.9404 -4996.5488 m1689.374 -4996.5488 LS1689.374 -4996.5488 m1689.374 -4927.6904 LS1689.374 -4890.249 m1724.8066 -4890.249 LS1689.374 -4927.6904 m1689.374 -4890.249 LS1724.8066 -4890.249 m1724.8066 -4854.8154 LSUu1786.5381 -4856.8252 m1786.5381 -4998.5566 LS/BBAccumRotation (3.141593) XT1786.5381 -4998.5566 m1715.6719 -4998.5566 LS/BBAccumRotation (3.141593) XT1786.5381 -4856.8252 m1751.1045 -4856.8252 LS/BBAccumRotation (3.141593) XT1751.1045 -4856.8252 m1751.1045 -4925.6826 LS/BBAccumRotation (3.141593) XT1751.1045 -4963.125 m1715.6719 -4963.125 LS/BBAccumRotation (3.141593) XT1751.1045 -4925.6826 m1751.1045 -4963.125 LS/BBAccumRotation (3.141593) XT1715.6719 -4963.125 m1715.6719 -4998.5566 LS/BBAccumRotation (3.141593) XTUUuu1640.791 -5234.4473 m1640.791 -5092.7129 LS1640.791 -5092.7129 m1711.6572 -5092.7129 LS1640.791 -5234.4473 m1676.2246 -5234.4473 LS1676.2246 -5234.4473 m1676.2246 -5165.5879 LS1676.2246 -5128.1465 m1711.6572 -5128.1465 LS1676.2246 -5165.5879 m1676.2246 -5128.1465 LS1711.6572 -5128.1465 m1711.6572 -5092.7129 LSUu1773.3887 -5094.7227 m1773.3887 -5236.4551 LS/BBAccumRotation (3.141593) XT1773.3887 -5236.4551 m1702.5225 -5236.4551 LS/BBAccumRotation (3.141593) XT1773.3887 -5094.7227 m1737.9551 -5094.7227 LS/BBAccumRotation (3.141593) XT1737.9551 -5094.7227 m1737.9551 -5163.5801 LS/BBAccumRotation (3.141593) XT1737.9551 -5201.0234 m1702.5225 -5201.0234 LS/BBAccumRotation (3.141593) XT1737.9551 -5163.5801 m1737.9551 -5201.0234 LS/BBAccumRotation (3.141593) XT1702.5225 -5201.0234 m1702.5225 -5236.4551 LS/BBAccumRotation (3.141593) XTUUuu1640.791 -5437.9512 m1640.791 -5296.2178 LS1640.791 -5296.2178 m1711.6572 -5296.2178 LS1640.791 -5437.9512 m1676.2246 -5437.9512 LS1676.2246 -5437.9512 m1676.2246 -5369.0928 LS1676.2246 -5331.6514 m1711.6572 -5331.6514 LS1676.2246 -5369.0928 m1676.2246 -5331.6514 LS1711.6572 -5331.6514 m1711.6572 -5296.2178 LSUu1773.3887 -5298.2275 m1773.3887 -5439.959 LS/BBAccumRotation (3.141593) XT1773.3887 -5439.959 m1702.5225 -5439.959 LS/BBAccumRotation (3.141593) XT1773.3887 -5298.2275 m1737.9551 -5298.2275 LS/BBAccumRotation (3.141593) XT1737.9551 -5298.2275 m1737.9551 -5367.085 LS/BBAccumRotation (3.141593) XT1737.9551 -5404.5273 m1702.5225 -5404.5273 LS/BBAccumRotation (3.141593) XT1737.9551 -5367.085 m1737.9551 -5404.5273 LS/BBAccumRotation (3.141593) XT1702.5225 -5404.5273 m1702.5225 -5439.959 LS/BBAccumRotation (3.141593) XTUUuu1440.8511 -5234.4473 m1440.8511 -5092.7129 LS1440.8511 -5092.7129 m1511.7173 -5092.7129 LS1440.8511 -5234.4473 m1476.2847 -5234.4473 LS1476.2847 -5234.4473 m1476.2847 -5165.5879 LS1476.2847 -5128.1465 m1511.7173 -5128.1465 LS1476.2847 -5165.5879 m1476.2847 -5128.1465 LS1511.7173 -5128.1465 m1511.7173 -5092.7129 LSUu1573.4487 -5094.7227 m1573.4487 -5236.4551 LS/BBAccumRotation (3.141593) XT1573.4487 -5236.4551 m1502.5825 -5236.4551 LS/BBAccumRotation (3.141593) XT1573.4487 -5094.7227 m1538.0151 -5094.7227 LS/BBAccumRotation (3.141593) XT1538.0151 -5094.7227 m1538.0151 -5163.5801 LS/BBAccumRotation (3.141593) XT1538.0151 -5201.0234 m1502.5825 -5201.0234 LS/BBAccumRotation (3.141593) XT1538.0151 -5163.5801 m1538.0151 -5201.0234 LS/BBAccumRotation (3.141593) XT1502.5825 -5201.0234 m1502.5825 -5236.4551 LS/BBAccumRotation (3.141593) XTUUuu1831.1055 -5234.4473 m1831.1055 -5092.7129 LS1831.1055 -5092.7129 m1901.9717 -5092.7129 LS1831.1055 -5234.4473 m1866.5391 -5234.4473 LS1866.5391 -5234.4473 m1866.5391 -5165.5879 LS1866.5391 -5128.1465 m1901.9717 -5128.1465 LS1866.5391 -5165.5879 m1866.5391 -5128.1465 LS1901.9717 -5128.1465 m1901.9717 -5092.7129 LSUu1963.7031 -5094.7227 m1963.7031 -5236.4551 LS/BBAccumRotation (3.141593) XT1963.7031 -5236.4551 m1892.8369 -5236.4551 LS/BBAccumRotation (3.141593) XT1963.7031 -5094.7227 m1928.2695 -5094.7227 LS/BBAccumRotation (3.141593) XT1928.2695 -5094.7227 m1928.2695 -5163.5801 LS/BBAccumRotation (3.141593) XT1928.2695 -5201.0234 m1892.8369 -5201.0234 LS/BBAccumRotation (3.141593) XT1928.2695 -5163.5801 m1928.2695 -5201.0234 LS/BBAccumRotation (3.141593) XT1892.8369 -5201.0234 m1892.8369 -5236.4551 LS/BBAccumRotation (3.141593) XTUUuu1653.9404 -6522.7441 m1653.9404 -6381.0107 LS1653.9404 -6381.0107 m1724.8066 -6381.0107 LS1653.9404 -6522.7441 m1689.374 -6522.7441 LS1689.374 -6522.7441 m1689.374 -6453.8857 LS1689.374 -6416.4443 m1724.8066 -6416.4443 LS1689.374 -6453.8857 m1689.374 -6416.4443 LS1724.8066 -6416.4443 m1724.8066 -6381.0107 LSUu1786.5381 -6383.0205 m1786.5381 -6524.752 LS/BBAccumRotation (3.141593) XT1786.5381 -6524.752 m1715.6719 -6524.752 LS/BBAccumRotation (3.141593) XT1786.5381 -6383.0205 m1751.1045 -6383.0205 LS/BBAccumRotation (3.141593) XT1751.1045 -6383.0205 m1751.1045 -6451.8779 LS/BBAccumRotation (3.141593) XT1751.1045 -6489.3203 m1715.6719 -6489.3203 LS/BBAccumRotation (3.141593) XT1751.1045 -6451.8779 m1751.1045 -6489.3203 LS/BBAccumRotation (3.141593) XT1715.6719 -6489.3203 m1715.6719 -6524.752 LS/BBAccumRotation (3.141593) XTUUuu1653.9404 -6734.2695 m1653.9404 -6592.5361 LS1653.9404 -6592.5361 m1724.8066 -6592.5361 LS1653.9404 -6734.2695 m1689.374 -6734.2695 LS1689.374 -6734.2695 m1689.374 -6665.4111 LS1689.374 -6627.9697 m1724.8066 -6627.9697 LS1689.374 -6665.4111 m1689.374 -6627.9697 LS1724.8066 -6627.9697 m1724.8066 -6592.5361 LSUu1786.5381 -6594.5459 m1786.5381 -6736.2773 LS/BBAccumRotation (3.141593) XT1786.5381 -6736.2773 m1715.6719 -6736.2773 LS/BBAccumRotation (3.141593) XT1786.5381 -6594.5459 m1751.1045 -6594.5459 LS/BBAccumRotation (3.141593) XT1751.1045 -6594.5459 m1751.1045 -6663.4033 LS/BBAccumRotation (3.141593) XT1751.1045 -6700.8457 m1715.6719 -6700.8457 LS/BBAccumRotation (3.141593) XT1751.1045 -6663.4033 m1751.1045 -6700.8457 LS/BBAccumRotation (3.141593) XT1715.6719 -6700.8457 m1715.6719 -6736.2773 LS/BBAccumRotation (3.141593) XTUUuu1667.0898 -3269.0703 m1667.0898 -3127.3369 LS1667.0898 -3127.3369 m1737.9561 -3127.3369 LS1667.0898 -3269.0703 m1702.5234 -3269.0703 LS1702.5234 -3269.0703 m1702.5234 -3200.2119 LS1702.5234 -3162.7705 m1737.9561 -3162.7705 LS1702.5234 -3200.2119 m1702.5234 -3162.7705 LS1737.9561 -3162.7705 m1737.9561 -3127.3369 LSUu1799.6875 -3129.3467 m1799.6875 -3271.0781 LS/BBAccumRotation (3.141593) XT1799.6875 -3271.0781 m1728.8213 -3271.0781 LS/BBAccumRotation (3.141593) XT1799.6875 -3129.3467 m1764.2539 -3129.3467 LS/BBAccumRotation (3.141593) XT1764.2539 -3129.3467 m1764.2539 -3198.2041 LS/BBAccumRotation (3.141593) XT1764.2539 -3235.6465 m1728.8213 -3235.6465 LS/BBAccumRotation (3.141593) XT1764.2539 -3198.2041 m1764.2539 -3235.6465 LS/BBAccumRotation (3.141593) XT1728.8213 -3235.6465 m1728.8213 -3271.0781 LS/BBAccumRotation (3.141593) XTUUuu1877.7979 -3269.0703 m1877.7979 -3127.3369 LS1877.7979 -3127.3369 m1948.6641 -3127.3369 LS1877.7979 -3269.0703 m1913.2314 -3269.0703 LS1913.2314 -3269.0703 m1913.2314 -3200.2119 LS1913.2314 -3162.7705 m1948.6641 -3162.7705 LS1913.2314 -3200.2119 m1913.2314 -3162.7705 LS1948.6641 -3162.7705 m1948.6641 -3127.3369 LSUu2010.3955 -3129.3467 m2010.3955 -3271.0781 LS/BBAccumRotation (3.141593) XT2010.3955 -3271.0781 m1939.5293 -3271.0781 LS/BBAccumRotation (3.141593) XT2010.3955 -3129.3467 m1974.9619 -3129.3467 LS/BBAccumRotation (3.141593) XT1974.9619 -3129.3467 m1974.9619 -3198.2041 LS/BBAccumRotation (3.141593) XT1974.9619 -3235.6465 m1939.5293 -3235.6465 LS/BBAccumRotation (3.141593) XT1974.9619 -3198.2041 m1974.9619 -3235.6465 LS/BBAccumRotation (3.141593) XT1939.5293 -3235.6465 m1939.5293 -3271.0781 LS/BBAccumRotation (3.141593) XTUUuu1436.2837 -3269.0703 m1436.2837 -3127.3369 LS1436.2837 -3127.3369 m1507.1499 -3127.3369 LS1436.2837 -3269.0703 m1471.7173 -3269.0703 LS1471.7173 -3269.0703 m1471.7173 -3200.2119 LS1471.7173 -3162.7705 m1507.1499 -3162.7705 LS1471.7173 -3200.2119 m1471.7173 -3162.7705 LS1507.1499 -3162.7705 m1507.1499 -3127.3369 LSUu1568.8813 -3129.3467 m1568.8813 -3271.0781 LS/BBAccumRotation (3.141593) XT1568.8813 -3271.0781 m1498.0151 -3271.0781 LS/BBAccumRotation (3.141593) XT1568.8813 -3129.3467 m1533.4478 -3129.3467 LS/BBAccumRotation (3.141593) XT1533.4478 -3129.3467 m1533.4478 -3198.2041 LS/BBAccumRotation (3.141593) XT1533.4478 -3235.6465 m1498.0151 -3235.6465 LS/BBAccumRotation (3.141593) XT1533.4478 -3198.2041 m1533.4478 -3235.6465 LS/BBAccumRotation (3.141593) XT1498.0151 -3235.6465 m1498.0151 -3271.0781 LS/BBAccumRotation (3.141593) XTUUuu1653.9404 -3038.0103 m1653.9404 -2896.2769 LS1653.9404 -2896.2769 m1724.8066 -2896.2769 LS1653.9404 -3038.0103 m1689.374 -3038.0103 LS1689.374 -3038.0103 m1689.374 -2969.1519 LS1689.374 -2931.7104 m1724.8066 -2931.7104 LS1689.374 -2969.1519 m1689.374 -2931.7104 LS1724.8066 -2931.7104 m1724.8066 -2896.2769 LSUu1786.5381 -2898.2866 m1786.5381 -3040.0181 LS/BBAccumRotation (3.141593) XT1786.5381 -3040.0181 m1715.6719 -3040.0181 LS/BBAccumRotation (3.141593) XT1786.5381 -2898.2866 m1751.1045 -2898.2866 LS/BBAccumRotation (3.141593) XT1751.1045 -2898.2866 m1751.1045 -2967.144 LS/BBAccumRotation (3.141593) XT1751.1045 -3004.5864 m1715.6719 -3004.5864 LS/BBAccumRotation (3.141593) XT1751.1045 -2967.144 m1751.1045 -3004.5864 LS/BBAccumRotation (3.141593) XT1715.6719 -3004.5864 m1715.6719 -3040.0181 LS/BBAccumRotation (3.141593) XTUULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF