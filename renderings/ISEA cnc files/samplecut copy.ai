%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 15.0.0%%For: (2016) ()%%Title: (samplecut copy.ai)%%CreationDate: 21/05/2019 2:55 PM%%Canvassize: 16383%%BoundingBox: 10 -1555 1564 -1%%HiResBoundingBox: 10.252 -1554.7764 1563.7305 -1.29785%%DocumentProcessColors: Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 787.5 -787.5 787.5 -787.5%AI3_TileBox: 498.6152 -1142.6152 1074.6152 -408.6152%AI3_DocumentPreview: None%AI5_ArtSize: 1573.2305 1573.2305%AI5_RulerUnits: 1%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 2%AI8_OpenToView: -1274.3867 593.3188 0.3333 1812 855 18 0 0 66 150 0 0%AI5_OpenViewLayers: 77%%PageOrigin:481 -1183%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 128 8%%BeginData: 4860 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD35FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD66FF%A8FFA8A8A8FD13FFA8FFFFFFA8FFA8FFA8FD5CFFA8FFA8FD21FFA8FD58FF%A8FFA8FD25FFA8FFA8A8A8FD50FFA8FFA8FD2DFFA8FD4CFFAFAFA8FD31FF%A8A8A8FD48FFA8FD19FFA8FD1DFFA8FD44FFA8FFA8FD14FFA8A8FFA8A8A8%FFA8FD1DFFA8FFA8FD40FFA8FD17FFA8FD27FFA8FD3EFFA8FD18FFA9FD06%FFA8FD21FFA8FFA8FD3AFFA8FD19FFA8FD2BFFA8FD36FFA8FFA8FD19FFA8%FD07FFA8FD25FFA8FD34FFA8FD1DFFA8FD2DFFA8FD32FFA8FD1FFFA8FFA8%FFFFFFA8FD27FFA8FD30FFA8FD1FFFA8FFA8FFA8FFA8FD58FFA8FD53FFA8%FD2AFFA8FD55FFA8FD28FFA8FD57FFA8FD80FFA8FD24FFA8FD5BFFA8FD22%FFA8FD7EFFA8FD5FFFA8FD1EFFA8FD7EFFA8FD7EFFA8FD07FFA8FD76FFA8%FD07FFA8FFA8FD5BFFA8FD20FFA8FD5FFFA8FD16FFA8FD07FFA8FD05FFA8%A8A8FD59FFA8FD1CFFA8FD63FFA8FD14FFA8FD05FFA8FD09FFA8FD5BFFA8%FD12FFA8FD0FFFA8FD6EFFA8FD09FFA8AFFD04FFA8FD5DFFA8FD20FFA8FD%5FFFA8FD0FFFA9A8FD0BFFA8FFA8FD61FFA8FD0EFFA8FD71FFAFFD0CFFA8%FD71FFA8A8FD43FFA8FFA8FFA8FFA9FD35FFA8FD0BFFAFA8FD31FFA8A9A8%FFA8FFA8FFFFFFA8FFA8A9A8FFA8FD31FFA8FD0AFFA8FD2FFFA8FFA8FD11%FFA8FD3AFFA8FD2DFFA8A8A8FD15FFA8A8A8FD2DFFA8FD36FFA9FD1BFFA8%FD2DFFA8FD08FFA8FD2BFFA8FD1DFFA8A8A8FD2BFFA8FD06FFA8FD2BFFA8%FD21FFA8FD30FFA8FD2BFFA8FD23FFA8FD29FFA8FD30FFA8FD4FFFA8FD04%FFA8FD29FFA8FD27FFA8FD28FFA8FD2DFFA8FD51FFA8FD04FFA8FD27FFA8%FD2BFFA8FD27FFA8FFFFA8FD27FFA8FD7EFFA8FD2DFFA8FD27FFA8FFFFA8%FD55FFA8FD28FFA8A8FD26FFA8FD2FFFA8FD25FFA8FFFFA8FD25FFA8FD58%FFA8FD25FFA8FD31FFA8FD25FFA8FD5AFFA8FD25FFA8A8FD25FFA8FD33FF%A8FD23FFA8A8FD25FFA8FD4BFFA8FFA8FFA8FFA8FD07FFA8A8FD59FFA8FD%15FFA8A9FFFFA8FFFFFFA8FD06FFA8FD25FFA8FD4BFFA8FD0DFFA8A8FD23%FFA8A8FD34FFA8FD15FFA8A8FD06FFA8FD06FFAFFD5BFFA9FD15FFA8FD0D%FFA8A8FD23FFA8FD35FFA8FD15FFAFA9FD06FFA8FD62FFA8FD15FFA8FD0D%FFA8A8FD23FFA8FD35FFA8A8FD15FFA8A8A9A8FFA8A8A8FD06FFA8FD5BFF%A8FD23FFA8A8FD23FFA8FD36FFA9FD23FFA8FD5BFFA8FD23FFA8A8FD23FF%A8FD35FFA8FD24FFAFFD25FFA8FD59FFA8A8FD23FFAFA9FD34FFA8FD4AFF%A8FD59FFA8A8FD25FFA8FD33FFA8FD24FFA8FD59FFA9FD25FFA8A8FD25FF%A8FD58FFA8FD59FFA8FD25FFA8A8AFFD24FFA8FD31FFA8FD25FFA8FFFFA8%FD25FFA8FD59FFA9FD26FFA8FD55FFA8FFFFA8FD55FFA8FD2AFFA8FD53FF%A8FD27FFA8FD56FFA8FD27FFA8FD04FFA8FD27FFA8FD29FFA8FD56FFA8FD%51FFA8FD04FFA8FD29FFA8FD25FFA8FD29FFA8FD06FFA8FD29FFA8FD23FF%A8FD5CFFA8FD21FFA8FD2BFFA8FD06FFA8FD4BFFA8FD2BFFA8FD08FFA8FD%2DFFA8FD19FFA8FFA8FD2CFFA8A8FD36FFA8FD17FFA8FD2FFFA8FD08FFA8%FD2FFFA8FFA8FFA8FD0FFFA8FFA8FD2FFFA8FD0AFFA8FD33FFA8FFA8FD09%FFA8FFA8FD3EFFA8FD33FFA8FFA8A8A8FFA8A8A8FFA8FFA8FD32FFA8A8FD%7EFFA8FD0CFFA8FD71FFA8FD0EFFA8FD80FFA8FD6EFFA8A8FD7EFFA8FD7E%FFA8FD12FFA8FD6BFFA8FD14FFA8FD11FFA8FFA8FD55FFA8A8FD15FFA8FD%0FFFA9FD70FFA8FD0DFFA8FD59FFA8FD24FFA8FD59FFA8FD24FFA8FD08FF%A8FD50FFA8FD2EFFA9FD4FFFA8FD1DFFAFFD08FFA8FD07FFA8FD4FFFA8FD%2EFFA8FD4FFFA8FD20FFA8FD09FFA8FFFFFFA8FD4FFFA8FD22FFA8FD0BFF%A8FD4FFFA8FD24FFA8FD59FFA8FD26FFA8FD57FFA8FD28FFA8FD55FFA8FD%7EFFA8FD2DFFA8FD50FFA8FD30FFA8FD27FFA8FFA8FFA8FD21FFA8FD32FF%A8FD23FFA8A8A8FFA8FFA8FFA8FD1EFFAFA8FD34FFA8FD23FFA8FD5CFFA8%FD23FFAFFD05FFA8FD1BFFA8FD3CFFA8FD1FFFA8FD21FFA8FD3EFFA8FD1E%FFA8A8FD05FFA8FD17FFA8A8A8FD40FFA8FD1DFFA8FD1DFFA8FD44FFA8A9%A8FD1AFFA9A8FFA8A9A8FFA8FD14FFAFA8FD48FFA8FD1BFFA8FD17FFA8FD%4CFFA8FFA8FFA8FD2BFFA8FFA8FD52FFA8FD29FFA8FD56FFA8A8A8FFA8FD%1DFFA8FFA8A9A8FD5EFFA8FFA8FD17FFA8FFA8FFA8FD64FFA8FFA8A8A8AF%A8A8A8AFA8A8A8AFA8A8A8AFA8A8A8FFA8FFA8FD32FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp7 Bn%AI5_BeginGradient: (Fade to Black)(Fade to Black) 0 2 Bd[00 %_Br[0 0 0 1 1 50 100 %_BS%_0 0 0 1 1 50 100 Bs0 0 0 1 1 25 0 %_BS%_0 0 0 1 1 25 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Green, Yellow, Orange)(Green, Yellow, Orange) 0 7 Bd[<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9><BFBEBEBDBCBBBBBAB9B8B8B7B6B5B5B4B3B2B2B1B0AFAEAEADACABABAAA9A8A8A7A6A5A5A4A3A2A1A1A09F9E9E9D9C9B9B9A999898979695949493929191908F8E8E8D8C8B8B8A898887878685848483828181807F7E7E7D7C7B7B7A797877777675747473727171706F6E6E6D6C6B6A6A696867676665646463626161605F5E5D5D5C5B5A5A595857575655545453525150504F4E4D4D4C4B4A4A494847474645444443424140403F3E3D3D3C3B3A3A393837373635343333323130302F2E2D2D2C2B2A2A292827262625242323222120201F1E1D1D1C1B1A1A>101 %_Br0<1A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF><F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFF>01 %_Br<D9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0.1<FFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2>01 %_Br<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9><BFBEBEBDBCBBBBBAB9B8B8B7B6B5B5B4B3B2B2B1B0AFAEAEADACABABAAA9A8A8A7A6A5A5A4A3A2A1A1A09F9E9E9D9C9B9B9A999898979695949493929191908F8E8E8D8C8B8B8A898887878685848483828181807F7E7E7D7C7B7B7A797877777675747473727171706F6E6E6D6C6B6A6A696867676665646463626161605F5E5D5D5C5B5A5A595857575655545453525150504F4E4D4D4C4B4A4A494847474645444443424140403F3E3D3D3C3B3A3A393837373635343333323130302F2E2D2D2C2B2A2A292827262625242323222120201F1E1D1D1C1B1A1A>101 %_Br0<1A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF><F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFF>01 %_Br<D9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBFBEBDBCBBBAB9B8B7B6B5B4B3B3B2B1B0AFAEADACABABAAA9A8A7A6A5A4A4A3A2A1A09F9E9E9D9C9B9A9998989796959494939291908F8F8E8D8C8B8B8A898888878685848483828181807F7E7E7D7C7B7B7A79787877767575747373727170706F6E6E6D6C6B6B6A6969686767666565646363626161605F5F5E5D5D5C5B5B5A5A595858575656555554535352525150504F4F4E4D4D4C4C4B4B4A494948484747464645444443434242414140403F3F3E3D3D3C3C3B3B3A3A3939383837373636363535343433333232313130302F2F2F2E2E2D2D2C2C2B2B2B2A2A29292928282727262626252524242423232322222121212020201F1F1E1E1E1D1D1D1C1C1C1B1B1B1A1A1A19191918181817171717161616151515141414141313131212121211111111101010100F0F0F0F0E0E0E0E0D0D0D0D0D0C0C0C0C0B0B0B0B0B0A0A0A0A0A0909090909080808080808070707070707060606060606060505050505050504040404040404040303030303030303030202020202020202020202020101010101010101010101010101010101010000000000000000000000000000000000000000000000000000>0.1<FFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2>01 %_Br[0.85 0.1 1 0 1 50 100 %_BS%_0.85 0.1 1 0 1 50 100 Bs0 0.75 1 0 1 50 80.117 %_BS%_0 0.75 1 0 1 50 80.117 Bs0 0.1 0.95 0 1 50 64 %_BS%_0 0.1 0.95 0 1 50 64 Bs0.85 0.1 1 0 1 50 47 %_BS%_0.85 0.1 1 0 1 50 47 Bs0 0.75 1 0 1 50 30 %_BS%_0 0.75 1 0 1 50 30 Bs0 0.1 0.95 0 1 50 15 %_BS%_0 0.1 0.95 0 1 50 15 Bs0.85 0.1 1 0 1 28 0 %_BS%_0.85 0.1 1 0 1 28 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Purple Radial)(Purple Radial) 1 2 Bd[<0001010203030405050607070809090A0B0B0C0C0D0E0E0F101011121213131415151617171818191A1A1B1B1C1D1D1E1E1F20202121222323242425262627272828292A2A2B2B2C2C2D2E2E2F2F3030313132333334343535363637373839393A3A3B3B3C3C3D3D3E3E3F3F40404141424243434444454546464747484849494A4A4B4B4C4C4D4D4E4E4F4F505051515152525353545455555656565757585859595A5A5A5B5B5C5C5D5D5D5E5E5F5F5F606061616262626363646464656566666667676768686969696A6A6B6B6B6C6C6C6D6D6D6E6E6F6F6F7070707171717272727373737474747575757676767777777878787979797A7A7A7B7B7B7B7C7C7C7D7D7D7E7E7E7E7F7F7F7F808080818181818282828283838384848484858585858686868687878787878888888889898989898A8A8A8A8B8B8B8B8B8C8C8C8C8C8D8D8D8D8D8E8E8E8E8E8F8F8F8F8F8F9090909090909191919191919292929292929293939393939393949494949494949495959595959595959596969696969696969696979797979797979797979797989898989898989898989898989898989898999999999999999999999999999999999999999999999999><000102030405060708090A0B0C0D0E0F10111213141516161718191A1B1C1D1E1F20212223242525262728292A2B2C2D2E2F2F30313233343536373738393A3B3C3D3E3E3F4041424343444546474849494A4B4C4D4D4E4F5051525253545556565758595A5A5B5C5D5D5E5F606161626364646566676768696A6A6B6C6D6D6E6F7070717272737475757677777879797A7B7C7C7D7E7E7F8080818282838484858686878888898A8A8B8B8C8D8D8E8F8F90909192929394949595969797989899999A9B9B9C9C9D9E9E9F9FA0A0A1A1A2A3A3A4A4A5A5A6A6A7A7A8A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B2B2B3B3B4B4B5B5B5B6B6B7B7B8B8B9B9BABABABBBBBCBCBDBDBEBEBEBFBFC0C0C0C1C1C2C2C3C3C3C4C4C5C5C5C6C6C6C7C7C8C8C8C9C9C9CACACACBCBCCCCCCCDCDCDCECECECFCFCFD0D0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D6D7D7D7D7D8D8D8D8D9D9D9D9DADADADADBDBDBDBDBDCDCDCDCDDDDDDDDDDDEDEDEDEDEDEDFDFDFDFDFE0E0E0E0E0E0E1E1E1E1E1E1E1E2E2E2E2E2E2E2E2E3E3E3E3E3E3E3E3E3E4E4E4E4E4E4E4E4E4E4E4E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E6><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br[0 0 0 0 1 30 63.1579 %_BS%_0 0 0 0 1 30 63.1579 Bs0.6 0.9 0.000031 0.000031 1 50 100 %_BS%_0.6 0.9 0.000031 0.000031 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Super Soft Black Vignette)(Super Soft Black Vignette) 1 3 Bd[0.20.20.211 %_Br0.20.20.211 %_Br[0.2 0.2 0.2 1 1 56.0729 57.4443 %_BS%_0.2 0.2 0.2 1 1 56.0729 57.4443 Bs0.2 0.2 0.2 1 1 31.8603 79.7713 %_BS%_0.2 0.2 0.2 1 1 31.8603 79.7713 Bs0.2 0.2 0.2 1 1 50 100 %_BS%_0.2 0.2 0.2 1 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 26)(Unnamed gradient 26) 0 3 Bd[<00000000010101010101020202020202020303030303030303040404040404040405050505050505050506060606060606060606070707070707070707070707080808080808080808080808090909090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D><0001020303040506070808090A0B0C0C0D0E0F0F10111212131414151616171818191A1A1B1C1C1D1D1E1E1F20202121222223232425252626272727282829292A2A2B2B2C2C2C2D2D2E2E2F2F2F303030313132323233333334343435353536363637373737383838393939393A3A3A3A3B3B3B3B3C3C3C3C3D3D3D3D3E3E3E3E3E3F3F3F3F3F3F40404040404141414141414242424242424243434343434343434444444444444444454545454545454545454646464646464646464646464747474747474747474747474747474848484848484848484848484848484848484848484849494949494949494949494949494949494949494949494949494949494949494949494949494949494949494A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A><00020406080A0C0E10121416181A1C1E1F21232527282A2C2D2F3132343637393A3C3D3F404243454647494A4C4D4E50515253555657585A5B5C5D5E606162636465666768696A6B6C6D6E6F70717273747576777778797A7B7C7C7D7E7F8080818282838485858687878889898A8B8B8C8C8D8E8E8F8F9090919192929394949495959696979798989999999A9A9B9B9B9C9C9D9D9D9E9E9E9F9F9FA0A0A0A1A1A1A2A2A2A2A3A3A3A4A4A4A4A5A5A5A5A6A6A6A6A6A7A7A7A7A7A8A8A8A8A8A9A9A9A9A9A9AAAAAAAAAAAAAAABABABABABABABACACACACACACACACACADADADADADADADADADADADAEAEAEAEAEAEAEAEAEAEAEAEAEAEAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFB0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1><00000000000000000000000000000000000000000000000000010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010102020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202>1 %_Br10 %_Br[0.05246 0.289616 0.692164 0.007477 1 50 100 %_BS%_0.05246 0.289616 0.692164 0.007477 1 50 100 Bs1 0 13 45 %_BS%_1 0 13 45 Bs1 0 50 0 %_BS%_1 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 30)(Unnamed gradient 30) 1 2 Bd[<0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D><181919191A1A1B1C1C1D1D1E1F1F202122222324252526272829292A2B2C2D2E2E2F30313233343536363738393A3B3C3D3E3F404142434445464748494A><CECECECDCDCDCCCCCCCBCBCBCACAC9C9C9C8C8C7C7C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBBBABAB9B9B8B8B7B6B6B5B5B4B3B3B2B2B1B1><0101010101010101010101010101010101010101010101010101010101010101010101010101010101010102020202020202020202020202020202020202>1 %_Br[0.049561 0.095003 0.808347 0.00296 1 57.3034 0 %_BS%_0.049561 0.095003 0.808347 0.00296 1 57.3034 0 Bs0.05246 0.289616 0.692164 0.007477 1 50 100 %_BS%_0.05246 0.289616 0.692164 0.007477 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 31)(Unnamed gradient 31) 0 3 Bd[<0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D><4A494847464544434241403F3E3D3C3B3A393838373635343433323131302F2F2E2D2D2C2B2B2A2A292828272726262525242423232322222121212020201F1F1F1E1E1E1D1D1D1D1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A1A19191919191919191919191918181818181818181818181818181818><B1B1B2B2B3B4B4B5B5B6B7B7B8B8B9B9BABABBBBBCBCBDBDBEBEBFBFC0C0C0C1C1C2C2C2C3C3C3C4C4C4C5C5C5C6C6C6C7C7C7C7C8C8C8C8C9C9C9C9CACACACACACBCBCBCBCBCBCCCCCCCCCCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECECECECECECECECECECECECECECECECECE><020202020202020202020202020202020202020101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101>1 %_Br<0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D><18191A1B1C1D1E1F202122232425262728292A2B2C2D2F303132333435363738393A3B3C3D3E3F404142434445464748494A><CECECDCCCCCBCBCAC9C9C8C7C7C6C6C5C4C4C3C3C2C1C1C0C0BFBEBEBDBDBCBBBBBABAB9B8B8B7B7B6B5B5B4B4B3B2B2B1B1><0101010101010101010101010101010101010101010101010101010101010101020202020202020202020202020202020202>1 %_Br[0.049561 0.095003 0.808347 0.00296 1 50 100 %_BS%_0.049561 0.095003 0.808347 0.00296 1 50 100 Bs0.05246 0.289616 0.692164 0.007477 1 23.7288 50 %_BS%_0.05246 0.289616 0.692164 0.007477 1 23.7288 50 Bs0.049561 0.095003 0.808347 0.00296 1 50 0 %_BS%_0.049561 0.095003 0.808347 0.00296 1 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Laguna)(Laguna) 0 3.1914 84.1563 84.791 [%AI3_Tile(0 O 0 R 0 1 1 0 k 0 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d0 XR42.0781 30.3906 m12.2227 12.8779 9.0488 12.4082 V7.2871 14.1709 0 30.3906 Y13.1641 20.5186 29.1484 23.3389 42.0781 30.3906 Cf42.0781 57.5908 m12.2227 40.0781 9.0488 39.6094 V7.2871 41.3711 0 57.5908 Y13.1641 47.7178 29.1484 50.5391 42.0781 57.5908 Cf42.0781 84.791 m12.2227 67.2773 9.0488 66.8096 V7.2871 68.5703 0 84.791 Y13.1641 74.918 29.1484 77.7402 42.0781 84.791 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.6 0.9 0.000031 0.000031 k 0.6 0.9 0.000031 0.000031 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d0 XR84.1563 30.3906 m54.3008 12.8779 51.127 12.4082 V49.3652 14.1709 42.0781 30.3906 Y55.2422 20.5186 71.2266 23.3389 84.1563 30.3906 Cf84.1563 57.5908 m54.3008 40.0781 51.127 39.6094 V49.3652 41.3711 42.0781 57.5908 Y55.2422 47.7178 71.2266 50.5391 84.1563 57.5908 Cf84.1563 84.791 m54.3008 67.2773 51.127 66.8096 V49.3652 68.5703 42.0781 84.791 Y55.2422 74.918 71.2266 77.7402 84.1563 84.791 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.85 0.1 1 0 k 0.85 0.1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d0 XR21.0391 33.582 m19.2773 33.582 17.8477 32.1523 17.8477 30.3906 c17.8477 28.6289 19.2773 27.2002 21.0391 27.2002 c22.8008 27.2002 24.2285 28.6289 24.2285 30.3906 c24.2285 32.1523 22.8008 33.582 21.0391 33.582 cf21.0391 6.3818 m19.2773 6.3818 17.8477 4.9531 17.8477 3.1914 c17.8477 1.4287 19.2773 0 21.0391 0 c22.8008 0 24.2285 1.4287 24.2285 3.1914 c24.2285 4.9531 22.8008 6.3818 21.0391 6.3818 cf21.0391 60.7822 m19.2773 60.7822 17.8477 59.3525 17.8477 57.5908 c17.8477 55.8291 19.2773 54.3994 21.0391 54.3994 c22.8008 54.3994 24.2285 55.8291 24.2285 57.5908 c24.2285 59.3525 22.8008 60.7822 21.0391 60.7822 cf21.0391 87.9824 m19.2773 87.9824 17.8477 86.5547 17.8477 84.791 c17.8477 83.0283 19.2773 81.5996 21.0391 81.5996 c22.8008 81.5996 24.2285 83.0283 24.2285 84.791 c24.2285 86.5547 22.8008 87.9824 21.0391 87.9824 cf63.1172 33.582 m61.3555 33.582 59.9258 32.1523 59.9258 30.3906 c59.9258 28.6289 61.3555 27.2002 63.1172 27.2002 c64.8789 27.2002 66.3066 28.6289 66.3066 30.3906 c66.3066 32.1523 64.8789 33.582 63.1172 33.582 cf63.1172 6.3818 m61.3555 6.3818 59.9258 4.9531 59.9258 3.1914 c59.9258 1.4287 61.3555 0 63.1172 0 c64.8789 0 66.3066 1.4287 66.3066 3.1914 c66.3066 4.9531 64.8789 6.3818 63.1172 6.3818 cf63.1172 60.7822 m61.3555 60.7822 59.9258 59.3525 59.9258 57.5908 c59.9258 55.8291 61.3555 54.3994 63.1172 54.3994 c64.8789 54.3994 66.3066 55.8291 66.3066 57.5908 c66.3066 59.3525 64.8789 60.7822 63.1172 60.7822 cf63.1172 87.9824 m61.3555 87.9824 59.9258 86.5547 59.9258 84.791 c59.9258 83.0283 61.3555 81.5996 63.1172 81.5996 c64.8789 81.5996 66.3066 83.0283 66.3066 84.791 c66.3066 86.5547 64.8789 87.9824 63.1172 87.9824 cf%AI6_EndPatternLayer) &(0 O 0 R 0.6 0.9 0.000031 0.000031 k 0.6 0.9 0.000031 0.000031 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d0 XR0 3.1914 m29.8535 20.7041 33.0273 21.1738 V34.79 19.4111 42.0781 3.1914 Y28.9141 13.0645 12.9277 10.2422 0 3.1914 Cf0 30.3906 m29.8535 47.9033 33.0273 48.374 V34.79 46.6104 42.0781 30.3906 Y28.9141 40.2646 12.9277 37.4434 0 30.3906 Cf0 57.5908 m29.8535 75.1035 33.0273 75.5752 V34.79 73.8105 42.0781 57.5908 Y28.9141 67.4648 12.9277 64.6436 0 57.5908 Cf%AI6_EndPatternLayer) &(0 O 0 R 0 1 1 0 k 0 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d0 XR42.0781 3.1914 m71.9316 20.7041 75.1055 21.1738 V76.8691 19.4111 84.1563 3.1914 Y70.9922 13.0645 55.0059 10.2422 42.0781 3.1914 Cf42.0781 30.3906 m71.9316 47.9033 75.1055 48.374 V76.8691 46.6104 84.1563 30.3906 Y70.9922 40.2646 55.0059 37.4434 42.0781 30.3906 Cf42.0781 57.5908 m71.9316 75.1035 75.1055 75.5752 V76.8691 73.8105 84.1563 57.5908 Y70.9922 67.4648 55.0059 64.6436 42.0781 57.5908 Cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(New Pattern 1)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7404 7404 m-7404 7345.0254 L-7388.4902 7345.0254 L-7388.4902 7404 L-7404 7404 Ln0 O0 0 0 1 k10 M-7404 7355.0586 m-7404 7354.5742 L-7388.4878 7354.5742 L-7388.4878 7355.0586 L-7404 7355.0586 Lf-7404 7372.3838 m-7404 7371.8965 L-7388.4878 7371.8965 L-7388.4878 7372.3838 L-7404 7372.3838 Lf-7403.9995 7357.3682 m-7403.9995 7356.6494 L-7388.4878 7356.6494 L-7388.4878 7357.3682 L-7403.9995 7357.3682 Lf-7403.9995 7367.6328 m-7403.9995 7366.9121 L-7388.4878 7366.9121 L-7388.4878 7367.6328 L-7403.9995 7367.6328 Lf-7403.9995 7365.4951 m-7403.9995 7364.4141 L-7388.4878 7364.4141 L-7388.4878 7365.4951 L-7403.9995 7365.4951 Lf-7403.9995 7359.9395 m-7403.9995 7358.8594 L-7388.4878 7358.8594 L-7388.4878 7359.9395 L-7403.9995 7359.9395 Lf-7403.9995 7362.9854 m-7403.9995 7361.334 L-7388.4878 7361.334 L-7388.4878 7362.9854 L-7403.9995 7362.9854 Lf*u1 D-7388.4888 7371.1455 m-7403.9995 7371.1455 L-7403.9995 7370.6816 L-7403.6514 7370.6816 L-7403.6514 7369.4844 L-7403.9995 7369.4844 L-7403.9995 7369.0215 L-7388.4888 7369.0215 L-7388.4888 7369.4844 L-7388.8408 7369.4844 L-7388.8408 7370.6846 L-7388.4888 7370.6846 L-7388.4888 7371.1455 Lf0 D-7400.1255 7370.6846 m-7399.4199 7370.6846 L-7399.4199 7369.4844 L-7400.1255 7369.4844 L-7400.1255 7370.6846 Lf-7400.8306 7369.4844 m-7401.5361 7369.4844 L-7401.5361 7370.6846 L-7400.8306 7370.6846 L-7400.8306 7369.4844 Lf-7398.7144 7370.6846 m-7398.0098 7370.6846 L-7398.0098 7369.4844 L-7398.7144 7369.4844 L-7398.7144 7370.6846 Lf-7397.3042 7370.6846 m-7396.5986 7370.6846 L-7396.5986 7369.4844 L-7397.3042 7369.4844 L-7397.3042 7370.6846 Lf-7395.8936 7370.6846 m-7395.1885 7370.6846 L-7395.1885 7369.4844 L-7395.8936 7369.4844 L-7395.8936 7370.6846 Lf-7394.4834 7370.6846 m-7393.7778 7370.6846 L-7393.7778 7369.4844 L-7394.4834 7369.4844 L-7394.4834 7370.6846 Lf-7393.0718 7370.6846 m-7392.3672 7370.6846 L-7392.3672 7369.4844 L-7393.0718 7369.4844 L-7393.0718 7370.6846 Lf-7391.6616 7370.6846 m-7390.9575 7370.6846 L-7390.9575 7369.4844 L-7391.6616 7369.4844 L-7391.6616 7370.6846 Lf-7390.2515 7370.6846 m-7389.5454 7370.6846 L-7389.5454 7369.4844 L-7390.2515 7369.4844 L-7390.2515 7370.6846 Lf-7402.9463 7370.6846 m-7402.2407 7370.6846 L-7402.2407 7369.4844 L-7402.9463 7369.4844 L-7402.9463 7370.6846 Lf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 2)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7404 7403.998 m-7404 7345.0225 L-7345.0254 7345.0225 L-7345.0254 7403.998 L-7404 7403.998 Ln*u1 D0 O0 0 0 1 k10 M-7377.4902 7363.4453 m-7375.9678 7364.9678 -7376.5166 7367.9834 -7378.7153 7370.1836 c-7380.9146 7372.3809 -7383.9302 7372.9297 -7385.4526 7371.4082 c-7386.9751 7369.8857 -7386.4263 7366.8682 -7384.2271 7364.6709 c-7382.0288 7362.4717 -7379.0127 7361.9238 -7377.4902 7363.4453 cf0 D-7378.1519 7364.0781 m-7379.5728 7362.6582 -7382.2241 7363.0059 -7384.0728 7364.8545 c-7385.9214 7366.7031 -7386.2695 7369.3545 -7384.8486 7370.7754 c-7383.4282 7372.1953 -7380.7769 7371.8486 -7378.9282 7370 c-7377.0786 7368.1504 -7376.7314 7365.5 -7378.1519 7364.0781 cf*U-7395.5327 7354.2607 m-7394.7969 7354.1309 l-7394.71 7353.4385 l-7389.9458 7358.9814 l-7395.5327 7354.2607 lf-7384.9409 7351.3145 m-7385.1235 7349.7266 L-7384.7002 7349.4512 -7384.3184 7349.1309 -7383.9346 7348.8145 C-7383.6841 7351.9189 L-7383.3535 7351.9453 L-7383.4678 7348.4395 L-7383.0503 7348.1162 -7382.6089 7347.8213 -7382.0913 7347.6152 C-7382.1235 7352.7266 L-7381.9063 7352.7734 L-7381.5938 7347.4521 L-7381.2007 7347.3516 -7380.7632 7347.3008 -7380.2642 7347.3213 C-7381.0376 7356.4463 L-7379.7666 7347.3594 L-7379.3359 7347.4063 -7378.96 7347.4746 -7378.6289 7347.5625 C-7379.4551 7354.334 L-7379.2998 7354.2109 L-7378.1465 7347.7148 L-7377.7471 7347.8633 -7377.4238 7348.0449 -7377.1528 7348.25 C-7377.7334 7353.0762 L-7377.4688 7352.9414 L-7376.7114 7348.6426 L-7376.2256 7349.1494 -7375.9194 7349.7344 -7375.5127 7350.2822 C-7376.0713 7352.3496 L-7375.6001 7352.1709 L-7375.1338 7350.7383 L-7374.8096 7351.082 -7374.4063 7351.3945 -7373.8394 7351.6406 c-7373.8506 7351.6357 -7372.7393 7351.6826 -7372.7466 7351.6533 c-7372.7959 7351.4375 -7373.6655 7351.2998 -7373.6455 7351.3105 c-7376.2974 7349.8965 -7375.3232 7347.3301 -7379.8735 7346.873 c-7383.4072 7346.5176 -7384.2515 7349.75 -7387.0962 7350.0615 c-7387.1152 7350.0625 -7387.7632 7350.3174 -7387.8442 7350.4502 C-7387.8486 7350.625 -7387.4595 7350.5186 -7387.2417 7350.4766 c-7386.6001 7350.3477 -7386.0498 7350.2402 -7385.5728 7349.9912 C-7385.4023 7351.1914 L-7384.9409 7351.3145 Lf-7397.6626 7363.9463 m-7399.2495 7363.7637 L-7399.5254 7364.1865 -7399.8462 7364.5693 -7400.1626 7364.9521 C-7397.0576 7365.2031 L-7397.0322 7365.5352 L-7400.5376 7365.4189 L-7400.8608 7365.8369 -7401.1558 7366.2783 -7401.3618 7366.7959 C-7396.2505 7366.7637 L-7396.2031 7366.9814 L-7401.5249 7367.293 L-7401.6265 7367.6865 -7401.6758 7368.125 -7401.6558 7368.623 C-7392.5298 7367.8496 L-7401.6177 7369.1201 L-7401.5713 7369.5498 -7401.5024 7369.9277 -7401.4146 7370.2578 C-7394.6426 7369.4316 L-7394.7656 7369.5869 L-7401.2622 7370.7402 L-7401.1138 7371.1406 -7400.9312 7371.4629 -7400.7271 7371.7344 C-7395.9014 7371.1533 L-7396.0352 7371.418 L-7400.3335 7372.1768 L-7399.8271 7372.6621 -7399.2417 7372.9688 -7398.6943 7373.375 C-7396.6274 7372.8145 L-7396.8066 7373.2871 L-7398.2383 7373.752 L-7397.8945 7374.0762 -7397.5825 7374.4814 -7397.3359 7375.0479 c-7397.3408 7375.0361 -7397.2935 7376.1484 -7397.3242 7376.1416 c-7397.54 7376.0908 -7397.6768 7375.2227 -7397.6675 7375.2412 c-7399.0806 7372.5898 -7401.6475 7373.5645 -7402.1045 7369.0127 c-7402.4595 7365.4805 -7399.2271 7364.6367 -7398.9165 7361.791 c-7398.9136 7361.7725 -7398.6602 7361.125 -7398.5273 7361.043 C-7398.3535 7361.0381 -7398.4575 7361.4277 -7398.5015 7361.6455 c-7398.6294 7362.2871 -7398.7368 7362.8369 -7398.9858 7363.3145 C-7397.7842 7363.4854 L-7397.6626 7363.9463 Lf-7368.0127 7362.2285 m-7363.2495 7363.6348 -7361.9502 7365.9209 -7361.9746 7367.5654 C-7361.5366 7364.459 -7359.6558 7366.8652 -7359.1313 7368.0029 C-7360.0498 7364.416 -7357.4463 7367.5439 -7357.2715 7367.8496 C-7358.2593 7364.4063 -7365.3955 7361.9404 -7368.0127 7362.2285 Cf-7373.9775 7361.2197 m-7377.3242 7355.1738 -7374.4233 7353.5703 -7373.7354 7353.377 c-7373.9233 7353.4287 -7374.3135 7354.2949 -7374.2026 7354.6367 C-7373.9482 7354.0928 -7373.4111 7353.8193 -7372.8994 7353.6094 C-7374.1626 7354.6094 -7374.6943 7357.4111 -7373.9082 7360.9512 c-7373.9775 7361.2197 lf-7376.2222 7361.5254 m-7378.6035 7359.1016 -7380.0474 7358.2773 -7378.1035 7355.668 c-7378.2202 7355.8262 -7378.3838 7356.7168 -7378.1758 7357.0117 C-7378.0942 7356.418 -7377.6626 7355.998 -7377.2358 7355.6455 C-7378.9395 7359.0732 -7376.2222 7361.5254 yf-7368.6577 7360.4199 m-7368.9897 7358.5615 -7367.4922 7357.4688 -7365.8662 7356.8496 C-7366.4194 7356.8662 -7367.0176 7356.9307 -7367.4482 7357.3496 C-7367.4302 7356.9893 -7366.7598 7356.3184 -7366.5654 7356.3359 c-7367.2778 7356.2744 -7369.4951 7355.8447 -7368.8408 7360.6191 c-7368.6577 7360.4199 lf-7365.5576 7361.1133 m-7365.1538 7359.7266 -7362.9502 7359.459 V-7363.5342 7359.2871 -7364.2314 7359.3662 -7364.6626 7359.7852 C-7364.6455 7359.4258 -7363.8408 7358.7178 -7363.6479 7358.7568 c-7365.3921 7358.4141 -7365.6782 7360.9072 y-7365.5576 7361.1133 lf-7362.1152 7362.3213 m-7361.8408 7361.627 -7361.0942 7361.1201 -7360.2646 7361 C-7360.6475 7360.8975 -7361.0854 7360.9873 -7361.4297 7361.3242 C-7361.4175 7361.0352 -7360.7744 7360.4863 -7360.6182 7360.502 c-7362.2729 7360.3496 -7362.1152 7362.3213 Yf-7371.5562 7360.4629 m-7371.6504 7357.1309 -7370.4175 7355.4541 -7368.9761 7354.6514 C-7369.5264 7354.7148 -7370.1162 7354.8271 -7370.5103 7355.2793 C-7370.5249 7354.9189 -7369.9087 7354.1953 -7369.7134 7354.1973 c-7370.4287 7354.1943 -7373.0034 7354.0898 -7371.7866 7360.7109 c-7371.5562 7360.4629 lf-7386.7944 7381.0137 m-7385.3882 7385.7754 -7383.1006 7387.0762 -7381.4575 7387.0518 C-7384.5635 7387.4893 -7382.1567 7389.3701 -7381.0195 7389.8945 C-7384.6074 7388.9766 -7381.4795 7391.5791 -7381.1729 7391.7549 C-7384.6162 7390.7676 -7387.0825 7383.6309 -7386.7944 7381.0137 Cf-7387.8022 7375.0488 m-7393.8481 7371.7002 -7395.4521 7374.6025 -7395.6465 7375.291 c-7395.5938 7375.1025 -7394.7295 7374.7119 -7394.3857 7374.8242 C-7394.9297 7375.0781 -7395.2017 7375.6152 -7395.4126 7376.127 C-7394.4126 7374.8633 -7391.6113 7374.334 -7388.0703 7375.1182 c-7387.8022 7375.0488 lf-7387.4966 7372.8037 m-7389.9214 7370.4229 -7390.7446 7368.9805 -7393.3535 7370.9229 c-7393.1968 7370.8066 -7392.3057 7370.6426 -7392.0112 7370.8496 C-7392.6064 7370.9307 -7393.0239 7371.3633 -7393.3774 7371.79 C-7389.9487 7370.0879 -7387.4966 7372.8037 yf-7388.6025 7380.3682 m-7390.4614 7380.0361 -7391.5537 7381.5342 -7392.1729 7383.1602 C-7392.1558 7382.6074 -7392.0918 7382.0098 -7391.6719 7381.5791 C-7392.0327 7381.5957 -7392.7041 7382.2656 -7392.6865 7382.4609 c-7392.7485 7381.75 -7393.1777 7379.5313 -7388.4038 7380.1846 c-7388.6025 7380.3682 lf-7387.9087 7383.4688 m-7389.2959 7383.873 -7389.5649 7386.0762 V-7389.7354 7385.4922 -7389.6558 7384.7949 -7389.2368 7384.3633 C-7389.5967 7384.3809 -7390.3042 7385.1865 -7390.2666 7385.3789 c-7390.6079 7383.6348 -7388.1152 7383.3477 y-7387.9087 7383.4688 lf-7386.7007 7386.9111 m-7387.3955 7387.1846 -7387.9009 7387.9307 -7388.0234 7388.7617 C-7388.1265 7388.3789 -7388.0337 7387.9404 -7387.6982 7387.5967 C-7387.9873 7387.6104 -7388.5361 7388.252 -7388.5215 7388.4082 c-7388.6729 7386.7529 -7386.7007 7386.9111 Yf-7388.5591 7377.4697 m-7391.8921 7377.377 -7393.5679 7378.6094 -7394.3696 7380.0508 C-7394.3081 7379.502 -7394.1953 7378.9102 -7393.7422 7378.5146 C-7394.1035 7378.5029 -7394.8262 7379.1162 -7394.8257 7379.3135 c-7394.8286 7378.5967 -7394.9321 7376.0234 -7388.3115 7377.2402 c-7388.5591 7377.4697 lfuu-7398.0234 7353.709 m-7398.2856 7353.1953 -7398.0479 7352.6689 -7396.2905 7352.6504 C-7397.0322 7351.9082 L-7398.9927 7351.9941 -7399.3423 7353.1777 -7399.1665 7353.7578 c-7398.9736 7354.3906 -7398.5488 7354.9023 -7398.2085 7355.25 C-7399.2031 7355.6113 -7399.2505 7356.3916 -7399.0479 7356.79 c-7398.7729 7357.334 -7398.2998 7357.752 -7397.9487 7358.0176 C-7398.9448 7358.377 -7398.8623 7359.1133 -7398.6074 7359.457 c-7398.2856 7359.8906 -7397.8174 7360.2031 -7397.4751 7360.4023 C-7398.4585 7360.8301 -7398.3022 7361.5234 -7398.0239 7361.8154 c-7397.6929 7362.166 -7397.2466 7362.3916 -7396.9199 7362.5322 C-7397.7695 7363.0225 -7397.5537 7363.6318 -7397.2715 7363.8633 c-7396.9458 7364.1318 -7396.5342 7364.2842 -7396.23 7364.377 C-7396.9395 7364.9082 -7396.6802 7365.4297 -7396.4014 7365.6074 c-7396.0698 7365.8174 -7395.6714 7365.9082 -7395.3857 7365.9541 C-7395.9673 7366.5098 -7395.6768 7366.9482 -7395.4097 7367.0762 c-7394.9326 7367.3037 -7394.3511 7367.2764 -7394.1768 7367.2813 c-7393.6343 7367.2959 -7392.8838 7367.125 -7392.4272 7367.0703 c-7391.3442 7366.9434 -7387.5718 7366.2754 -7385.9023 7366.4385 C-7386.1704 7366.2285 -7386.1714 7366.2285 v-7388.1304 7366.041 -7391.0479 7366.4678 -7392.1294 7366.5957 c-7392.9839 7366.6953 -7394.1182 7366.9951 -7394.9951 7366.7295 c-7395.2593 7366.6494 -7395.3696 7366.4453 -7394.8906 7366.0215 C-7394.3135 7366.0732 -7393.5737 7366.002 -7393.1118 7366.0039 c-7391.9009 7366.0098 -7387.6504 7365.7832 -7385.8311 7366.1895 C-7386.0986 7365.9209 -7386.0986 7365.9199 v-7388.2344 7365.4492 -7391.5098 7365.5254 -7392.7202 7365.5186 c-7393.6758 7365.5137 -7394.9673 7365.6914 -7395.8984 7365.2783 c-7396.1777 7365.1563 -7396.2729 7364.918 -7395.6953 7364.5166 C-7395.0615 7364.6602 -7394.2153 7364.6816 -7393.6968 7364.7471 c-7392.3623 7364.918 -7387.6431 7365.2441 -7385.6929 7365.9375 C-7385.9502 7365.6064 -7385.9512 7365.6064 v-7388.2422 7364.7969 -7391.8647 7364.4375 -7393.1992 7364.2656 c-7394.2529 7364.1309 -7395.7007 7364.1504 -7396.6719 7363.5703 c-7396.9624 7363.3975 -7397.0352 7363.123 -7396.3481 7362.7578 C-7395.6704 7362.998 -7394.7578 7363.1328 -7394.2026 7363.2754 c-7392.7534 7363.6445 -7387.5938 7364.6426 -7385.5361 7365.6689 C-7385.7754 7365.2695 -7385.7759 7365.2695 v-7388.1934 7364.0664 -7392.1392 7363.1797 -7393.5879 7362.8105 c-7394.7314 7362.5186 -7396.3311 7362.3457 -7397.3242 7361.5723 c-7397.6182 7361.3457 -7397.6626 7361.0352 -7396.8745 7360.7305 C-7396.1606 7361.082 -7395.1802 7361.3535 -7394.5889 7361.584 c-7393.0415 7362.1865 -7387.4863 7363.9863 -7385.3564 7365.3984 C-7385.5654 7364.9258 -7385.5674 7364.9248 v-7388.0698 7363.2695 -7392.3018 7361.7578 -7393.8486 7361.1543 c-7395.0703 7360.6777 -7396.8115 7360.2695 -7397.8018 7359.2842 c-7398.0786 7359.0098 -7398.1006 7358.6846 -7397.3384 7358.4551 C-7396.5942 7358.9404 -7395.5234 7359.3584 -7394.8926 7359.6895 c-7393.2446 7360.5518 -7387.2441 7363.2246 -7385.1055 7365.0957 C-7385.2407 7364.5186 -7385.2417 7364.5186 v-7387.7559 7362.3281 -7392.2954 7360.127 -7393.9438 7359.2617 c-7395.2456 7358.5801 -7397.1602 7357.9248 -7398.0815 7356.6709 c-7398.3135 7356.3555 -7398.2974 7356.0127 -7397.6118 7355.8105 C-7396.8594 7356.4668 -7395.6641 7357.0762 -7394.9888 7357.5322 c-7393.27 7358.6953 -7386.9126 7362.377 -7384.8442 7364.7637 C-7385.1377 7363.9902 -7385.1382 7363.9893 v-7387.5718 7361.1934 -7392.0825 7358.2842 -7393.8018 7357.1221 c-7395.1582 7356.2031 -7397.2295 7355.2607 -7398.0234 7353.709 cfUu-7395.2329 7350.918 m-7395.7446 7350.6543 -7396.2715 7350.8926 -7396.2905 7352.6504 C-7397.0313 7351.9082 L-7396.9473 7349.9473 -7395.7622 7349.5977 -7395.1826 7349.7754 c-7394.5503 7349.9658 -7394.0386 7350.3916 -7393.6919 7350.7324 C-7393.3306 7349.7373 -7392.5498 7349.6904 -7392.1504 7349.8906 c-7391.6064 7350.168 -7391.1895 7350.6406 -7390.9224 7350.9922 C-7390.5649 7349.9951 -7389.8281 7350.0781 -7389.4834 7350.334 c-7389.0498 7350.6543 -7388.7368 7351.123 -7388.5376 7351.4648 C-7388.1113 7350.4824 -7387.4175 7350.6387 -7387.1255 7350.918 c-7386.7759 7351.248 -7386.5488 7351.6943 -7386.4082 7352.0215 C-7385.9185 7351.1719 -7385.3086 7351.3877 -7385.0767 7351.6689 c-7384.8086 7351.9951 -7384.6553 7352.4053 -7384.5649 7352.7109 C-7384.0327 7352.002 -7383.5103 7352.2607 -7383.3345 7352.5391 c-7383.1235 7352.8701 -7383.0322 7353.2695 -7382.9858 7353.5537 C-7382.4312 7352.9727 -7381.9912 7353.2637 -7381.8638 7353.5313 c-7381.6367 7354.0078 -7381.6655 7354.5898 -7381.6592 7354.7637 c-7381.6431 7355.3066 -7381.8159 7356.0566 -7381.8696 7356.5137 c-7381.9966 7357.5957 -7382.6655 7361.3682 -7382.5034 7363.0381 C-7382.7129 7362.7695 l-7382.8999 7360.8105 -7382.4727 7357.8926 -7382.3457 7356.8105 c-7382.2446 7355.957 -7381.9458 7354.8223 -7382.2114 7353.9453 c-7382.2915 7353.6816 -7382.4946 7353.5703 -7382.9199 7354.0508 C-7382.8682 7354.6279 -7382.9395 7355.3662 -7382.9375 7355.8281 c-7382.9302 7357.04 -7383.1567 7361.29 -7382.7524 7363.1094 C-7383.0195 7362.8428 -7383.0195 7362.8418 v-7383.4922 7360.7061 -7383.4155 7357.4316 -7383.4214 7356.2207 c-7383.4272 7355.2646 -7383.25 7353.9736 -7383.6616 7353.043 c-7383.7847 7352.7637 -7384.0234 7352.668 -7384.4238 7353.2461 C-7384.2798 7353.8789 -7384.2593 7354.7246 -7384.1929 7355.2441 c-7384.0225 7356.5781 -7383.6958 7361.2959 -7383.0034 7363.248 C-7383.3345 7362.9902 -7383.3354 7362.9893 v-7384.1455 7360.6982 -7384.5039 7357.0762 -7384.6753 7355.7402 c-7384.8096 7354.6885 -7384.79 7353.2402 -7385.3706 7352.2695 c-7385.5435 7351.9785 -7385.8174 7351.9053 -7386.1816 7352.5938 C-7385.9434 7353.2695 -7385.8081 7354.1836 -7385.6665 7354.7383 c-7385.2969 7356.1865 -7384.2993 7361.3477 -7383.27 7363.4053 C-7383.6704 7363.166 -7383.6714 7363.166 v-7384.8745 7360.7471 -7385.7607 7356.8008 -7386.1294 7355.3535 c-7386.4214 7354.209 -7386.5962 7352.6094 -7387.3662 7351.6172 c-7387.5962 7351.3232 -7387.9058 7351.2783 -7388.2114 7352.0664 C-7387.8594 7352.7793 -7387.5874 7353.7617 -7387.3574 7354.3516 c-7386.7534 7355.8984 -7384.9546 7361.4541 -7383.5415 7363.585 C-7384.0161 7363.375 l-7385.6704 7360.8711 -7387.1826 7356.6387 -7387.7866 7355.0918 c-7388.2622 7353.8701 -7388.6714 7352.1289 -7389.6558 7351.1387 c-7389.9312 7350.8623 -7390.2559 7350.8398 -7390.4858 7351.6016 C-7390.0015 7352.3457 -7389.5825 7353.418 -7389.2529 7354.0469 c-7388.3887 7355.6953 -7385.7158 7361.6973 -7383.8447 7363.8359 C-7384.4209 7363.6992 -7384.4214 7363.6992 v-7386.6128 7361.1846 -7388.8145 7356.6455 -7389.6782 7354.9961 c-7390.3599 7353.6943 -7391.0161 7351.7793 -7392.2695 7350.8594 c-7392.5854 7350.627 -7392.9272 7350.6426 -7393.1313 7351.3281 C-7392.4736 7352.082 -7391.8638 7353.2764 -7391.4072 7353.9512 c-7390.2441 7355.6709 -7386.5635 7362.0273 -7384.1768 7364.0967 C-7384.9502 7363.8037 -7384.9512 7363.8018 v-7387.7471 7361.3682 -7390.6558 7356.8584 -7391.8184 7355.1387 c-7392.7368 7353.7822 -7393.6802 7351.7119 -7395.2329 7350.918 cfUU*u1 D-7345.0264 7355.0566 m-7351.5264 7355.0566 L-7351.1826 7355.4189 -7350.7622 7355.7578 -7350.1777 7356.0332 c-7350.1978 7356.0234 -7349.3994 7356.1563 -7349.2622 7356.332 c-7349.0967 7356.541 -7350.7886 7356.582 -7351.6929 7355.5342 C-7352.3486 7358.709 L-7352.8135 7359.0273 L-7352.0918 7355.0977 L-7352.5249 7354.5703 -7352.8594 7354.002 -7353.3687 7353.5186 C-7354.0337 7359.6289 L-7354.29 7359.7754 L-7353.8286 7353.1475 L-7354.1104 7352.957 -7354.4424 7352.791 -7354.8486 7352.6621 C-7355.7119 7360.0225 L-7355.9482 7360.0078 L-7355.3369 7352.5322 L-7355.6729 7352.4609 -7356.0518 7352.4111 -7356.4834 7352.3857 C-7357.0303 7359.9541 L-7357.1992 7359.9521 L-7356.9814 7352.3711 L-7357.4814 7352.377 -7357.9175 7352.4473 -7358.3042 7352.5674 C-7358.4155 7359.7061 L-7358.6338 7359.6689 L-7358.7935 7352.7549 L-7359.2998 7352.9863 -7359.7266 7353.3018 -7360.1279 7353.6455 C-7360.0454 7359.2412 L-7360.3774 7359.0273 L-7360.5752 7354.043 L-7360.9434 7354.377 -7361.3096 7354.7168 -7361.7178 7355.0127 C-7361.7217 7358.3389 L-7362.1455 7358.0645 L-7362.1553 7355.2988 L-7362.6191 7355.5693 -7363.5854 7356.0098 -7364.4014 7355.8672 C-7363.1714 7355.543 -7362.7925 7355.3301 -7362.5034 7355.0566 C-7365.7295 7355.0566 L-7361.8955 7359.4512 -7355.3394 7363.6865 -7350.3018 7357.0225 C-7350.1807 7356.8838 -7349.8174 7356.5625 -7349.1255 7356.6475 C-7345.0264 7356.6475 L-7345.0264 7357.3672 L-7348.4834 7357.3672 L-7348.1318 7357.6777 -7347.8223 7358.4863 -7348.0386 7358.8574 C-7345.0264 7358.8574 L-7345.0264 7359.9385 L-7348.1689 7359.9385 L-7348.2935 7360.4492 -7348.5439 7360.8857 -7348.8218 7361.3311 C-7345.0264 7361.3311 L-7345.0264 7362.9873 L-7349.7354 7362.9873 L-7349.9424 7363.4453 -7350.1016 7363.9082 -7350.1768 7364.4121 C-7345.0264 7364.4121 L-7345.0264 7365.4922 L-7350.1714 7365.4922 L-7350.1074 7365.9834 -7349.9614 7366.4668 -7349.7378 7366.9111 C-7345.0264 7366.9111 L-7345.0264 7367.6309 L-7349.2744 7367.6309 L-7348.9375 7368.0039 -7347.8535 7368.5938 -7347.9375 7369.0225 C-7345.0239 7369.0225 L-7345.0239 7369.4824 L-7345.3721 7369.4824 L-7345.3721 7370.6826 L-7345.0239 7370.6826 L-7345.0239 7371.1426 L-7352.9736 7371.1426 L-7353.4082 7371.4375 -7354.2192 7371.4521 -7354.9897 7371.1426 C-7358.8564 7371.1426 L-7359.1162 7371.4609 -7360.1807 7371.5693 -7360.6846 7371.1426 C-7361.8232 7371.1426 L-7362.0439 7371.3994 -7362.3174 7371.6387 -7362.6782 7371.8975 C-7345.0264 7371.8975 L-7345.0264 7372.3809 L-7363.8394 7372.3809 L-7364.1982 7372.5615 -7365.2417 7372.8389 -7366.3774 7372.3809 C-7376.6406 7372.3809 L-7376.6406 7382.6494 L-7376.1826 7383.7861 -7376.4614 7384.8281 -7376.6455 7385.1895 C-7376.6455 7404 L-7377.1279 7404 L-7377.1279 7386.3477 L-7377.3838 7386.709 -7377.6235 7386.9824 -7377.8794 7387.2031 C-7377.8794 7388.3418 L-7377.4536 7388.8457 -7377.5615 7389.9082 -7377.8794 7390.1689 C-7377.8794 7394.0361 L-7377.5698 7394.8076 -7377.5854 7395.6182 -7377.8833 7396.0518 C-7377.8833 7403.998 L-7378.3394 7403.998 L-7378.3394 7403.6543 L-7379.5435 7403.6543 L-7379.5435 7403.998 L-7380.0039 7403.998 L-7380.0039 7401.0879 L-7380.4287 7401.1738 -7381.0186 7400.0898 -7381.3955 7399.752 C-7381.3955 7403.9951 L-7382.1113 7403.9951 L-7382.1113 7399.2891 L-7382.5552 7399.0654 -7383.0376 7398.9189 -7383.5298 7398.8555 C-7383.5298 7403.9951 L-7384.6138 7403.9951 L-7384.6138 7398.8496 L-7385.1143 7398.9248 -7385.5767 7399.085 -7386.0391 7399.29 C-7386.0391 7403.9951 L-7387.6958 7403.9951 L-7387.6958 7400.2041 L-7388.1362 7400.4824 -7388.5728 7400.7324 -7389.0854 7400.8555 C-7389.0854 7403.9951 L-7390.1689 7403.9951 L-7390.1689 7400.9893 L-7390.5552 7401.1289 -7391.3486 7400.8945 -7391.6543 7400.543 C-7391.6543 7403.9951 L-7392.3794 7403.9951 L-7392.3794 7399.9014 L-7392.4634 7399.209 -7392.1382 7398.8457 -7392.0015 7398.7227 C-7385.3359 7393.6885 -7389.5713 7387.1309 -7393.9658 7383.2959 C-7393.9658 7386.5244 L-7393.6919 7386.2344 -7393.48 7385.8555 -7393.1558 7384.625 C-7393.0127 7385.4414 -7393.4526 7386.4082 -7393.7246 7386.8711 C-7390.9575 7386.8828 L-7390.6831 7387.3047 L-7394.0103 7387.3066 L-7394.3066 7387.7168 -7394.6455 7388.084 -7394.98 7388.4512 C-7389.9951 7388.6475 L-7389.7817 7388.9814 L-7395.3774 7388.8984 L-7395.7202 7389.2998 -7396.0361 7389.7266 -7396.2681 7390.2314 C-7389.3535 7390.3926 L-7389.3169 7390.6113 L-7396.4546 7390.7227 L-7396.5742 7391.1094 -7396.6465 7391.5439 -7396.6514 7392.0449 C-7389.0688 7391.8262 L-7389.0688 7391.9951 L-7396.6362 7392.543 L-7396.6113 7392.9746 -7396.5615 7393.3545 -7396.4888 7393.6895 C-7389.0142 7393.0781 L-7388.9995 7393.3145 L-7396.3599 7394.1777 L-7396.2314 7394.585 -7396.0654 7394.916 -7395.8755 7395.1973 C-7389.2485 7394.7354 L-7389.3945 7394.9932 L-7395.5034 7395.6572 L-7395.0215 7396.168 -7394.4521 7396.502 -7393.9238 7396.9336 C-7389.9946 7396.2139 L-7390.3135 7396.6768 L-7393.4878 7397.334 L-7392.4409 7398.2373 -7392.4814 7399.9297 -7392.6914 7399.7637 c-7392.8657 7399.627 -7392.9985 7398.8281 -7392.9897 7398.8486 c-7393.2656 7398.2637 -7393.6035 7397.8438 -7393.9697 7397.502 C-7393.9697 7404 L-7394.4536 7404 L-7394.4536 7397.085 L-7395.6582 7396.1377 -7396.9551 7395.5674 -7397.1167 7392.4111 c-7397.25 7389.8311 -7395.5562 7388.7656 -7394.4497 7387.2871 C-7394.4497 7382.7441 L-7395.5767 7381.418 -7396.5225 7379.9912 -7396.9614 7378.1455 C-7397.8809 7373.3662 -7394.7568 7367.8545 -7389.7959 7367.4863 C-7389.7183 7367.6133 L-7394.1494 7368.5352 -7396.8442 7373.6641 -7395.9814 7378.1455 C-7395.0635 7382.0029 -7391.9395 7384.0234 -7389.5503 7387.1475 C-7387.8975 7389.5361 -7387.3457 7392.1094 -7388.0806 7394.8652 c-7388.8545 7397.6133 -7391.25 7398.5977 -7391.5649 7399.5303 c-7391.8506 7400.375 -7390.6689 7400.7002 -7389.6968 7400.6348 C-7387.5454 7400.4395 -7386.1602 7397.4922 -7382.3184 7398.7559 c-7381.2222 7399.1162 -7380.5913 7399.9375 -7380.3042 7400.5469 c-7380.1104 7400.957 -7378.7241 7400.4395 -7379.9165 7398.2207 C-7382.8774 7398.0879 -7382.4521 7396.0645 -7382.2026 7396.2109 c-7380.5015 7397.209 -7379.1826 7395.3047 -7380.1055 7394.2959 c-7382.2129 7391.9902 -7383.8481 7392.2861 -7385.9248 7388.3174 c-7388.2095 7383.9521 -7389.2695 7378.0723 -7386.7959 7373.9082 C-7386.7954 7373.1387 L-7387.0479 7372.5439 -7387.0249 7372.085 -7387.2134 7371.168 c-7387.3818 7370.3535 -7387.6689 7370.085 -7387.9575 7369.9121 C-7388.1304 7369.7969 -7388.5015 7369.9053 -7388.5054 7370.1445 c-7388.52 7370.7461 -7387.7842 7370.5225 -7387.8271 7370.584 c-7388.1895 7371.0869 -7388.7329 7370.7295 -7388.8345 7370.377 c-7388.9648 7369.9287 -7388.6606 7369.5762 -7388.3145 7369.4902 C-7387.6655 7369.3594 -7387.1968 7369.9277 -7386.9575 7370.457 c-7386.4365 7371.6074 -7386.4746 7373.252 -7385.2607 7373.8574 c-7384.4385 7374.2471 -7383.5537 7373.9277 -7382.7271 7373.6328 c-7379.8296 7372.6016 -7376.3096 7369.082 -7375.2783 7366.1836 c-7374.9834 7365.3574 -7374.6641 7364.4727 -7375.0537 7363.6494 c-7375.6606 7362.4375 -7377.3042 7362.4746 -7378.4546 7361.9541 c-7378.9834 7361.7148 -7379.5513 7361.2461 -7379.4214 7360.5967 C-7379.3345 7360.25 -7378.9824 7359.9473 -7378.5327 7360.0762 c-7378.1826 7360.1797 -7377.8242 7360.7227 -7378.3281 7361.084 c-7378.3882 7361.127 -7378.1655 7360.3906 -7378.7681 7360.4053 c-7379.0054 7360.4111 -7379.1143 7360.7813 -7378.9995 7360.9541 C-7378.8257 7361.2422 -7378.5591 7361.5293 -7377.7422 7361.6973 c-7376.7085 7361.9102 -7376.2578 7361.8535 -7375.5386 7362.2266 C-7375.1167 7362.2266 L-7370.9546 7359.7529 -7365.0674 7360.8008 -7360.7095 7363.0977 c-7360.0527 7363.4551 -7359.4834 7363.8008 -7358.9126 7364.1475 c-7357.5488 7364.9766 -7355.5542 7367.8857 Y-7355.1782 7368.332 -7354.9521 7368.7979 -7354.5225 7369.0625 c-7353.3569 7369.7783 -7351.8184 7368.5215 -7352.8154 7366.8193 c-7352.9614 7366.5703 -7350.9385 7366.1455 -7350.8057 7369.1064 C-7348.5874 7370.2988 -7348.0698 7368.9121 -7348.4795 7368.7178 c-7349.0889 7368.4316 -7349.9087 7367.7998 -7350.2705 7366.7041 c-7351.5342 7362.8623 -7348.3599 7361.0234 -7348.4463 7359.3262 C-7348.3008 7358.5322 -7348.6514 7357.1719 -7349.4961 7357.459 c-7350.4282 7357.7725 -7351.4126 7360.168 -7354.1606 7360.9414 c-7356.9175 7361.6768 -7359.4897 7361.125 -7361.8774 7359.4717 C-7365.0034 7357.084 -7367.0234 7353.959 -7370.8818 7353.041 C-7375.3623 7352.1777 -7380.4902 7354.873 -7381.4126 7359.3037 C-7381.5391 7359.2266 L-7381.1729 7354.2656 -7375.6592 7351.1426 -7370.8818 7352.0615 C-7369.0361 7352.502 -7367.6104 7353.4453 -7366.2822 7354.5723 C-7361.7393 7354.5723 L-7360.2607 7353.4668 -7359.1943 7351.7725 -7356.6143 7351.9053 c-7353.4585 7352.0664 -7352.8882 7353.3633 -7351.9409 7354.5723 C-7345.0264 7354.5723 L-7345.0264 7355.0566 Lf0 D-7374.1362 7364.4121 m-7366.5166 7364.4121 L-7367.5635 7363.8301 -7368.5435 7363.3184 -7369.8057 7362.9873 C-7374.6079 7362.9873 L-7374.2998 7363.3809 -7374.1055 7363.8701 -7374.1362 7364.4121 Cf-7375.0591 7366.9111 m-7363.5254 7366.9111 L-7363.6338 7366.6201 -7364.0063 7365.9404 -7364.8042 7365.4922 C-7374.4321 7365.4922 L-7374.6118 7365.9727 -7374.8232 7366.4463 -7375.0591 7366.9111 Cf-7363.8096 7369.0225 m-7363.3174 7368.4395 -7363.2568 7368.2207 -7363.3857 7367.6309 C-7375.4521 7367.6309 L-7375.7295 7368.1074 -7376.0322 7368.5723 -7376.3599 7369.0225 C-7368.2568 7369.0225 L-7367.9111 7368.2041 -7367.1665 7368.3711 -7366.8218 7369.0225 C-7363.8096 7369.0225 Lf-7365.1201 7369.4824 m-7365.1201 7369.8242 L-7364.5664 7369.7861 -7364.4995 7369.752 -7364.1982 7369.4824 C-7365.1201 7369.4824 Lf-7366.4863 7369.4824 m-7366.3311 7369.6719 -7366.0264 7369.8154 -7365.8257 7369.8457 C-7365.8257 7369.4824 L-7366.4863 7369.4824 Lf-7369.3535 7369.4824 m-7369.3535 7370.6826 L-7368.6465 7370.6826 L-7368.6465 7369.4824 L-7369.3535 7369.4824 Lf-7370.7622 7369.4824 m-7370.7622 7370.6826 L-7370.0576 7370.6826 L-7370.0576 7369.4824 L-7370.7622 7369.4824 Lf-7372.1729 7369.4824 m-7372.1729 7370.6826 L-7371.4678 7370.6826 L-7371.4678 7369.4824 L-7372.1729 7369.4824 Lf-7373.5835 7369.4824 m-7373.5835 7370.6826 L-7372.8774 7370.6826 L-7372.8774 7369.4824 L-7373.5835 7369.4824 Lf-7374.9946 7369.4824 m-7374.9946 7370.6826 L-7374.2886 7370.6826 L-7374.2886 7369.4824 L-7374.9946 7369.4824 Lf-7380 7380.7695 m-7380 7372.6504 L-7380.4497 7372.9756 -7380.9146 7373.2754 -7381.3911 7373.5449 C-7381.3911 7385.6406 L-7380.8018 7385.7695 -7380.5825 7385.709 -7380 7385.2158 C-7380 7382.2041 L-7380.6514 7381.8613 -7380.8169 7381.1152 -7380 7380.7695 Cf-7379.5391 7380.3799 m-7378.3394 7380.3799 L-7378.3394 7379.6748 L-7379.5391 7379.6748 L-7379.5391 7380.3799 Lf-7378.3394 7378.9688 m-7378.3394 7378.2637 L-7379.5391 7378.2637 L-7379.5391 7378.9688 L-7378.3394 7378.9688 Lf-7378.3394 7377.5586 m-7378.3394 7376.8535 L-7379.5391 7376.8535 L-7379.5391 7377.5586 L-7378.3394 7377.5586 Lf-7378.3394 7376.1484 m-7378.3394 7375.4434 L-7379.5391 7375.4434 L-7379.5391 7376.1484 L-7378.3394 7376.1484 Lf-7378.3394 7374.7373 m-7378.3394 7374.0313 L-7379.5391 7374.0313 L-7379.5391 7374.7373 L-7378.3394 7374.7373 Lf-7378.3394 7373.3262 m-7378.3394 7372.6201 L-7379.5391 7372.6201 L-7379.5391 7373.3262 L-7378.3394 7373.3262 Lf-7378.3394 7371.918 m-7378.3394 7371.2725 L-7378.5728 7371.4941 -7378.8135 7371.709 -7379.0591 7371.918 C-7378.3394 7371.918 Lf-7376.4058 7370.6826 m-7375.6992 7370.6826 L-7375.6992 7369.4824 L-7376.4058 7369.4824 L-7376.4058 7370.6826 Lf-7377.7495 7370.6826 m-7377.1094 7370.6826 L-7377.1094 7369.9746 L-7377.3159 7370.2158 -7377.5288 7370.4521 -7377.7495 7370.6826 Cf-7383.5298 7374.5273 m-7383.5298 7384.2227 L-7383.0815 7385.0186 -7382.4014 7385.3926 -7382.1113 7385.502 C-7382.1113 7373.9258 L-7382.5762 7374.1563 -7383.0488 7374.3564 -7383.5298 7374.5273 Cf-7386.0352 7374.209 m-7386.0352 7379.2207 L-7385.7041 7380.4844 -7385.1929 7381.4629 -7384.6094 7382.5098 C-7384.6094 7374.7725 L-7385.1606 7374.7705 -7385.6494 7374.5439 -7386.0352 7374.209 Cf-7378.3394 7402.2441 m-7379.5391 7402.2441 L-7379.5391 7402.9482 L-7378.3394 7402.9482 L-7378.3394 7402.2441 Lf-7378.3394 7400.834 m-7379.3896 7400.834 L-7379.4375 7400.8838 -7379.4878 7400.9297 -7379.5391 7400.9678 C-7379.5391 7401.5381 L-7378.3394 7401.5381 L-7378.3394 7400.834 Lf-7378.3394 7399.4209 m-7379.0039 7399.4209 L-7378.9702 7399.6475 -7378.9595 7399.9121 -7379.0137 7400.1279 C-7378.3394 7400.1279 L-7378.3394 7399.4209 Lf-7378.3394 7398.0117 m-7379.5015 7398.0117 L-7379.3872 7398.2461 -7379.2798 7398.4814 -7379.1919 7398.7168 C-7378.3394 7398.7168 L-7378.3394 7398.0117 Lf-7378.3394 7396.9033 m-7378.4614 7397.0625 -7378.5938 7397.2197 -7378.6753 7397.3066 C-7378.3394 7397.3066 L-7378.3394 7396.9033 Lf-7378.4399 7381.4395 m-7378.6968 7381.2891 -7380.0845 7380.8135 -7380.0737 7381.5381 c-7380.0674 7381.9502 -7379.4512 7382.2412 -7379.2495 7382.4473 c-7378.6338 7383.0703 -7378.1885 7384.5254 -7379.2974 7385.4238 c-7381.6328 7387.3145 -7383.1865 7385.5879 Y-7387.1118 7381.7324 -7387.1104 7376.1113 Y-7388.2295 7380.334 -7386.9663 7385.3936 -7385.4048 7388.1426 c-7382.8818 7392.584 -7381.9575 7391.0566 -7379.6113 7393.9482 c-7378.8047 7394.9434 -7379.1294 7397.3818 -7381.9546 7396.75 c-7382.2026 7396.6934 -7381.7759 7397.2949 -7381.2681 7397.5498 c-7379.1104 7398.6406 -7377.8618 7396.1631 -7378.1338 7394.8594 c-7378.4761 7393.2109 -7379.0986 7392.3662 -7381.1616 7391.2246 C-7380.8311 7391.2373 -7379.2134 7391.541 -7378.2295 7390.0088 c-7378.0195 7389.6826 -7377.8745 7388.7578 -7378.3042 7388.877 c-7378.3906 7388.9023 -7378.6416 7389.1973 -7378.9414 7389.3613 c-7380.9321 7390.3945 -7381.7075 7388.0137 Y-7379.4165 7387.8418 -7378.7515 7387.7637 -7377.2559 7385.7637 c-7377.0542 7385.4941 -7376.1162 7382.8047 -7378.4399 7381.4395 cf-7379.5391 7388.1367 m-7379.5391 7389.0225 L-7379.2993 7388.998 -7378.9302 7388.957 -7378.3394 7388.4033 C-7378.3394 7388.1367 L-7379.5391 7388.1367 Lf-7380.9946 7388.2305 m-7380.8042 7388.7031 -7380.4185 7388.9473 -7380 7389.0127 C-7380 7388.1709 L-7380.3857 7388.2354 -7380.9946 7388.2305 Yf-7378.3394 7391.666 m-7378.3394 7390.959 L-7378.6382 7390.959 L-7378.9136 7391.1475 -7379.2246 7391.293 -7379.5391 7391.3818 C-7379.5391 7391.666 L-7378.3394 7391.666 Lf-7378.9897 7392.3682 m-7378.7935 7392.5342 -7378.5576 7392.7813 -7378.3394 7393.1084 C-7378.3394 7392.3682 L-7378.9897 7392.3682 Lf-7380.2495 7391.4746 m-7380.1914 7391.5273 -7380.1025 7391.5967 -7380 7391.6719 C-7380 7391.4668 L-7380.0835 7391.4746 -7380.1675 7391.4785 -7380.2495 7391.4746 Cf-7379.5391 7383.9063 m-7379.5391 7384.8262 L-7379.2715 7384.5273 -7379.2358 7384.46 -7379.1982 7383.9063 C-7379.5391 7383.9063 Lf-7379.1758 7383.2012 m-7379.2065 7383.002 -7379.3506 7382.6943 -7379.5391 7382.54 C-7379.5391 7383.2012 L-7379.1758 7383.2012 Lf-7367.1865 7371.8975 m-7367.4233 7371.6943 -7367.6401 7371.4463 -7367.8271 7371.1426 C-7377.8794 7371.1426 L-7377.8794 7381.1992 L-7377.5762 7381.3857 -7377.3271 7381.6025 -7377.1255 7381.8408 C-7377.1265 7371.8975 L-7367.1865 7371.8975 Lf-7360.6226 7370.6826 m-7360.0698 7370.0928 -7360.0298 7369.7227 -7360.0034 7369.4824 C-7360.8887 7369.4824 L-7360.8887 7370.6826 L-7360.6226 7370.6826 Lf-7360.8564 7369.0225 m-7360.0127 7369.0225 L-7360.0791 7368.6045 -7360.3232 7368.2188 -7360.7959 7368.0273 C-7360.7915 7368.6367 -7360.8564 7369.0225 Vf-7357.3623 7369.4824 m-7357.6455 7369.4824 L-7357.7334 7369.7979 -7357.8799 7370.1084 -7358.0674 7370.3838 C-7358.0674 7370.6826 L-7357.3623 7370.6826 L-7357.3623 7369.4824 Lf-7357.3545 7369.0225 m-7357.4302 7368.9199 -7357.4995 7368.8311 -7357.5518 7368.7734 C-7357.5479 7368.8555 -7357.5518 7368.9395 -7357.5601 7369.0225 C-7357.3545 7369.0225 Lf-7355.9185 7370.6826 m-7356.2446 7370.4648 -7356.4912 7370.2305 -7356.6577 7370.0332 C-7356.6577 7370.6826 L-7355.9185 7370.6826 Lf-7351.7202 7370.3477 m-7351.8066 7370.4287 -7351.9639 7370.5615 -7352.1226 7370.6826 C-7351.7202 7370.6826 L-7351.7202 7370.3477 Lf-7351.4751 7367.7549 m-7351.7329 7367.2461 -7352.0913 7366.8945 -7352.2778 7367.0684 c-7352.4248 7367.2041 -7351.4424 7368.9434 -7352.9009 7369.7725 c-7353.7158 7370.2354 -7354.8721 7369.873 -7355.2842 7369.3066 c-7357.5615 7366.1836 -7357.4746 7365.5586 -7360.8848 7363.6172 c-7363.6318 7362.0537 -7368.6943 7360.793 -7372.9155 7361.9121 C-7367.2935 7361.9102 -7363.4385 7365.8359 V-7361.7119 7367.3906 -7363.6025 7369.7246 v-7364.5015 7370.834 -7365.9551 7370.3887 -7366.5791 7369.7734 c-7366.7842 7369.5703 -7367.0752 7368.9551 -7367.4873 7368.9482 c-7368.2134 7368.9385 -7367.7378 7370.3242 -7367.5874 7370.582 c-7366.2217 7372.9063 -7363.5322 7371.9678 -7363.2622 7371.7656 c-7361.2622 7370.2705 -7361.1846 7369.6064 -7361.0127 7367.3145 C-7358.6328 7368.0898 -7359.6655 7370.0801 v-7359.8286 7370.3809 -7360.1245 7370.6318 -7360.1489 7370.7178 c-7360.2695 7371.1475 -7359.3423 7371.0029 -7359.0176 7370.7949 c-7357.4858 7369.8086 -7357.7881 7368.1914 -7357.8018 7367.8613 C-7356.6602 7369.9248 -7355.8154 7370.5469 -7354.1675 7370.8887 c-7352.8633 7371.1602 -7350.3857 7369.9121 -7351.4751 7367.7549 cf-7350.3096 7369.8301 m-7350.5454 7369.7422 -7350.7817 7369.6357 -7351.0142 7369.5215 C-7351.0142 7370.6826 L-7350.3096 7370.6826 L-7350.3096 7369.8301 Lf-7348.8994 7370.0088 m-7349.1143 7370.0625 -7349.3794 7370.0518 -7349.6055 7370.0186 C-7349.6055 7370.6826 L-7348.8994 7370.6826 L-7348.8994 7370.0088 Lf-7346.7822 7370.6826 m-7346.0767 7370.6826 L-7346.0767 7369.4824 L-7346.7822 7369.4824 L-7346.7822 7370.6826 Lf-7348.1934 7370.6826 m-7347.4878 7370.6826 L-7347.4878 7369.4824 L-7348.0586 7369.4824 L-7348.0967 7369.5342 -7348.1426 7369.585 -7348.1934 7369.6328 C-7348.1934 7370.6826 Lf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed 3)0 Auu0 J 0 j 1 w 4 M []0 d0 XR-3531.5 3531.291 m-3432.5696 3531.291 L-3432.5696 3514.9272 L-3531.5 3514.9272 L-3531.5 3531.291 Lnuu0 O0 0 0 1 k-3435.0071 3520.6094 m-3434.7832 3520.5537 -3434.5879 3520.8643 -3434.6721 3521.0039 C-3434.2161 3520.6274 -3434.2063 3521.0557 -3434.1472 3520.3262 C-3433.8545 3519.9683 -3433.5422 3520.4639 -3433.8752 3520.7598 C-3433.0313 3520.3135 L-3433.5359 3520.1997 L-3433.3984 3519.5933 -3432.7295 3520.3809 -3432.5696 3519.6743 C-3433.4832 3519.7334 L-3433.4375 3519.5313 L-3433.6455 3519.749 -3434.0496 3519.6582 -3434.1904 3519.5732 C-3434.1682 3519.4736 -3434.1824 3519.3115 -3434.0212 3519.2935 C-3435.1243 3519.2471 -3434.3184 3520.3545 -3435.2336 3520.5557 C-3435.1763 3520.541 -3435.1052 3520.5493 -3435.0071 3520.6094 Cf-3435.9441 3519.125 m-3436.3289 3519.8853 L-3436.9744 3519.6895 L-3436.9817 3519.9517 -3437.4519 3520.1641 -3437.1335 3520.3955 C-3437.0713 3520.3545 -3436.9482 3520.2759 -3436.8489 3520.2998 C-3436.9209 3520.8672 -3437.7073 3520.583 -3437.5176 3521.1572 C-3437.0071 3521.0068 -3436.9287 3521.1318 -3436.6145 3520.6709 C-3436.1465 3520.7236 -3435.8057 3520.8545 -3435.5872 3521.0615 C-3435.4482 3520.9751 -3435.4287 3520.6274 -3435.2522 3520.5576 C-3435.2913 3520.5664 -3435.3271 3520.5752 -3435.3721 3520.5796 C-3435.3911 3519.7261 L-3435.5383 3519.9063 -3435.6775 3519.8213 -3435.8408 3519.8389 C-3435.0852 3518.8423 L-3435.3289 3518.0435 -3436.0713 3518.5127 -3436.3679 3518.1807 C-3436 3518.8984 -3436.6609 3518.5376 -3435.9441 3519.125 Cf-3435.2522 3520.5576 m-3435.2473 3520.5576 -3435.2393 3520.5566 -3435.2336 3520.5557 C-3435.2393 3520.5566 -3435.2473 3520.5566 -3435.2522 3520.5576 Cf-3491.7073 3525.5225 m-3491.8679 3525.5376 -3491.9153 3525.7393 -3491.9385 3525.8408 C-3490.1296 3525.8247 L-3490.1863 3525.6006 -3490.7073 3525.3232 -3490.3591 3525.1895 C-3490.5144 3524.9414 -3490.9873 3525.1533 -3491.0559 3525.4561 C-3490.9248 3525.1143 L-3491.3416 3525.5518 -3491.6262 3524.6919 -3491.3545 3524.4336 C-3491.3896 3524.4385 L-3492.5439 3526.123 L-3492.1201 3526.2212 -3492.2175 3525.5435 -3491.7073 3525.5225 Cf-3528.8567 3524.665 m-3528.6223 3524.5869 -3528.5935 3524.5059 -3528.6201 3524.4229 C-3528.7041 3524.4854 -3528.7839 3524.5576 -3528.8567 3524.665 Cf-3492.8137 3526.5181 m-3493.1753 3527.0454 L-3493.0305 3526.9033 -3492.9033 3526.7139 -3492.8137 3526.5181 Cf-3490.3088 3518.499 m-3490.3081 3518.4712 -3490.3042 3518.4463 -3490.3137 3518.4087 C-3490.4761 3518.6782 L-3490.4736 3518.6782 -3490.4729 3518.6782 -3490.4719 3518.6782 C-3490.4121 3518.6187 -3490.3584 3518.5591 -3490.3088 3518.499 Cf-3501.0212 3528.499 m-3501.0601 3528.5127 -3501.0935 3528.5181 -3501.1399 3528.5356 C-3501.0967 3528.5313 -3501.0576 3528.5176 -3501.0212 3528.499 Cf-3485.4087 3515.4854 m-3486.2129 3515.9927 L-3486.1057 3515.7524 -3486.4937 3515.8247 -3486.3242 3515.5449 C-3486.3855 3515.583 -3486.6729 3515.6782 -3486.5945 3515.8013 C-3486.4304 3515.7856 L-3486.8545 3516.4854 -3486.5977 3516.7544 -3487.3008 3517.2871 C-3486.8643 3517.7017 -3486.6729 3517.3223 -3486.4417 3517.0039 C-3486.3633 3516.9551 -3486.2976 3516.9336 -3486.2312 3516.9072 C-3485.5625 3515.9292 L-3485.4087 3515.4854 Lf-3517.6504 3520.6934 m-3517.6416 3520.6392 L-3517.6497 3520.6582 -3517.6511 3520.6763 -3517.6504 3520.6934 Cf-3517.6064 3520.415 m-3517.6416 3520.6392 L-3517.5984 3520.5269 -3517.4329 3520.4199 -3517.6064 3520.415 Cf-3492.6809 3526.0654 m-3492.6919 3526.1953 -3492.7383 3526.3545 -3492.8137 3526.5181 C-3492.5439 3526.123 L-3492.5823 3526.1152 -3492.6328 3526.0879 -3492.6809 3526.0654 Cf-3492.0671 3524.5376 m-3491.3896 3524.4385 L-3491.1399 3524.0752 L-3491.3992 3524.2124 -3491.7024 3524.3062 -3492.0671 3524.5376 Cf-3499.9512 3528.9102 m-3501.3545 3529.0176 -3499.6064 3528.0869 -3500.2512 3527.8887 C-3500.6409 3527.9854 -3500.7783 3528.3765 -3501.0212 3528.499 C-3499.9082 3528.165 -3501.1721 3529.7856 -3500.0496 3529.5791 C-3500.2092 3530.2856 -3500.8591 3530.3496 -3501.24 3530.1582 C-3501.6711 3529.4771 -3500.8633 3529.6592 -3500.7656 3528.9912 C-3501.2161 3529.1021 -3501.1367 3529.2261 -3501.3279 3529.6064 C-3502.0352 3529.4478 -3502.7913 3530.4429 -3503.2136 3529.499 C-3503.7256 3529.6494 -3503.6919 3529.9751 -3503.9863 3530.334 C-3504.0449 3531.063 -3503.2249 3530.7168 -3503.0352 3531.291 C-3503.0745 3531.2295 -3503.1511 3531.1064 -3503.1289 3531.0039 C-3502.6863 3531.1572 L-3503.1064 3530.9033 -3502.6279 3530.4287 -3502.4033 3530.3716 C-3502.24 3530.3564 -3501.9153 3530.3232 -3501.96 3530.5254 C-3502.2073 3530.6816 L-3501.8889 3530.9126 -3501.5049 3530.1504 -3501.1687 3530.5454 C-3501.1511 3530.709 -3501.2783 3530.7856 -3501.2976 3530.8877 C-3500.9209 3530.3896 -3500.5576 3530.4185 -3500 3530.0664 C-3500.3232 3530.7896 L-3499.8772 3529.9893 -3498.8672 3530.2168 -3498.1672 3530.6392 C-3498.2449 3530.5166 -3498.3848 3530.4307 -3498.3008 3530.291 C-3497.8896 3530.1182 -3497.5791 3530.6143 -3497.7695 3530.9951 C-3497.3679 3530.3955 -3496.2393 3531.5 -3495.6919 3530.7207 C-3493.1753 3527.0454 L-3493.2695 3527.1377 -3493.3704 3527.2124 -3493.4744 3527.2437 C-3493.7031 3526.6094 -3493.8264 3526.6865 -3493.4255 3526.0879 C-3493.8191 3526.4238 -3493.6687 3526.9336 -3494.26 3526.96 C-3494.0281 3526.6406 -3493.9695 3525.9121 -3494.5359 3525.8369 C-3495.9519 3526.4712 -3496.8904 3528.2759 -3498.2129 3529.1982 C-3498.2617 3528.709 -3499.3 3528.8462 -3499.8047 3528.731 C-3499.6121 3528.2061 -3499.2375 3528.0566 -3498.8489 3527.9502 C-3499.0928 3527.917 -3499.5127 3527.9033 -3499.8242 3527.8799 C-3499.9512 3528.9102 Lf-3496.6631 3527.2661 m-3496.6985 3527.2227 -3496.7351 3527.1982 -3496.7727 3527.1753 C-3496.7527 3527.2158 -3496.72 3527.2471 -3496.6631 3527.2661 Cf-3498.7305 3527.9648 m-3498.7256 3527.9473 -3498.7273 3527.9326 -3498.7256 3527.9126 C-3498.7664 3527.9238 -3498.8071 3527.9385 -3498.8489 3527.9502 C-3498.8071 3527.9541 -3498.76 3527.96 -3498.7305 3527.9648 Cf-3493.0127 3524.9604 m-3492.9287 3524.8213 -3492.8665 3524.7822 -3492.7825 3524.6416 C-3492.8342 3524.6895 -3492.8992 3524.7271 -3492.9617 3524.7695 C-3493.0212 3524.8354 -3493.0496 3524.9014 -3493.0127 3524.9604 Cf-3492.7295 3525.8213 m-3492.7744 3526.0225 L-3492.7383 3526.0449 -3492.7129 3526.0493 -3492.6809 3526.0654 C-3492.6711 3525.957 -3492.6816 3525.8662 -3492.7295 3525.8213 Cf-3505.3137 3524.4873 m-3505.4482 3524.5933 L-3505.3672 3524.5854 -3505.3323 3524.542 -3505.3137 3524.4873 Cf-3501.5144 3528.0796 m-3501.0264 3528.0313 -3501.4561 3527.3496 -3500.7656 3527.3462 C-3500.9683 3527.3013 L-3500.4729 3526.9893 -3499.6023 3527.1328 -3499.0137 3527.1064 C-3499.0801 3527.3984 -3498.6567 3527.4604 -3498.7256 3527.9126 C-3498.3232 3527.8062 -3497.9248 3527.7061 -3497.7175 3527.2393 C-3497.4683 3527.3926 -3497.0896 3526.9824 -3496.7727 3527.1753 C-3496.9065 3526.9019 -3496.3215 3526.2515 -3497.0928 3526.5854 C-3497.0305 3526.5479 -3497.0696 3526.4854 -3497.0081 3526.4473 C-3497.5049 3526.0664 -3497.7041 3526.7124 -3498.1321 3526.7212 C-3498.3879 3526.4517 -3497.7136 3526.2856 -3497.9551 3526.1782 C-3498.4895 3526.4292 -3499.6321 3525.8535 -3499.5967 3526.8677 C-3499.9856 3526.9395 -3500.0393 3526.7158 -3500.1553 3526.5303 C-3500.7705 3527.6108 -3502.4385 3526.0664 -3502.4329 3527.4478 C-3502.2083 3527.3936 -3501.8423 3527.4229 -3501.5127 3527.1274 C-3501.5144 3528.0796 Lf-3493.8323 3525.0313 m-3493.8623 3525.0254 -3493.9023 3525.0303 -3493.9272 3525.0181 C-3493.8992 3525.0254 -3493.8643 3525.0303 -3493.8323 3525.0313 Cf*u1 D-3487.6736 3529.0356 m-3487.8777 3529.9395 L-3489.0398 3530.1553 -3489.46 3529.9014 -3490.4761 3529.9375 C-3490.5537 3529.8135 -3490.4304 3529.7349 -3490.3679 3529.6953 C-3491.0823 3529.7998 -3492.1511 3529.6104 -3492.6711 3530.0254 C-3492.8984 3530.0181 -3493.4951 3529.731 -3493.2693 3529.4648 C-3493.3799 3529.5454 -3493.5063 3529.623 -3493.6335 3529.5942 C-3493.6672 3529.2695 -3493.3489 3529.5015 -3493.3416 3529.2349 C-3493.4424 3529.2134 -3493.4817 3529.1504 -3493.5049 3529.2524 C-3493.3352 3528.9736 -3493.6809 3528.1509 -3492.8896 3528.1719 C-3492.5833 3528.9307 -3493.4385 3528.2598 -3493.2576 3529.0967 C-3492.9951 3529.1021 -3493.0256 3528.7783 -3493.0032 3528.6763 C-3492.6687 3528.6953 -3492.6775 3528.9053 -3492.6953 3529.0967 C-3492.5671 3528.8369 -3492.1465 3529.1982 -3491.9695 3528.8037 C-3491.3191 3528.7393 -3492.0049 3529.4326 -3491.5801 3529.4229 C-3491.3352 3528.5752 L-3490.6289 3528.7349 L-3489.6064 3528.4375 -3490.7751 3527.2705 -3489.6064 3526.791 C-3489.76 3527.2334 -3489.2913 3527.9766 -3488.7473 3528.1533 C-3489.0728 3528.1846 -3489.6743 3528.7373 -3490.0945 3528.4854 C-3489.5022 3529.1494 -3490.9097 3528.5654 -3490.6023 3529.3252 C-3490.3096 3528.9648 -3489.8215 3528.917 -3489.4409 3529.1108 C-3489.5657 3529.1895 L-3489.1609 3529.2793 -3488.8545 3528.3926 -3488.2959 3528.731 C-3488.0183 3528.7041 -3488.0703 3528.9429 -3488.1191 3529.1416 C-3487.8843 3529.0142 -3487.6743 3528.8486 -3487.6736 3529.0356 Cf0 D-3488.2783 3529.2134 m-3488.6497 3529.1294 L-3488.5615 3529.2695 -3488.4231 3529.2646 -3488.2783 3529.2134 Cf*U-3441.1377 3519.2349 m-3441.1008 3519.2573 -3441.0583 3519.2803 -3441.0249 3519.3037 C-3441.0496 3519.2646 -3441.0923 3519.2471 -3441.1377 3519.2349 Cf-3474.0967 3518.9102 m-3473.8816 3518.9385 L-3473.9656 3518.9092 -3474.0344 3518.9053 -3474.0967 3518.9102 Cf-3469.2693 3516.1104 m-3468.9551 3515.9126 L-3469.0791 3515.9253 -3469.1763 3516.0039 -3469.2693 3516.1104 Cf-3443.7024 3519.1768 m-3443.7129 3519.1709 L-3443.7305 3519.1846 -3443.7439 3519.2041 -3443.7625 3519.2158 C-3443.7024 3519.1768 Lf-3459.5872 3518.0933 m-3459.5393 3518.165 -3459.4856 3518.23 -3459.4121 3518.2803 C-3459.4209 3518.1963 -3459.4863 3518.1353 -3459.5872 3518.0933 Cf-3469.3271 3516.1475 m-3469.3191 3516.1553 -3469.3145 3516.1572 -3469.3081 3516.1631 C-3469.2959 3516.1455 -3469.2825 3516.1265 -3469.2693 3516.1104 C-3469.3271 3516.1475 Lf-3476.2231 3516.4385 m-3476.2693 3516.4648 -3476.3113 3516.4854 -3476.3608 3516.5225 C-3476.2959 3516.5059 -3476.2561 3516.4741 -3476.2231 3516.4385 Cf-3475.9199 3518.8408 m-3475.9695 3518.8623 -3476.0168 3518.8887 -3476.0537 3518.9253 C-3475.9199 3518.8408 Lf-3483.3577 3517.1934 m-3483.6472 3517.3145 L-3483.5049 3517.3013 -3483.4199 3517.2544 -3483.3577 3517.1934 Cf-3476.6863 3518.2856 m-3476.7031 3518.3252 -3476.72 3518.3633 -3476.7312 3518.4014 C-3476.6912 3518.375 -3476.6721 3518.3252 -3476.6863 3518.2856 Cf-3439.2976 3521.7617 m-3439.3042 3521.7617 -3439.3113 3521.7646 -3439.3152 3521.7646 C-3439.3225 3521.8633 L-3439.2976 3521.7617 Lf-3438.5935 3520.5269 m-3438.5105 3520.5015 -3438.4241 3520.479 -3438.3391 3520.457 C-3438.4336 3520.4517 -3438.5256 3520.4785 -3438.5935 3520.5269 Cf-3455.3809 3519.457 m-3455.3042 3519.5796 -3455.1243 3519.7261 -3455.2083 3519.8662 C-3455.0615 3519.6895 -3455.0713 3519.2603 -3455.3809 3519.457 Cf-3440.7092 3527.0664 m-3440.6631 3526.9517 -3440.6057 3526.8643 -3440.5481 3526.7783 C-3440.6553 3526.9019 -3440.7493 3527.0039 -3440.7092 3527.0664 Cf-3440.5481 3526.7783 m-3440.4951 3526.7173 -3440.4385 3526.6533 -3440.3911 3526.5869 C-3440.4463 3526.6416 -3440.4993 3526.7061 -3440.5481 3526.7783 Cf-3457.3313 3526.4912 m-3457.3503 3526.4336 -3457.3799 3526.3853 -3457.4199 3526.3701 C-3457.4082 3526.4854 -3457.3762 3526.5103 -3457.3313 3526.4912 Cf-3438.1335 3520.5928 m-3438.0879 3520.3911 -3436.9817 3519.9517 -3437.9121 3519.8486 C-3437.8762 3519.2192 -3437.3152 3519.5576 -3437.0671 3519.4019 C-3437.2473 3519.2544 -3436.9775 3518.998 -3437.0322 3518.7734 C-3437.1553 3518.8496 -3437.3015 3519.0303 -3437.5049 3518.9854 C-3437.5984 3518.6982 -3437.2898 3518.5024 -3437.0488 3518.6104 C-3437.3457 3518.2783 -3436.6721 3518.1118 -3437.0923 3517.8574 C-3437.9905 3518.0791 -3438.6252 3518.3076 -3439.2568 3519.2261 C-3438.7449 3519.0752 -3438.1721 3518.8877 -3437.7522 3519.1406 C-3437.9287 3519.6846 L-3438.4033 3519.2061 -3438.6963 3519.563 -3439.1631 3519.5127 C-3438.1145 3519.8013 L-3437.6233 3520.2544 -3437.9519 3520.3584 -3438.3391 3520.457 C-3438.2439 3520.4639 -3438.1577 3520.4966 -3438.1335 3520.5928 Cf-3438.8401 3525.3662 m-3438.8225 3525.3809 L-3438.8071 3525.3623 -3438.7881 3525.3496 -3438.7783 3525.3267 C-3438.8401 3525.3662 Lf-3483.3042 3528.2017 m-3483.3943 3528.4077 L-3483.3191 3528.3145 -3483.2959 3528.2515 -3483.3042 3528.2017 Cf-3439.4656 3522.731 m-3439.4648 3522.731 L-3439.4719 3522.7373 -3439.4736 3522.7373 -3439.4656 3522.731 Cf-3481.0632 3528.2437 m-3481.0664 3528.2583 -3481.0696 3528.2744 -3481.0752 3528.291 C-3481.0671 3528.2744 -3481.0671 3528.2583 -3481.0632 3528.2437 Cf-3480.4641 3516.5142 m-3480.4683 3516.4893 -3480.4695 3516.4648 -3480.4792 3516.4404 C-3480.5271 3516.4712 -3480.5039 3516.4966 -3480.4641 3516.5142 Cf-3481.0615 3528.1934 m-3481.0615 3528.21 -3481.0601 3528.2261 -3481.0632 3528.2437 C-3481.0615 3528.2261 -3481.0576 3528.209 -3481.0615 3528.1934 Cf-3470.1641 3526.1963 m-3470.1985 3526.1021 -3470.2527 3526.0127 V-3470.2737 3526.063 -3470.2527 3526.1221 -3470.1641 3526.1963 Cf-3472.3152 3525.3911 m-3472.3152 3525.3911 L-3472.3289 3525.3711 -3472.3369 3525.3535 -3472.3545 3525.3311 C-3472.3152 3525.3911 Lf-3455.8896 3517.0068 m-3455.9961 3516.999 -3456.0759 3517.0127 -3456.1433 3517.0356 C-3456.0657 3517.0493 -3455.9817 3517.0479 -3455.8896 3517.0068 Cf-3481.0752 3528.291 m-3481.0977 3528.3486 -3481.1296 3528.4077 -3481.1824 3528.4814 c-3481.1243 3528.4033 -3481.0935 3528.3433 -3481.0752 3528.291 Cf-3466.8843 3523.4478 m-3466.9072 3523.4692 -3466.9287 3523.4893 -3466.9504 3523.5078 C-3466.9373 3523.5181 -3466.9241 3523.5225 -3466.9111 3523.5352 C-3466.8843 3523.4478 Lf-3465.7617 3523.8486 m-3465.8 3523.9102 -3465.8176 3523.9741 -3465.8391 3524.0303 C-3465.4385 3523.8037 -3464.7024 3524.0493 -3464.6152 3523.4712 C-3464.7512 3523.4854 -3465.4561 3523.1455 -3465.3359 3522.8062 C-3465.6152 3522.9512 -3466.0281 3522.5454 -3466.1785 3522.6406 C-3465.72 3522.957 -3466.1289 3523.1289 -3466.4385 3523.3232 C-3466.72 3523.1553 -3466.3855 3522.8584 -3466.6279 3522.7515 C-3467.2793 3522.8145 L-3466.7119 3522.8916 L-3466.8843 3523.4478 L-3466.8633 3523.4292 -3466.8489 3523.417 -3466.8264 3523.3955 C-3465.8665 3523.1353 -3466.7449 3524.21 -3465.7617 3523.8486 Cf-3465.8391 3524.0303 m-3465.8992 3524.0654 -3465.9519 3524.1079 -3465.9929 3524.167 C-3465.9023 3524.1582 -3465.8672 3524.1016 -3465.8391 3524.0303 Cf-3461.9172 3524.9478 m-3461.8679 3524.9292 -3461.8145 3524.9033 -3461.7473 3524.8599 c-3461.7793 3524.8809 -3461.8535 3524.9077 -3461.9172 3524.9478 Cf-3490.6584 3524.167 m-3490.6416 3524.3311 -3490.0823 3524.6685 -3490.0923 3524.2407 C-3490.0923 3524.2407 L-3490.2583 3524.1982 -3490.4255 3524.1533 -3490.5935 3524.1064 C-3490.6584 3524.167 Lf-3451.2336 3522.4604 m-3451.2959 3522.4478 -3451.3584 3522.4429 -3451.4209 3522.4502 C-3451.4343 3522.4712 -3451.4473 3522.4951 -3451.4573 3522.5166 C-3451.4192 3522.5796 -3451.2959 3522.5015 -3451.2336 3522.4604 Cf-3465.1631 3522.605 m-3465.2656 3522.6709 -3465.3113 3522.7383 -3465.3359 3522.8062 C-3465.2695 3522.7725 -3465.2083 3522.7173 -3465.1631 3522.605 Cf-3451.1985 3523.4785 m-3451.1191 3523.6006 -3451.0022 3523.7871 -3450.9856 3523.9502 C-3450.8232 3523.9541 -3450.7092 3523.7295 -3450.5439 3523.6494 C-3450.7305 3523.7119 -3450.9463 3523.6685 -3451.1985 3523.4785 Cf-3450.5305 3523.6416 m-3450.5352 3523.6455 -3450.5398 3523.6475 -3450.5439 3523.6494 C-3450.5393 3523.6494 -3450.5352 3523.644 -3450.5305 3523.6416 Cf*u1 D-3490.9912 3523.9854 m-3491.0393 3524.0181 -3491.0889 3524.0479 -3491.1399 3524.0752 C-3491.0625 3523.9604 L-3491.1912 3523.9185 -3491.3191 3523.8774 -3491.4473 3523.8311 C-3491.4937 3523.8584 -3491.5439 3523.8843 -3491.6057 3523.8984 C-3491.5808 3523.8843 -3491.5615 3523.8389 -3491.5496 3523.792 C-3491.5913 3523.7764 -3491.6321 3523.7593 -3491.6729 3523.7422 C-3491.9792 3524.1851 -3492.7417 3524.5088 -3492.9617 3524.7695 C-3493.2527 3524.959 -3493.6089 3525.0664 -3493.8323 3525.0313 C-3493.6252 3525.041 -3493.3503 3524.9517 -3493.4329 3524.707 C-3493.8533 3524.4517 -3494.0576 3523.7173 -3494.7832 3524.3486 C-3494.3577 3524.3389 L-3495.3145 3525.2896 L-3495.6497 3524.8955 -3494.8369 3524.8145 -3494.7041 3524.4727 C-3495.4482 3524.9414 -3496.0671 3523.6895 -3496.4121 3524.5127 C-3496.4607 3524.0244 -3496.5422 3523.21 -3497.0305 3523.2583 C-3496.6785 3523.8145 -3497.3232 3523.6157 -3497.0344 3524.2119 C-3497.2031 3524.4912 -3497.5791 3524.0356 -3497.6072 3524.4014 C-3497.5615 3524.1992 L-3498.3953 3523.4263 -3498.6682 3524.6377 -3499.0249 3525.0356 C-3500.0232 3525.2349 -3500.4817 3524.9185 -3501.2959 3525.0015 C-3501.3279 3524.6743 -3501.5496 3523.7744 -3501.8762 3523.8086 C-3502.0281 3524.2515 -3502.7649 3524.4561 -3502.8401 3525.0225 C-3502.2561 3525.2598 -3502.3623 3524.5479 -3502.0127 3524.415 C-3501.7217 3525.0093 -3501.9863 3525.0024 -3501.5889 3525.3584 C-3501.9097 3525.1274 -3503.0383 3525.6685 -3503.3896 3525.1104 C-3503.2656 3525.0313 L-3503.8264 3524.6934 -3503.9336 3523.291 -3504.8679 3524.1396 C-3505.3137 3524.4873 L-3505.2922 3524.4307 -3505.2898 3524.3643 -3505.2783 3524.3135 C-3506.0081 3524.2544 -3505.8088 3523.6094 -3506.6145 3524.1182 c-3506.5522 3524.0791 -3506.5913 3524.0166 -3506.5281 3523.9785 C-3506.9873 3523.6597 -3507.4504 3524.2998 -3507.7976 3524.4336 C-3508.0095 3523.9604 -3507.7473 3523.9683 -3507.6162 3523.6265 C-3508.4241 3523.4429 -3509.2959 3524.2544 -3509.7976 3524.8311 C-3510.3184 3524.5537 L-3510.0095 3524.3584 -3509.6321 3523.8599 -3509.7263 3523.5742 C-3510.0127 3523.6685 -3509.9573 3523.8926 -3510.3623 3523.8013 C-3510.2932 3523.499 -3510.1233 3523.2173 -3509.9329 3522.8369 C-3510.7705 3522.3311 -3510.1201 3523.9092 -3510.7063 3522.9814 C-3510.9695 3522.9751 -3511.1223 3523.417 -3511.1511 3523.7822 C-3511.6279 3523.3037 L-3511.6809 3523.7695 -3512.2695 3523.7959 -3512.6553 3523.8662 C-3512.7024 3524.0664 -3512.3447 3524.3623 -3512.1985 3524.1816 C-3512.2273 3524.5479 -3512.6377 3524.7192 -3512.9016 3524.7124 C-3512.9983 3523.7373 -3514.6296 3524.8535 -3514.3176 3523.7041 C-3515.5032 3524.021 -3517.1687 3524.1201 -3517.9512 3524.5269 C-3518.2092 3524.2573 -3518.7351 3524.2437 -3518.4199 3523.7856 C-3519.3743 3523.7822 -3519.8665 3524.7832 -3520.8137 3524.5166 C-3520.8921 3524.394 -3520.3855 3524.5078 -3520.4192 3524.1816 C-3521.0383 3524.5732 -3521.5457 3523.7695 -3522.5063 3524.0303 C-3522.3447 3524.0127 -3522.2976 3523.8115 -3522.2751 3523.71 C-3522.2583 3523.8716 -3522.6687 3524.0454 -3522.9172 3524.2017 C-3523.0569 3524.1182 -3522.7312 3524.0854 -3522.8096 3523.9604 C-3524.6653 3523.4873 -3526.0791 3524.8135 -3527.9248 3524.7695 c-3527.3977 3524.7822 -3527.1985 3524.1353 -3527.1929 3523.8716 C-3527.7092 3523.8599 L-3527.9082 3524.1816 -3528.2959 3524.1816 -3528.6201 3524.4229 C-3528.6599 3524.3013 -3528.8176 3524.1709 -3528.6567 3524.0181 C-3529.6768 3523.3643 -3530.25 3525.1982 -3531.5 3524.8623 C-3529.9863 3523.5591 L-3530.3608 3523.105 L-3529.6953 3522.5127 L-3530.0928 3522.1553 -3530.4385 3522.9814 -3530.4863 3522.4912 C-3530.4023 3522.3535 -3530.2 3522.3975 -3530.1936 3522.1328 C-3530.5752 3521.9414 -3530.6052 3522.3062 -3530.8921 3522.4014 C-3530.1362 3521.4053 -3528.6543 3521.4209 -3527.8567 3521.1768 C-3527.7312 3521.0977 -3527.9641 3521.417 -3527.9863 3521.5181 C-3527.6609 3521.4854 -3527.4656 3521.7959 -3527.0559 3521.623 C-3526.8015 3521.2017 -3527.25 3521.3135 -3527.4519 3521.2695 C-3527.4241 3520.9033 -3527.3225 3520.9253 -3527.0977 3520.8701 C-3527.0488 3521.3584 -3525.8633 3521.0435 -3525.5735 3521.6392 C-3524.3721 3521.4854 -3525.7656 3520.375 -3524.5928 3520.5869 C-3524.2424 3521.1455 L-3523.5615 3520.7139 -3522.6809 3520.3311 -3521.9104 3520.4502 C-3522.0728 3520.4683 L-3522.1809 3520.707 -3522.0022 3520.8545 -3521.9231 3520.9766 C-3521.3408 3521.2158 -3520.8176 3520.5376 -3520.4648 3521.0967 C-3519.8008 3520.5024 -3518.6936 3520.063 -3517.9343 3519.7568 C-3517.7295 3520.4932 -3518.9248 3520.3809 -3519.2407 3520.8413 C-3518.5496 3520.8389 L-3518.9768 3520.8486 -3519.1455 3521.1289 -3519.4016 3521.5479 C-3518.7959 3521.6846 -3518.5967 3521.04 -3518.0225 3520.8535 C-3518.0671 3521.0537 -3517.9905 3521.1768 -3517.7256 3521.1816 C-3517.6504 3520.6934 L-3517.6455 3520.7334 -3517.6162 3520.7705 -3517.5344 3520.8013 C-3516.5127 3520.5024 L-3516.7295 3520.2935 -3516.74 3519.8677 -3517.0039 3519.8623 C-3516.9097 3520.1475 -3517.1335 3520.2041 -3517.3977 3520.1963 C-3517.1663 3519.8774 -3517.6553 3519.9272 -3517.6497 3519.6631 C-3517.1201 3519.6763 -3516.4695 3519.6104 -3516.1223 3519.4766 C-3516.0095 3519.9272 L-3515.5049 3520.041 -3514.9719 3519.7896 -3514.6296 3519.9209 C-3514.7375 3520.1597 L-3514.1321 3520.2979 -3513.5359 3520.0078 -3512.9983 3520.4473 C-3512.4583 3519.9326 -3511.7783 3519.5039 -3511.3369 3518.9648 C-3511.1008 3518.3843 -3509.7522 3519.6953 -3509.1433 3518.8774 C-3509.1023 3518.9395 -3509.5615 3519.3145 -3509.7693 3519.5342 C-3509.3643 3519.624 -3509.0422 3518.9014 -3508.9153 3519.5132 C-3509.8242 3519.3076 -3508.8665 3520.0015 -3509.2759 3520.1753 C-3508.8503 3520.1641 -3508.4016 3520.0537 -3508.1929 3519.8354 C-3508.8816 3519.8398 -3507.9482 3518.9893 -3508.6455 3519.2559 C-3508.1052 3518.7412 -3507.3679 3518.5356 -3506.7241 3518.7349 C-3506.7305 3518.999 -3506.6511 3519.1221 -3506.4111 3519.231 C-3506.2175 3518.8486 L-3505.9163 3518.9185 -3506.8 3519.3013 -3506.1936 3519.4385 C-3505.5696 3518.7832 -3504.3145 3519.8096 -3504.0413 3518.5977 C-3503.5657 3519.0767 -3504.9463 3519.083 -3504.2295 3519.6685 C-3504.6465 3520.1064 -3505.2217 3519.605 -3505.3591 3520.21 C-3504.9504 3520.0376 -3505.21 3520.7212 -3504.9463 3520.7271 C-3504.4905 3520.3545 L-3504.5913 3520.3311 L-3503.8264 3519.7603 -3502.6145 3520.0342 -3501.6377 3519.9375 C-3500.8103 3519.3281 -3500.2407 3518.4478 -3499.2483 3518.5142 C-3499.5413 3518.8716 -3498.4241 3518.8584 -3499.0488 3519.5132 C-3498.5896 3519.8286 -3498.1362 3519.4551 -3498.1272 3519.1909 C-3498.5313 3519.1006 -3498.2693 3519.1064 -3498.6096 3518.9766 C-3498.3799 3518.6563 -3497.8503 3518.6709 -3497.6328 3518.8799 C-3497.7336 3518.8564 -3497.6953 3518.9185 -3497.7175 3519.0181 C-3497.2351 3519.2334 -3497.4863 3518.6997 -3497.1377 3518.5664 C-3497.0271 3519.0142 -3496.3679 3518.6865 -3496.0496 3518.9185 C-3495.5879 3518.2793 L-3495.8416 3518.6992 -3495.1455 3518.4326 -3495.0728 3518.8188 C-3494.7417 3518.5225 -3494.4641 3518.0024 -3493.96 3518.1157 C-3494.1682 3518.3354 -3493.5 3518.4326 -3493.4912 3518.8584 C-3492.6279 3519.2661 -3492.0615 3517.6963 -3491.2439 3518.3062 C-3491.2693 3518.4063 -3491.4343 3518.6865 -3491.1953 3518.7935 C-3491.0071 3518.6743 -3490.6775 3518.7246 -3490.4761 3518.6782 C-3490.4824 3518.6904 L-3490.4785 3518.6865 -3490.4761 3518.6816 -3490.4719 3518.6782 C-3490.3733 3518.6553 -3490.3113 3518.6021 -3490.3088 3518.499 C-3489.9641 3518.082 -3489.7864 3517.6553 -3489.1079 3517.3013 C-3489.1577 3516.8135 -3489.7305 3517.0024 -3489.9785 3517.1597 C-3490.1929 3517.6416 L-3490.3977 3516.9053 -3490.8047 3517.7695 -3490.9607 3517.521 C-3490.5537 3516.6582 -3489.3816 3516.8701 -3488.6785 3516.3398 C-3489.1072 3515.6597 -3490.0398 3515.5537 -3490.8535 3515.6353 C-3490.4951 3515.9287 L-3490.9209 3515.9385 L-3490.5088 3516.457 L-3490.9121 3516.3662 -3491.2607 3516.499 -3491.6252 3516.4692 C-3491.1985 3516.46 -3491.0322 3517.1328 -3491.2737 3517.0264 C-3491.7493 3516.5479 -3491.7693 3517.3389 -3492.1328 3517.3096 C-3491.9304 3517.3545 -3491.6672 3517.3623 -3491.8369 3517.6416 C-3492.5537 3517.0557 -3492.7473 3517.4375 -3493.3992 3516.8115 C-3493.3184 3517.625 -3494.2136 3516.8926 -3494.3113 3517.5591 C-3494.0088 3517.6274 L-3494.6504 3518.1187 L-3495.2424 3517.4561 -3494.1262 3517.4429 -3495.0271 3516.9741 C-3495.8584 3516.8926 -3495.8369 3517.7471 -3496.4905 3517.8101 C-3496.2751 3517.3286 -3495.7568 3516.915 -3495.2295 3516.9287 C-3495.5488 3516.6963 L-3495.3799 3516.417 -3494.6504 3516.4756 -3494.2864 3516.5044 C-3494.8879 3517.0576 -3494.0049 3516.6743 -3493.7312 3517.1064 C-3493.6809 3516.6406 -3494.0671 3516.7139 -3493.6111 3516.3398 C-3494.0383 3516.3486 -3494.1008 3516.3877 -3494.6443 3516.2119 C-3493.4695 3516.4238 -3493.5879 3514.5933 -3492.5625 3514.9854 C-3493.0352 3515.1963 -3492.3977 3515.6582 -3492.3408 3515.8843 C-3492.1184 3515.8281 -3491.6672 3515.7173 -3491.4817 3515.6006 C-3491.6497 3514.9272 L-3491.0522 3514.6353 -3490.8447 3516.0625 -3490.1553 3515.3677 C-3490.0657 3514.9648 -3490.7617 3515.231 -3490.6377 3515.1533 C-3489.6943 3514.73 -3489.3545 3515.8145 -3488.5168 3516.3223 C-3488.4695 3516.1201 -3488.4792 3515.6934 -3488.1863 3515.3369 C-3488.2783 3515.7412 -3488.0615 3515.9478 -3488.3911 3516.2437 C-3488.1111 3516.415 -3487.7793 3516.1182 -3487.5322 3515.9604 C-3488.1152 3515.7236 -3487.2937 3515.3799 -3487.1863 3515.1377 C-3486.8843 3515.2061 -3487.2783 3515.541 -3487.4641 3515.6582 C-3487.2217 3515.7661 -3486.9336 3516.3623 -3486.7959 3515.7568 C-3486.7864 3516.1816 -3487.4736 3516.8774 -3487.9231 3516.9873 C-3487.6201 3517.0557 L-3487.8289 3517.2734 -3487.8679 3517.2119 -3488.1687 3517.1455 C-3487.8743 3517.4756 -3487.9033 3517.8398 -3487.9719 3518.1431 C-3488.0105 3518.0811 -3487.9504 3518.042 -3487.9873 3517.9814 C-3488.2295 3517.873 -3488.4153 3517.9893 -3488.3591 3518.2158 C-3488.5769 3518.7876 -3488.0232 3518.5732 -3487.8591 3518.8584 C-3487.7351 3518.8213 -3487.6111 3518.7822 -3487.4895 3518.7437 C-3486.2312 3516.9072 L-3485.6936 3516.6934 -3485.4519 3517.1328 -3485.0481 3517.4102 C-3484.9373 3516.9185 L-3484.4695 3516.9692 -3484.0281 3517.125 -3484.3279 3517.7471 C-3484.3447 3517.583 -3484.4065 3517.6221 -3484.5081 3517.5977 C-3484.5215 3517.665 -3484.5449 3517.7124 -3484.5745 3517.7515 C-3484.5842 3517.7803 -3484.5896 3517.8086 -3484.5977 3517.8369 C-3484.0967 3517.6782 -3483.7839 3517.5752 -3483.7551 3517.5566 C-3484.6057 3518.2695 -3483.7976 3518.4478 -3483.9399 3519.3188 C-3483.0808 3519.0352 L-3483.6016 3518.7593 -3483.0903 3518.6094 -3482.9055 3518.4912 C-3482.8545 3518.9814 -3482.2136 3518.4873 -3481.9121 3518.5557 C-3481.9343 3518.6563 L-3481.6553 3518.8262 -3481.1663 3518.7783 -3480.8184 3518.6455 C-3480.8342 3518.4814 -3480.3879 3517.6807 -3480.1736 3517.1982 C-3480.7705 3517.0142 -3480.4163 3516.8184 -3480.4641 3516.5142 C-3480.4023 3516.542 -3480.2913 3516.5479 -3480.2783 3516.4854 C-3480.1929 3516.3462 -3480.3943 3516.2998 -3480.4111 3516.1377 C-3481.0457 3516.3662 -3481.6985 3516.4307 -3481.9573 3517.1143 C-3481.7625 3517.4238 -3481.6252 3516.8184 -3481.4072 3517.0254 C-3481.7217 3517.4854 -3482.1272 3517.394 -3482.6543 3517.3809 C-3482.8271 3516.9712 L-3483.3577 3517.1934 L-3483.1362 3516.9766 -3483.2695 3516.5479 -3482.7129 3516.4648 C-3482.7839 3516.0791 -3483.2649 3516.5537 -3483.6057 3516.4238 C-3483.78 3516.9683 L-3483.7129 3516.665 -3484.4424 3516.6064 -3483.9241 3516.1924 C-3483.0808 3515.7471 L-3483.3152 3515.375 L-3482.6023 3515.2705 L-3482.7705 3515.5518 L-3481.6252 3515.1753 -3482.4329 3516.6353 -3481.28 3515.9927 C-3480.9192 3515.333 -3480.5313 3515.2622 -3479.8247 3515.4229 C-3480.3359 3515.5703 -3479.8772 3515.8877 -3480.0696 3516.2695 C-3479.5481 3516.5449 -3479.3721 3516.0015 -3479.1016 3515.7437 C-3478.9688 3516.0923 -3478.8743 3516.3774 -3479.3401 3516.3262 C-3479.3984 3517.0557 -3478.7273 3516.1997 -3478.6848 3516.9512 C-3477.1416 3516.9287 -3477.4482 3514.5254 -3475.6443 3515.4639 C-3475.7119 3515.7661 L-3474.5664 3515.3896 -3473.9055 3515.7515 -3472.8447 3515.5127 C-3472.0095 3516.2832 L-3472.1963 3516.4014 -3472.6985 3516.9771 -3472.4641 3517.3486 C-3472.8704 3516.5688 -3473.3015 3516.8413 -3473.7393 3516.4238 C-3473.7839 3516.6265 -3473.6057 3516.7725 -3473.5281 3516.8975 C-3473.7922 3516.8896 -3473.9248 3516.541 -3474.2737 3516.6763 C-3474.2568 3516.8369 -3473.8762 3517.0303 -3474.1631 3517.125 C-3474.6377 3516.6455 L-3475.2727 3516.874 -3474.9504 3517.7935 -3475.6963 3517.5732 C-3475.5576 3517.1455 -3475.2744 3516.5264 -3474.9856 3516.4238 C-3475.3264 3516.3311 -3474.5313 3516.165 -3474.8423 3515.9092 C-3475.3333 3516.5435 -3475.5703 3516.041 -3476.2231 3516.4385 C-3476.1465 3516.3496 -3476.1262 3516.2256 -3475.9656 3516.1865 C-3476.9128 3515.9185 L-3476.6785 3516.2896 -3477.6953 3516.3262 -3477.6072 3516.8774 C-3476.5977 3517.105 -3476.8943 3516.7725 -3475.7439 3517.0854 C-3476.0696 3517.21 -3476.4895 3517.7705 -3476.6863 3518.2856 C-3476.6963 3518.2646 -3476.7129 3518.2471 -3476.7483 3518.2373 C-3476.9241 3518.7822 -3476.7449 3518.9287 -3476.7483 3519.8809 C-3476.2231 3519.2041 -3475.8721 3519.7617 -3475.2527 3519.3716 C-3475.1362 3518.8496 -3475.6121 3518.7061 -3475.9199 3518.8408 C-3475.3743 3518.4951 L-3475.4817 3518.7349 L-3474.0967 3518.9102 L-3474.3591 3518.9385 -3474.4482 3519.2407 -3474.5852 3519.4688 C-3474.4065 3519.4893 -3474.2295 3519.6274 -3474.0413 3519.7783 C-3474.0808 3519.2803 -3474.0559 3518.9287 -3473.8816 3518.9385 C-3472.9905 3519.0566 -3472.4951 3519.5039 -3472.1663 3520.0728 C-3472.1321 3520.0615 -3472.0935 3520.0493 -3472.0625 3520.0376 C-3472.2119 3519.5269 -3471.4297 3519.1201 -3471.1536 3518.5977 C-3471.1672 3519.1265 -3470.6943 3518.915 -3470.4375 3519.1846 C-3470.3008 3518.5791 -3470.4832 3517.7432 -3470.7959 3517.248 C-3471.3984 3517.8013 -3471.1335 3517.8062 -3471.4182 3518.5923 C-3472.3848 3519.1157 L-3472.1687 3518.6328 L-3472.6511 3518.4199 -3473.1145 3519.0576 -3473.0791 3518.4292 C-3472.8242 3518.0103 -3472.4033 3518.2646 -3472.1504 3517.8438 C-3472.4695 3517.6143 L-3471.9065 3516.9966 -3472.1809 3518.209 -3471.4993 3517.7783 C-3471.75 3517.2437 -3471.4375 3517.7393 -3471.1455 3517.3809 C-3471.3799 3517.0093 -3472.3457 3517.5342 -3472.1409 3516.6265 C-3471.7864 3516.2295 -3470.9482 3517.6904 -3470.4792 3516.7876 C-3470.5022 3516.8896 L-3469.8103 3517.0078 -3469.5671 3516.4893 -3469.3081 3516.1631 C-3469.0137 3516.457 -3468.6072 3516.0435 -3468.2881 3516.0103 C-3468.2959 3516.2744 L-3467.8457 3516.1641 L-3468.0601 3516.6455 -3468.3733 3516.1509 -3468.76 3516.2212 C-3468.7119 3516.7119 L-3469.1577 3516.1294 -3469.4551 3517.0142 -3469.8008 3517.4375 C-3469.2976 3517.0127 -3468.3799 3517.5576 -3468.2617 3516.5977 C-3467.9504 3517.0942 L-3467.8015 3516.915 L-3467.5696 3517.2871 -3467.8064 3517.8701 -3468.2561 3517.9814 C-3468.3342 3517.8574 -3468.3733 3517.7959 -3468.3496 3517.6934 C-3468.5583 3517.9126 -3468.75 3518.2935 -3469.2551 3518.1807 C-3468.9856 3517.9209 L-3469.6145 3517.8853 -3470.1863 3518.0752 -3470.4016 3518.5576 C-3469.4937 3518.7622 -3468.6008 3518.8057 -3467.7483 3518.7832 C-3467.4968 3517.6743 -3467.1985 3517.0518 -3467.0703 3516.021 C-3466.4983 3515.8311 -3465.7217 3515.6895 -3465.2249 3516.0664 C-3465.2705 3516.2695 L-3465.0281 3516.375 -3464.8047 3516.3188 -3464.6184 3516.2017 C-3464.3623 3516.4727 -3464.7937 3516.7471 -3464.6152 3516.8936 C-3463.7959 3516.5479 L-3463.8464 3517.0142 -3464.5359 3517.0166 -3464.8633 3517.0493 C-3464.8015 3517.0103 -3464.6768 3516.9326 -3464.7168 3516.8701 C-3465.0977 3516.6782 -3465.8071 3517.4727 -3465.9736 3516.7979 C-3466.1592 3516.915 -3465.5967 3516.2998 -3466.2249 3516.2646 C-3466.6455 3516.0103 -3466.7825 3516.6157 -3466.8264 3516.8184 C-3466.8333 3517.083 -3466.1663 3517.1807 -3466.3977 3517.499 C-3466.0703 3517.4648 -3465.9399 3517.125 -3465.5212 3517.3799 C-3465.8457 3517.4121 -3466.2864 3517.9478 -3466.4592 3517.5376 C-3467.1008 3518.0303 -3467.0088 3519.2705 -3466.7063 3519.3389 C-3466.7783 3518.9502 -3465.5359 3518.8599 -3466.3772 3518.3535 C-3465.9993 3517.8535 -3465.3088 3517.8496 -3464.8145 3517.5376 C-3464.8369 3517.6377 L-3464.2231 3517.5127 L-3464.3096 3517.6509 -3464.4951 3517.7695 -3464.5012 3518.0313 C-3463.6511 3517.3232 L-3464.1296 3517.7998 -3463.3545 3517.6543 -3463.1367 3517.8643 C-3463.0457 3517.46 -3462.7136 3517.1641 -3463.0322 3516.9326 C-3463.3904 3516.6392 -3463.2407 3517.1509 -3463.5664 3517.1816 C-3463.1052 3516.5449 L-3463.0657 3516.6064 L-3462.7881 3516.0854 L-3462.1599 3516.1221 -3463.0625 3517.2979 -3462.2576 3516.7876 C-3462.3623 3516.0767 L-3461.4304 3516.1816 -3460.2336 3516.9814 -3459.5752 3516.6533 C-3459.7568 3517.0576 -3459.8369 3517.708 -3459.5872 3518.0933 C-3459.8711 3517.9712 -3460.4417 3517.9966 -3460.8489 3518.063 C-3460.9272 3517.9385 -3460.3401 3517.2227 -3459.8977 3517.3765 C-3460.1121 3516.2119 -3461.0105 3518.0791 -3461.0625 3516.8984 C-3462.1897 3516.4873 -3461.9033 3518.0356 -3462.8601 3517.3433 C-3462.8733 3517.8701 -3463.1321 3517.6006 -3463.1824 3518.0654 C-3462.8992 3518.9253 -3461.9033 3518.0356 -3461.2825 3518.3369 C-3461.3433 3518.375 -3461.4656 3518.4541 -3461.4895 3518.5537 C-3461.0457 3518.708 -3460.8623 3518.5908 -3460.5522 3518.3955 C-3460.5913 3518.333 L-3460.0496 3517.8184 -3460.2561 3518.7261 -3459.9373 3518.958 C-3459.8137 3518.8799 -3459.3704 3519.0313 -3459.4417 3518.6455 C-3458.8643 3519.1465 L-3458.8921 3518.5576 L-3458.5664 3518.5225 -3458.4951 3518.9121 -3458.2 3518.5537 C-3458.1863 3518.0269 L-3458.9951 3517.8438 L-3458.5852 3517.6719 -3458.8809 3517.3398 -3458.4304 3517.2295 C-3458.9336 3517.8057 -3458.0745 3517.5215 -3458.0249 3518.0103 C-3457.6936 3517.7139 L-3457.7783 3517.8545 L-3457.5183 3518.125 -3457.4688 3517.6582 -3457.1653 3517.7271 C-3457.5232 3517.4336 -3457.7576 3517.063 -3458.2136 3517.4375 C-3457.8816 3517.1416 -3457.2231 3516.8135 -3457.0615 3516.7959 C-3456.7129 3516.5752 -3456.4695 3516.9766 -3456.1433 3517.0356 C-3456.7693 3517.2471 -3455.9241 3518.6328 -3457.1785 3518.2544 C-3457.1553 3518.1533 -3457.0537 3518.1763 -3457.0144 3518.2383 C-3457.1816 3517.5654 -3457.7664 3518.2803 -3458.0383 3518.5376 C-3457.9683 3518.9253 -3458.2527 3519.021 -3457.7705 3519.2349 C-3457.9287 3518.9873 -3457.3643 3518.3716 -3456.9055 3518.6895 C-3456.9863 3519.5181 L-3456.3184 3519.6157 L-3456.3809 3519.6553 L-3456.1296 3520.1895 -3455.6682 3519.5518 -3455.2083 3519.8662 C-3454.8762 3519.5703 -3453.6023 3519.8057 -3454.1504 3518.9385 C-3453.7375 3519.457 -3453.3752 3518.7959 -3452.9248 3518.6846 C-3453.4863 3518.3462 L-3452.8225 3517.7524 -3453.0137 3518.1353 -3452.4824 3517.1924 C-3452.4287 3517.4185 -3452.3103 3517.605 -3452.4182 3517.8438 C-3451.5264 3517.8877 -3450.2527 3518.1221 -3449.7295 3517.4429 C-3449.1008 3517.479 -3449.0022 3518.4561 -3448.1201 3518.0728 C-3447.9343 3517.9561 -3448.2649 3517.2979 -3447.6809 3517.5356 C-3447.6416 3517.5977 -3448.2432 3518.1504 -3447.5928 3518.0854 C-3447.1296 3517.4473 -3446.5049 3518.4375 -3445.9023 3517.8843 C-3445.5842 3518.1143 -3445.0322 3518.0269 -3445.1472 3518.5313 C-3445.6511 3518.417 -3446.3643 3518.5225 -3446.4729 3518.7646 C-3446.4033 3518.46 -3446.8313 3518.4692 -3446.46 3518.2349 C-3447.2217 3517.8535 -3446.9543 3518.5479 -3447.6377 3518.2871 C-3447.6848 3518.4893 -3447.2864 3518.8457 -3447.1399 3518.665 C-3447.1367 3519.3545 -3448.4873 3518.998 -3447.8799 3519.8247 C-3447.1497 3519.8843 -3446.9329 3518.4473 -3446.3 3519.1729 C-3446.5537 3519.5923 -3446.9504 3519.2373 -3447.2727 3519.9604 C-3446.7527 3520.2383 L-3446.3752 3519.7393 L-3446.3977 3519.8413 L-3445.4792 3520.4727 -3445.5481 3519.1318 -3444.7263 3518.7856 C-3445.2024 3518.3076 -3444.6162 3517.5908 -3444.9744 3517.2979 C-3444.4248 3517.21 -3444.0212 3517.3013 -3444.0176 3517.9912 C-3445.0457 3518.5537 -3444.0759 3518.7207 -3445.0264 3519.4077 C-3444.8704 3519.6553 -3445.2527 3520.417 -3444.6863 3520.4932 C-3444.0481 3520.0015 -3444.8772 3519.9185 -3444.2407 3519.6909 C-3444.2031 3519.7524 -3444.1641 3519.8145 -3444.1863 3519.916 C-3443.8936 3519.5576 -3443.8447 3520.0454 -3443.4905 3519.6494 C-3443.5745 3519.7876 L-3443.1377 3520.2061 -3443.0967 3519.3135 -3442.7207 3519.7695 C-3442.8711 3519.2573 -3442.4683 3519.3496 -3442.2351 3519.0303 C-3442.6162 3518.8369 -3442.8225 3518.1021 -3443.5745 3518.1431 C-3443.6653 3518.5479 -3443.6104 3518.7725 -3443.9192 3518.9683 C-3443.4304 3518.9185 L-3443.5359 3518.9854 -3443.6162 3519.0894 -3443.7129 3519.1709 C-3444.1824 3518.9604 L-3443.5872 3518.6719 -3443.8601 3518.2393 -3443.6072 3517.8184 C-3443.0625 3517.9951 -3443.1577 3517.707 -3442.8152 3517.8389 C-3442.8496 3518.4326 -3441.7649 3518.8535 -3441.1377 3519.2349 C-3441.2351 3519.2119 -3441.3608 3519.2271 -3441.4287 3519.2119 C-3441.8843 3519.5869 -3441.1152 3519.707 -3441.0984 3519.8701 C-3440.7664 3519.5732 L-3440.8289 3519.6143 -3440.9153 3519.7524 -3440.7737 3519.8369 C-3440.3242 3519.7261 -3440.3503 3519.1377 -3439.9016 3519.0264 C-3439.8679 3519.3535 -3440.2473 3519.8496 -3439.9683 3520.021 C-3439.8721 3520.3062 -3439.5657 3521.0654 -3438.9695 3520.7764 C-3438.9272 3520.6509 -3438.7727 3520.5811 -3438.5935 3520.5269 C-3438.6184 3520.5449 -3438.6497 3520.5576 -3438.6609 3520.5811 C-3438.2649 3520.9375 L-3438.6023 3521.4951 -3438.9473 3520.6743 -3439.2864 3521.2344 C-3439.3152 3521.7646 L-3439.5791 3521.7661 -3439.9375 3521.9956 -3440.1023 3522.2705 C-3439.7 3522.3604 -3439.6152 3522.2212 -3439.1653 3522.1108 C-3439.1023 3522.4463 -3439.4192 3522.6953 -3439.4648 3522.731 C-3439.3977 3522.4292 L-3439.9343 3521.9902 -3440.2 3522.9375 -3440.8679 3522.8389 C-3440.9688 3522.8174 -3440.9072 3522.7783 -3440.8848 3522.6772 C-3441.4255 3523.1909 -3441.9561 3522.4873 -3442.4817 3523.165 C-3442.3103 3522.8853 L-3442.6682 3523.1108 -3443.3679 3523.6328 -3444.0671 3524.1377 C-3444.0728 3524.3438 L-3443.9951 3524.4683 -3444.2576 3524.4604 -3444.3984 3524.3774 C-3444.3977 3524.374 L-3444.7483 3524.6265 -3445.0852 3524.8584 -3445.3608 3525.0313 C-3445.2727 3525.1592 -3445.1599 3525.2661 -3445.0305 3525.2959 C-3444.9209 3525.0537 -3444.2783 3525.2524 -3444.3665 3524.7017 C-3444.0696 3525.0342 -3443.5913 3524.5576 -3443.3733 3524.7661 C-3443.7705 3524.4126 -3443.0967 3524.2471 -3443.0271 3523.9429 C-3442.8936 3524.291 -3442.4385 3523.917 -3442.4905 3524.3843 C-3442.4121 3524.5059 -3442.6855 3524.0742 -3442.8545 3524.3545 C-3443.2705 3524.7896 -3442.0928 3524.7373 -3442.6111 3525.1509 C-3441.9519 3524.8232 -3441.0833 3524.9648 -3440.4033 3524.5352 C-3440.7839 3524.3438 L-3440.4817 3524.4126 -3439.7664 3524.3086 -3439.7129 3524.5342 C-3439.9375 3524.5889 -3440.2 3524.583 -3440.4873 3524.6768 C-3440.5012 3525.2041 -3439.7969 3524.6729 -3439.7649 3524.999 C-3438.9304 3524.1265 L-3439.2959 3524.0967 L-3439.0657 3523.7764 -3438.3015 3524.1631 -3437.7351 3524.2373 C-3438.0601 3524.959 -3438.5896 3524.2559 -3439.1855 3524.5454 C-3439.6184 3524.8188 -3438.9182 3525.2422 -3439.3279 3525.415 C-3439.2217 3525.583 -3438.9543 3525.563 -3438.8225 3525.3809 C-3438.6609 3525.5127 L-3439.0264 3526.1685 -3439.8457 3526.0225 -3440.3911 3526.5869 C-3440.3433 3526.5166 -3440.3015 3526.4424 -3440.2864 3526.3662 C-3440.7063 3526.1118 -3441.1328 3526.1221 -3441.5422 3526.2959 C-3441.3257 3526.5024 -3441.24 3526.3623 -3441.1162 3526.2856 C-3441.1008 3526.4478 -3441.4873 3526.5181 -3441.6335 3526.6982 C-3441.2527 3526.8896 -3441.5625 3527.0854 -3441.3215 3527.1934 C-3441.5696 3527.3496 -3441.7705 3527.3037 -3442.0728 3527.2349 C-3442.2295 3526.9873 -3441.9431 3526.8936 -3441.9751 3526.5688 C-3442.2864 3526.7646 -3442.4287 3525.9873 -3442.8843 3526.3623 C-3442.2783 3526.499 -3443.0439 3527.0688 -3443.2527 3527.2876 C-3443.1511 3527.3101 L-3443.3433 3527.6909 -3443.5063 3527.707 -3443.6392 3527.3584 C-3443.3911 3527.2017 -3443.1511 3527.3101 -3443.2217 3526.9229 C-3443.3855 3526.9395 -3443.5488 3526.9561 -3443.7344 3527.0728 C-3443.5657 3526.7935 L-3444.3799 3526.874 L-3444.5088 3527.2158 -3444.7241 3527.6982 -3444.8369 3528.2017 C-3445.0322 3527.8926 -3445.3042 3528.1504 -3445.4895 3528.2695 C-3445.4033 3528.1274 L-3445.7625 3527.8354 -3446.5615 3528.0791 -3446.6289 3528.3809 C-3446.8855 3528.1118 -3444.8152 3526.457 -3446.6289 3526.7373 C-3447.3184 3526.7393 -3447.0583 3527.7017 -3447.4519 3528.0356 C-3447.4297 3527.9375 -3447.4688 3527.874 V-3447.7705 3527.8037 -3447.8008 3528.1709 -3448.0488 3528.3262 C-3447.8679 3528.4727 -3447.6057 3528.479 -3447.5212 3528.3398 C-3447.6121 3528.7432 -3448.1497 3528.3037 -3448.3809 3528.6221 C-3448.0808 3528 -3448.9641 3528.3848 -3448.7312 3528.0654 C-3449.3313 3527.665 -3449.9729 3528.1572 -3450.2881 3528.6157 C-3450.6953 3527.8354 -3451.0022 3528.7192 -3451.6631 3528.3584 C-3451.5615 3528.3809 -3451.3772 3528.2646 -3451.2351 3528.3486 C-3450.8584 3527.8535 -3451.9199 3528.0889 -3451.3401 3527.6353 C-3451.4641 3527.7139 -3451.3489 3527.8984 -3451.2217 3527.8213 C-3450.9993 3527.7656 -3450.7898 3527.5479 -3450.8457 3527.3223 C-3451.3843 3526.8843 L-3451.1963 3526.7646 L-3452.0137 3526.1582 L-3452.0359 3526.2573 -3451.9592 3526.3809 -3451.9199 3526.4429 C-3452.8679 3526.1768 -3453.9519 3526.5142 -3454.7825 3526.4336 C-3454.9385 3527.8311 -3456.8271 3527.0313 -3457.4983 3527.8896 C-3457.3184 3527.4893 -3457.22 3526.7822 -3457.3313 3526.4912 C-3457.1816 3526.4326 -3456.8752 3525.8677 -3456.5359 3525.9854 C-3456.4817 3526.21 -3456.0625 3526.4639 -3456.3323 3526.7207 C-3455.3943 3526.5615 -3456.4592 3526.1079 -3456.1824 3525.5879 C-3457.2217 3525.7236 -3457.8313 3526.542 -3458.4873 3526.8711 C-3458.5039 3526.7061 L-3458.9993 3527.0181 L-3458.5945 3527.1108 -3458.6145 3527.9033 -3459.1362 3527.6265 C-3459.0728 3527.5869 L-3459.3704 3527.2544 -3459.9895 3527.6455 -3460.4543 3527.5942 C-3460.7695 3528.0518 L-3461.2351 3528 -3461.2551 3527.1475 -3461.4065 3526.6367 C-3462.1362 3526.5767 -3462.5576 3527.2759 -3463.0759 3527.6909 C-3463.3103 3527.3188 -3464.4033 3527.231 -3463.8242 3526.7803 C-3464.4824 3527.1079 -3464.3496 3529.1006 -3465.4785 3527.9966 C-3465.1855 3527.6377 L-3466.2649 3527.7124 -3467.8042 3528.4263 -3468.3015 3528.0488 C-3467.9033 3526.7598 -3469.6497 3526.7373 -3469.8416 3525.4736 c-3469.7881 3525.7622 -3470.1936 3525.8584 -3470.2527 3526.0127 C-3470.3416 3525.8643 -3470.4895 3525.7207 -3470.6465 3525.9814 C-3470.2256 3526.2349 -3470.9424 3527.2935 -3470.1377 3526.7832 C-3470.5449 3527.6494 -3471.0696 3528.3262 -3471.9617 3528.2832 C-3471.9482 3527.7559 L-3471.2424 3527.916 L-3471.3137 3527.5269 -3470.9504 3527.5566 -3470.8015 3527.3774 C-3472.1145 3527.0811 -3470.6296 3526.1431 -3471.9719 3526.2119 C-3472.1016 3526.5537 -3472.0176 3526.4126 -3472.3665 3526.5479 C-3472.2024 3526.5303 -3472.1729 3526.167 -3472.4373 3526.1597 C-3472.6912 3526.5811 L-3473.1599 3525.7017 -3471.9153 3526.0088 -3472.3152 3525.3911 C-3471.7969 3524.9771 -3470.8992 3524.7559 -3471.0664 3524.083 C-3471.9128 3523.8389 -3471.8279 3525.3433 -3472.7129 3525.0376 C-3472.8071 3524.7515 L-3473.1184 3524.9463 -3473.1687 3525.4102 -3473.3391 3525.6904 C-3473.3545 3525.5269 -3473.4336 3525.4053 -3473.6335 3525.3584 C-3474.1592 3526.0356 -3474.5081 3526.1685 -3474.9929 3526.9077 C-3473.7024 3526.3535 -3473.8896 3527.4229 -3472.5576 3526.9287 C-3472.7664 3527.1475 -3473.7041 3527.3076 -3473.7617 3528.0356 C-3473.7493 3527.5078 L-3474.1824 3527.7822 -3474.6152 3528.0537 -3475.1592 3527.8799 C-3474.8271 3527.583 L-3475.5481 3527.9502 -3476.0256 3526.7822 -3476.5945 3527.6597 C-3476.3936 3527.707 -3476.2305 3527.6909 -3476.1064 3527.6108 c-3476.4775 3527.8462 -3476.9431 3527.7935 -3477.3464 3527.7041 C-3478.1809 3528.5752 L-3478.1736 3528.3135 -3478.7024 3528.2979 -3478.4473 3527.8799 C-3479.0481 3527.4785 -3479.3313 3528.2646 -3479.6785 3528.3955 C-3480.2937 3527.8354 -3479.1455 3528.1455 -3479.0852 3527.417 C-3479.9329 3527.1729 -3480.8313 3527.3936 -3481.3096 3527.8677 C-3481.1367 3527.9741 -3481.0527 3528.0654 -3481.0615 3528.1934 C-3481.0872 3528.0269 -3481.4287 3528.0703 -3481.6191 3528.0654 C-3481.75 3528.4077 L-3482.0671 3528.1763 -3482.0225 3527.9741 -3481.7527 3527.7158 C-3482.0559 3527.6494 -3482.4172 3528.3086 -3482.7295 3527.8145 C-3482.2119 3527.4014 -3481.5522 3527.7617 -3481.2825 3527.5044 C-3482.3643 3527.8423 -3482.3711 3526.4604 -3483.7424 3526.8955 C-3483.7593 3526.731 -3483.5271 3526.4126 -3483.7913 3526.4077 C-3484.4033 3526.5342 -3483.9512 3527.1143 -3484.1423 3527.4951 C-3483.6711 3527.2822 -3483.4519 3527.4912 -3483.1785 3527.9238 C-3483.3042 3528.2017 L-3483.3232 3528.0576 -3483.6191 3528.0493 -3483.7063 3527.9102 C-3483.7825 3528.4771 L-3483.7473 3527.8496 -3484.2207 3527.3716 -3484.5928 3527.6064 C-3484.2168 3528.0615 -3484.3184 3528.0376 -3484.2161 3528.7524 C-3484.7393 3529.4292 -3484.8064 3528.0869 -3485.3928 3528.8037 C-3485.3489 3528.6021 -3484.8369 3528.4517 -3485.2793 3528.2979 C-3485.6455 3528.2705 -3485.5967 3528.7593 -3485.8423 3528.915 C-3485.5657 3528.3926 -3485.6367 3528.0044 -3485.3369 3527.3843 C-3484.6863 3527.3184 -3485.0745 3527.3911 -3484.4385 3527.1631 C-3484.9768 3526.7212 L-3484.4255 3526.6353 -3484.5759 3526.123 -3484.5305 3525.9229 C-3485.4719 3525.3911 -3485.24 3526.7168 -3485.8457 3526.5796 C-3486.1377 3526.9385 -3485.2783 3526.6553 -3485.7351 3527.0303 C-3486.3015 3526.9541 -3485.8643 3527.3716 -3486.5 3527.5977 C-3486.3936 3527.3584 L-3486.5879 3527.0479 -3486.78 3527.4307 -3487.0049 3527.4829 C-3487.2522 3527.6416 -3486.7249 3529.2998 -3487.7417 3529.3354 C-3487.6919 3529.1895 -3487.6736 3529.0967 -3487.6736 3529.0356 C-3486.6816 3524.6455 L-3487.7119 3524.6563 -3488.8992 3524.5342 -3490.0923 3524.2393 C-3490.3733 3523.3809 -3489.2407 3523.5313 -3489.3137 3523.1455 C-3488.7695 3523.3213 L-3488.8 3523.6851 -3489.9097 3523.4336 -3489.4182 3524.0767 C-3488.4573 3523.8145 -3488.0212 3524.2334 -3487.1096 3523.4829 C-3487.3928 3522.623 -3488.3103 3523.6353 -3488.9033 3522.9712 C-3488.6543 3523.0269 -3488.4441 3522.9326 -3488.24 3522.8096 C-3488.7969 3522.6997 -3489.3928 3522.5811 -3490.0264 3522.4478 C-3490.1687 3522.6563 L-3489.7417 3522.7524 -3489.4463 3522.8262 -3489.4082 3522.8574 C-3489.9744 3522.7822 -3490.4519 3523.2583 -3490.4895 3523.8877 C-3490.3889 3523.9102 L-3490.5935 3524.1064 L-3490.7263 3524.0664 -3490.8591 3524.0269 -3490.9912 3523.9854 Cf-3527.6936 3523.8369 m-3527.6592 3523.7764 -3527.6321 3523.7061 -3527.6121 3523.6182 c-3527.6328 3523.71 -3527.6096 3523.7695 -3527.6936 3523.8369 Cf0 D-3479.9033 3521.875 m-3480.6584 3521.7832 -3481.4199 3521.6118 -3482.1455 3521.5356 C-3480.8359 3522.7793 -3479.9153 3523.7207 -3482.1008 3523.6963 C-3482.2439 3523.7856 L-3481.9583 3523.9385 -3481.4656 3523.957 -3481.0022 3523.8672 C-3480.6272 3523.4263 -3479.4172 3521.8062 -3479.4304 3521.6631 C-3479.5632 3521.3145 -3479.7568 3521.6953 -3479.9983 3521.5889 C-3479.9033 3521.875 Lf-3479.3665 3523.958 m-3478.9385 3524.0967 -3479.0359 3523.8213 -3478.9695 3523.5732 C-3479.1201 3523.605 -3479.2705 3523.6377 -3479.4192 3523.667 C-3479.3623 3523.7295 -3479.3342 3523.8174 -3479.3665 3523.958 Cf1 D-3478.9951 3523.3252 m-3479.0432 3523.3188 -3479.0842 3523.3076 -3479.1057 3523.2744 C-3478.9951 3523.3252 Lf0 D-3487.3191 3523.0103 m-3487.3 3523.0044 -3487.2932 3522.999 -3487.2751 3522.9951 C-3487.3762 3522.9751 -3487.4775 3522.957 -3487.5833 3522.9375 C-3487.5422 3522.9771 -3487.4641 3523.0078 -3487.3191 3523.0103 Cf-3486.4504 3523.6182 m-3486.3489 3523.1641 L-3486.4431 3523.1475 -3486.5393 3523.1294 -3486.6377 3523.1118 C-3486.6052 3523.3174 -3486.5713 3523.4966 -3486.4504 3523.6182 Cf-3483.6584 3525.1118 m-3483.4824 3524.5664 -3482.8928 3524.542 -3482.8567 3523.9126 C-3482.8191 3523.7515 -3482.9431 3523.6895 -3483.0823 3523.6377 C-3483.2375 3523.623 -3483.4033 3523.6055 -3483.5791 3523.5854 C-3483.5852 3523.6768 -3483.6201 3523.7622 -3483.6785 3523.8438 C-3483.5049 3523.9229 -3483.3889 3524.0791 -3483.4592 3524.4648 C-3483.9055 3523.623 -3483.8591 3525.0654 -3484.3416 3524.8496 C-3484.4951 3525.2935 -3483.8047 3525.2896 -3483.6584 3525.1118 Cf1 D-3446.5752 3523.4727 m-3446.5615 3523.5269 -3446.5144 3523.6685 -3446.4482 3523.8438 C-3446.7881 3524.1553 L-3447.3943 3524.0181 -3447.8799 3523.1143 -3448.4255 3523.8916 C-3448.6809 3523.6963 -3448.8176 3523.2832 -3448.9482 3522.9429 C-3448.8232 3522.9683 -3448.7063 3523.0015 -3448.6089 3523.0537 C-3447.0791 3521.915 -3447.8113 3524.2544 -3446.5752 3523.4727 Cf0 D-3453.5449 3522.3643 m-3453.4824 3522.3252 -3453.46 3522.2227 Y-3454.8145 3523.3774 -3455.9297 3523.7119 -3456.6599 3523.667 C-3456.5183 3524.125 -3455.8633 3524.479 -3455.5522 3524.6685 C-3455.8279 3525.1904 L-3456 3524.7803 L-3456.4785 3525.2544 L-3456.3447 3525.605 -3455.9583 3525.5313 -3455.7 3525.8013 C-3455.6775 3525.7017 -3454.8503 3525.0933 -3454.6191 3524.7725 C-3455.28 3524.4121 L-3455.1016 3524.5576 -3454.2249 3524.4375 -3453.8772 3524.3037 C-3453.8704 3524.042 -3454.4695 3523.6392 -3454.5449 3524.207 C-3454.6162 3523.8188 -3453.9255 3523.8145 -3454.3623 3523.3984 C-3453.8447 3522.9854 -3453.0212 3523.3311 -3452.6392 3523.5225 C-3452.5745 3524.1753 L-3452.1553 3524.4287 -3452.2913 3523.3896 -3451.7932 3523.7661 C-3452.4055 3523.8936 -3451.6897 3524.4814 -3452.1768 3524.5303 C-3452.0212 3524.7764 -3452.1736 3525.2192 -3451.6855 3525.1709 C-3451.2793 3524.3076 -3451.1711 3525.7119 -3450.7871 3524.9502 C-3450.5305 3525.2192 -3451.0632 3525.4692 -3450.5583 3525.5854 C-3449.9792 3525.1318 -3450.0127 3524.8062 -3449.9768 3524.1782 C-3450.5183 3524.0024 -3450.5852 3524.9951 -3451.0281 3524.8423 C-3450.1472 3523.7661 L-3450.3096 3523.6143 -3450.4297 3523.5977 -3450.5305 3523.6416 C-3450.3535 3523.5791 -3450.2031 3523.4199 -3450.0745 3523.1997 c-3450.0012 3523.0767 -3449.9336 3522.9712 -3449.8711 3522.8809 C-3450.3704 3522.875 -3450.8137 3522.8599 -3450.8921 3522.5923 C-3450.8232 3522.2876 L-3451 3522.0078 -3451.2881 3522.2271 -3451.4209 3522.4502 C-3451.8679 3522.4829 -3452.3145 3522.9077 -3452.4121 3522.5132 C-3452.2424 3522.2344 L-3452.7922 3522.3223 -3452.8535 3522.3604 -3453.5449 3522.3643 Cf-3471.5625 3521.6709 m-3471.2295 3522.7876 -3470.8623 3523.7744 -3469.3081 3523.5791 C-3469.4304 3523.6563 L-3468.6472 3524.3574 -3467.9033 3522.7295 -3466.9504 3523.5078 C-3467.4128 3523.9287 -3467.3879 3523.8896 -3467.8984 3524.8535 C-3467.4023 3524.5376 L-3467.5398 3525.1455 -3467.0449 3524.8311 -3466.6809 3524.8599 C-3467.0022 3525.583 L-3467.2207 3525.375 -3467.7871 3525.2998 -3467.7705 3525.4648 C-3467.6465 3525.3848 -3468.5183 3524.5518 -3468.9919 3524.7622 C-3468.9431 3525.2524 -3467.9431 3525.0537 -3468.3896 3525.8545 C-3467.9961 3525.5181 -3467.9473 3526.0068 -3467.5359 3525.8354 C-3467.9304 3526.1709 -3467.6335 3526.5024 -3467.9272 3526.8599 C-3467.2527 3526.6934 L-3467.2351 3526.8564 -3468.2351 3527.0557 -3467.6824 3527.6582 C-3467.4121 3527.4014 -3466.6904 3527.7236 -3466.6775 3527.1963 C-3466.6609 3527.3584 L-3466.1553 3527.4727 -3466.4385 3526.6118 -3465.8176 3526.9126 C-3465.8103 3526.6475 -3465.9287 3526.4639 -3466.1511 3526.5181 C-3466.3391 3526.6353 -3466.3679 3526.999 -3466.7551 3527.0728 C-3466.9287 3526.6597 -3466.2881 3527.124 -3466.5569 3526.4263 c-3466.6904 3526.0791 -3467.5791 3526.7261 -3467.2959 3525.9424 C-3466.7913 3526.0557 L-3466.7783 3525.5269 -3466.4128 3525.5576 -3466.4231 3525.1318 C-3466.1145 3524.9375 -3465.8232 3525.5313 -3465.5081 3525.0728 C-3465.3772 3524.731 -3465.6057 3524.0967 -3465.0842 3524.373 C-3464.6768 3525.1543 -3463.4761 3525.0024 -3463.0264 3524.8896 C-3462.6328 3524.5537 L-3462.6663 3524.2295 -3463.3848 3524.5977 -3463.1321 3524.1768 C-3462.5183 3524.0493 L-3462.5657 3524.2524 L-3462.3623 3524.2979 -3462.1543 3524.0796 -3461.9688 3523.9639 C-3462.1599 3524.3438 -3462.6023 3524.1909 -3462.5144 3524.7412 C-3462.2263 3524.8496 -3462.1824 3525.0537 -3461.9172 3524.9478 C-3461.9751 3524.9873 -3462.0249 3525.041 -3462.0176 3525.1182 C-3461.4343 3525.3564 -3461.4543 3524.5024 -3461.3081 3524.3232 c-3460.7217 3523.6084 -3461.8992 3523.6597 -3461.8242 3523.0933 C-3460.1121 3522.791 L-3460.2583 3522.9692 -3460.4055 3523.1475 -3460.3503 3523.373 C-3459.9304 3523.6274 -3460.3408 3523.7998 -3459.7512 3523.7734 C-3459.7932 3523.0215 -3459.0088 3523.3047 -3458.5923 3522.8701 C-3458.3977 3523.1782 -3458.3577 3523.2393 -3458.7832 3523.249 C-3458.7344 3523.7373 -3458.1631 3523.5493 -3457.96 3523.5942 C-3457.8423 3523.4727 -3457.6416 3523.4019 -3457.5144 3523.2935 C-3457.6848 3523.0493 -3457.6121 3522.7437 -3457.2432 3522.5356 C-3457.2217 3522.4336 L-3457.8264 3522.2998 -3458.7664 3521.7661 -3459.1455 3522.2661 C-3459.0383 3522.0244 L-3459.7383 3521.6021 -3460.5615 3522.9014 -3460.8843 3521.979 C-3460.8545 3521.6143 -3461.0249 3521.8955 -3461.0127 3521.3677 C-3461.5281 3521.7803 L-3461.4209 3521.541 L-3462.2976 3521.6597 L-3462.2744 3521.5615 L-3462.6912 3522.0391 -3463.0176 3522.4287 -3463.2783 3522.7471 C-3463.2793 3522.9771 -3463.2522 3523.0479 -3463.3911 3523.2173 C-3463.5305 3523.3311 -3463.6362 3523.3486 -3463.7305 3523.3184 C-3463.7312 3523.3188 -3463.7312 3523.3188 -3463.7312 3523.3213 C-3463.7312 3523.3188 -3463.7312 3523.3188 -3463.7312 3523.3184 C-3463.9463 3523.2515 -3464.0896 3522.9209 -3464.3545 3522.7856 C-3463.5393 3522.7295 L-3463.4729 3522.3389 -3463.5422 3521.9336 -3463.9417 3521.6597 C-3463.7783 3521.6455 -3463.71 3521.3408 -3463.9121 3521.2959 C-3463.9343 3521.3975 -3464.4463 3521.5454 -3464.2512 3521.8564 C-3465.0256 3521.999 -3466.2793 3520.9736 -3467.4551 3521.7158 C-3466.6104 3521.2695 -3468.1321 3521.1924 -3467.1943 3521.0313 C-3467.8489 3520.4072 -3467.7576 3521.6475 -3468.4248 3521.5493 C-3468.4817 3521.3252 -3468.0615 3521.5791 -3467.9082 3521.1353 C-3469.0176 3520.8853 -3469.78 3522.1455 -3470.8533 3521.9561 C-3470.8992 3521.4688 L-3471.1023 3521.5313 -3471.3279 3521.6006 -3471.5625 3521.6709 Cf-3473.6855 3522.2783 m-3473.8921 3522.333 -3474.1016 3522.3896 -3474.3145 3522.4463 C-3474.2937 3522.4541 -3474.2744 3522.4541 -3474.2527 3522.4604 C-3474.8733 3522.8535 L-3474.4919 3523.0435 -3474.2407 3523.5791 -3474.7744 3523.8286 C-3474.7295 3523.6274 -3474.8855 3523.3799 -3474.7 3523.2622 C-3475.0576 3522.9692 -3475.8423 3522.6865 -3475.6377 3523.4229 C-3474.9504 3522.7271 -3475.4775 3524.3604 -3474.9375 3523.8438 C-3475.2273 3524.3232 -3475.5144 3524.1079 -3475.7881 3524.3223 C-3475.5032 3523.9209 -3475.8545 3523.4126 -3476.2825 3523.2212 C-3476.4688 3523.3398 -3476.9729 3523.2261 -3477.2825 3523.4209 C-3477.1721 3523.8711 -3477.4417 3524.1289 -3476.9373 3524.2422 C-3477.1223 3524.3604 -3477.4087 3524.4541 -3477.7295 3524.2227 C-3477.6023 3524.1455 -3477.3799 3524.0894 -3477.3953 3523.9272 C-3477.6023 3523.5127 -3477.8447 3523.5313 -3477.9785 3523.3545 C-3478.0852 3523.3799 -3478.1929 3523.4019 -3478.2976 3523.4263 C-3478.2664 3523.4648 -3478.2393 3523.5166 -3478.22 3523.5811 C-3478.5745 3523.9785 L-3478.1023 3523.7661 -3478.3562 3524.1865 -3478.3623 3524.4502 c-3478.3496 3523.9229 -3478.6663 3524.3809 -3478.8279 3524.3984 C-3478.4768 3524.9561 L-3478.6465 3525.2349 -3479.0759 3524.5537 -3478.9873 3525.105 C-3478.2424 3525.3262 -3477.9561 3525.231 -3477.2825 3525.0654 C-3477.5559 3524.6328 L-3476.7959 3524.3267 -3477.0872 3525.375 -3476.2344 3525.3545 C-3475.8799 3524.959 -3474.9519 3525.3267 -3474.9343 3524.5352 C-3475.0413 3524.7764 -3474.4033 3525.2393 -3474.1111 3524.8809 C-3473.7881 3524.1572 -3472.8113 3524.0596 -3473.1072 3523.7295 C-3473.3711 3523.7207 -3473.7263 3524.1182 -3473.9385 3523.6475 C-3473.4265 3523.4966 L-3473.7625 3523.1021 L-3473.5889 3523.2437 -3473.6057 3522.8584 -3473.6855 3522.2783 Cf1 D-3485.1455 3517.8389 m-3485.1511 3517.8354 -3485.1584 3517.833 -3485.1653 3517.8286 C-3485.1577 3517.8311 -3485.1504 3517.8311 -3485.1433 3517.8311 C-3485.1455 3517.8389 Lf*U0 D-3438.9968 3521.8311 m-3438.8496 3521.6509 -3438.4856 3521.6807 -3438.5569 3521.2935 C-3438.5481 3521.7192 -3439.2073 3521.3584 -3438.9968 3521.8311 Cf-3438.5615 3522.248 m-3438.5359 3522.1465 -3438.5537 3521.9829 -3438.3904 3521.9683 C-3438.8401 3522.0767 L-3438.5615 3522.248 Lf-3438.1052 3525.1597 m-3437.8733 3524.8423 -3437.7263 3524.6631 -3437.3623 3524.6919 C-3437.2256 3525.731 -3437.9583 3524.9824 -3438.1233 3525.9517 C-3437.4561 3526.0493 -3437.2512 3525.1416 -3436.7024 3525.0537 C-3436.9744 3524.6201 -3438.0852 3524.3701 -3438.1052 3525.1597 Cf-3438.4016 3526.4736 m-3438.0305 3526.2393 L-3438.0671 3526.1782 L-3438.4385 3526.4126 L-3438.4016 3526.4736 Lf-3446.4385 3517.4429 m-3446.4719 3517.1182 -3446.7031 3517.4385 -3446.8271 3517.5166 C-3446.7263 3517.5376 -3446.5852 3517.623 -3446.4385 3517.4429 Cf-3519.3503 3517.105 m-3522.1809 3517.4185 L-3521.3665 3517.3369 -3520.6145 3517.2959 -3519.3503 3517.105 Cf-3455.8313 3519.5664 m-3455.0713 3519.2603 -3454.7336 3518.6997 -3453.9592 3518.5576 C-3454.9775 3517.9033 -3455.3042 3519.5796 -3456.1592 3518.9092 C-3455.8313 3519.5664 Lf-3455.5632 3516.9751 m-3455.4373 3517.5869 -3456.1497 3517.6919 -3456.0393 3518.1406 C-3455.5271 3517.9912 -3455.8008 3517.5576 -3455.3359 3517.6104 C-3455.5632 3516.9751 Lf-3452.1191 3527.0889 m-3452.3496 3527.4072 L-3452.1641 3527.291 L-3452.1191 3527.0889 Lf-3459.0271 3517.5181 m-3458.9431 3517.3799 L-3459.3242 3517.1865 L-3459.0271 3517.5181 Lf-3458.8591 3517.2393 m-3458.9431 3517.3799 L-3458.9431 3517.3799 L-3458.8591 3517.2393 Lf-3452.4153 3528.4014 m-3452.0728 3528.5313 L-3451.9033 3528.2515 L-3452.4153 3528.4014 Lf-3455.4385 3525.1187 m-3455.1321 3524.9229 L-3455.1929 3524.9604 -3455.6121 3524.709 -3455.4385 3525.1187 Cf-3461.3545 3517.2583 m-3461.7273 3517.4932 L-3461.6892 3517.5537 L-3461.3176 3517.3188 L-3461.3545 3517.2583 Lf-3457.8369 3526.8057 m-3457.6252 3527.2759 -3458.4482 3526.9326 -3458.0127 3527.3486 C-3457.6252 3527.2759 -3457.7825 3527.0303 -3457.8369 3526.8057 Cf-3462.3352 3523.6157 m-3462.3855 3523.6157 -3462.4385 3523.6328 -3462.4895 3523.6851 C-3462.4287 3523.665 -3462.3777 3523.6406 -3462.3352 3523.6157 Cf-3462.3352 3523.6157 m-3462.1729 3523.6157 -3462.0105 3523.7959 -3461.8992 3523.6597 C-3462.1016 3523.4473 -3462.1753 3523.5269 -3462.3352 3523.6157 Cf-3464.1953 3523.7256 m-3464.0481 3523.7593 L-3464.1985 3523.9912 -3464.1272 3523.957 -3463.9929 3523.7705 C-3463.8369 3523.7544 -3463.8457 3523.6055 -3463.8271 3523.5039 C-3463.7959 3523.4473 -3463.7649 3523.3853 -3463.7312 3523.3213 C-3463.7793 3523.3809 -3463.8225 3523.4404 -3463.8591 3523.4912 C-3464.1008 3523.4873 -3464.2483 3523.5103 -3464.1953 3523.7256 Cf-3471.1052 3515.7998 m-3470.5615 3515.9751 -3470.4209 3516.0596 -3470.4504 3516.4248 C-3469.9343 3516.541 -3470.0144 3515.9126 -3469.7031 3515.7661 C-3470.2871 3515.8369 -3470.4065 3515.6685 -3471.1052 3515.7998 Cf-3469.7031 3515.7661 m-3469.6377 3515.7593 -3469.5752 3515.7515 -3469.4993 3515.7373 C-3469.5842 3515.7261 -3469.6472 3515.7412 -3469.7031 3515.7661 Cf-3462.0212 3527.7173 m-3462.3591 3528.2759 L-3462.2351 3528.1982 L-3462.0212 3527.7173 Lf-3471.9121 3515.6157 m-3471.8113 3515.6392 -3471.6497 3515.623 -3471.5703 3515.748 C-3471.5413 3515.3809 -3472.0127 3515.5933 -3471.9121 3515.6157 cf-3469.8152 3522.7744 m-3469.76 3522.998 -3469.4121 3522.8643 -3469.2705 3522.9502 C-3469.4736 3522.9033 -3469.6392 3522.23 -3469.8152 3522.7744 Cf-3473.4719 3517.1221 m-3473.3711 3517.1455 -3473.2161 3517.3911 -3473.2832 3517.6934 C-3473.1367 3517.5142 -3472.9385 3516.8701 -3473.4719 3517.1221 Cf-3470.8088 3522.709 m-3470.7312 3522.833 L-3470.3591 3522.5977 L-3470.8088 3522.709 Lf-3469.4817 3528.1006 m-3469.0632 3527.665 -3470.1455 3527.0493 -3469.4248 3526.6807 C-3470.3545 3526.2246 -3469.3535 3527.2979 -3470.0393 3527.2271 C-3469.6377 3527.374 -3469.4409 3527.9253 -3469.4817 3528.1006 Cf-3470.0393 3527.2271 m-3470.0977 3527.2041 -3470.1609 3527.1909 -3470.2295 3527.1895 C-3470.1536 3527.21 -3470.0923 3527.2212 -3470.0393 3527.2271 Cf-3475.9287 3524.4692 m-3475.8679 3524.4238 -3475.8264 3524.374 -3475.7881 3524.3223 C-3475.8359 3524.3584 -3475.8816 3524.4033 -3475.9287 3524.4692 Cf-3472.2295 3527.5869 m-3471.6023 3526.9326 L-3472.0212 3527.3677 -3473.0752 3527.3413 -3473.0095 3527.9927 C-3472.6682 3528.125 -3472.2576 3527.9517 -3472.0889 3527.6709 C-3472.2295 3527.5869 Lf-3479.4287 3515.7764 m-3479.1577 3515.5181 L-3479.4961 3515.4424 L-3479.3992 3515.54 -3479.5745 3516.0181 -3479.4287 3515.7764 Cf-3479.5615 3515.4287 m-3479.4961 3515.4424 L-3479.5105 3515.4263 -3479.5313 3515.4199 -3479.5615 3515.4287 Cf-3474.7424 3524.1543 m-3474.5398 3524.1997 -3474.3777 3524.1816 -3474.1929 3524.0664 C-3474.2695 3523.9429 -3474.7744 3523.8286 -3474.7424 3524.1543 Cf-3481.3369 3516.7236 m-3480.8896 3516.6118 L-3481.3777 3516.6597 L-3481.3369 3516.7236 Lf-3483.4241 3515.6157 m-3483.5012 3515.4932 L-3483.8721 3515.7271 L-3483.7937 3515.8496 L-3483.4241 3515.6157 Lf-3480.6943 3528.4326 m-3480.3911 3528.5024 -3480.1543 3527.917 -3480.2336 3527.7935 C-3480.8215 3527.8188 L-3480.6721 3528.3311 -3480.6584 3527.8037 -3480.3176 3527.9336 C-3480.6943 3528.4326 Lf-3498.9153 3516.5732 m-3498.7839 3516.231 -3498.1409 3516.4292 -3498.1072 3516.7544 C-3498.1936 3516.8955 -3498.5422 3517.0303 -3498.3232 3517.2373 C-3497.8145 3516.3975 L-3497.1377 3516.9209 -3498.3289 3517.5015 -3498.6631 3517.7979 C-3497.9736 3517.9063 -3497.7693 3517.3545 -3497.0359 3517.3574 C-3497.2522 3517.2822 -3497.3889 3517.0728 -3497.5032 3516.8926 C-3497.5281 3516.3013 -3496.8447 3516.563 -3496.3562 3516.5166 C-3496.6672 3516.2598 -3496.4873 3516.0435 -3496.2607 3515.8115 C-3496.22 3515.7935 -3496.1929 3515.7593 -3496.1736 3515.7192 C-3496.1472 3515.6919 -3496.1223 3515.665 -3496.0967 3515.6367 C-3496.1553 3515.6377 L-3496.1511 3515.5713 -3496.1641 3515.4912 -3496.2063 3515.3809 C-3496.6162 3515.5537 -3496.9297 3515.0596 -3497.1936 3515.0518 C-3496.9329 3516.0132 -3498.0923 3515.2744 -3498.4241 3515.5703 C-3498.8071 3515.665 L-3498.9504 3515.667 L-3498.9792 3515.5615 -3498.9385 3515.4292 -3498.72 3515.2393 C-3498.9023 3515.4287 -3499.5105 3515.3623 -3499.4543 3515.6709 C-3500.8423 3515.6846 L-3500.8855 3515.6455 -3500.9287 3515.5967 -3500.9607 3515.5269 C-3501.0088 3515.5879 -3501.0168 3515.6377 -3501.0105 3515.6865 C-3507.0576 3515.748 L-3506.7593 3515.8232 -3506.5012 3516.0435 -3506.1936 3516.1494 C-3506.6553 3516.7876 -3505.6892 3516.2646 -3505.8247 3516.8677 C-3506.0322 3517.0869 -3506.3359 3517.0181 -3506.5168 3516.8716 C-3506.5842 3517.1763 -3506.3264 3517.4463 -3506.3562 3517.8101 C-3505.5935 3518.1934 -3505.4768 3516.7349 -3504.7312 3516.957 C-3504.7607 3517.3223 -3504.9912 3517.6416 -3504.5032 3517.5923 C-3504.6272 3517.6709 L-3503.8457 3517.2622 -3504.0183 3518.4966 -3503.5264 3517.4951 C-3503.5393 3518.0225 L-3503.1848 3517.625 -3502.4951 3517.6221 -3502.1064 3517.5493 C-3502.1296 3517.6509 L-3501.0393 3517.0479 -3501.5176 3517.5225 -3500.2932 3517.2705 C-3500.8567 3517.8853 L-3500.4343 3518.1396 -3500.3391 3517.4712 -3500.0359 3517.54 C-3500.0576 3517.6416 -3499.9873 3518.0269 -3500.2737 3518.123 C-3498.7881 3517.1851 L-3498.4336 3516.7876 -3498.8601 3516.7979 -3498.9153 3516.5732 Cf-3497.0359 3517.3574 m-3496.9573 3517.3853 -3496.8679 3517.3975 -3496.7625 3517.3774 C-3496.8643 3517.3604 -3496.9519 3517.3574 -3497.0359 3517.3574 Cf-3507.4824 3515.7524 m-3507.0576 3515.748 L-3507.1892 3515.7158 -3507.3264 3515.7061 -3507.4824 3515.7524 Cf-3494.9065 3516.2061 m-3495.1641 3515.9336 -3494.7136 3515.8247 -3494.6687 3515.6221 C-3495.5913 3515.6318 L-3495.5872 3515.8354 -3495.6785 3516.0625 -3495.6599 3516.248 C-3494.9065 3516.2061 Lf-3495.8584 3515.249 m-3495.8896 3515.3896 -3495.9873 3515.5166 -3496.0967 3515.6367 C-3495.5913 3515.6318 L-3495.5945 3515.479 -3495.6511 3515.3408 -3495.8584 3515.249 Cf-3495.7607 3526.0894 m-3495.9241 3526.1079 L-3496.1711 3526.2646 L-3495.7607 3526.0894 Lf-3498.3152 3525.1963 m-3498.1201 3525.5044 -3497.75 3525.2705 -3497.6262 3525.1924 C-3498.0527 3525.2017 -3497.8679 3525.0854 -3498.3152 3525.1963 Cf-3497.7881 3528.4966 m-3498.1992 3528.6709 L-3498.1609 3528.731 L-3497.7881 3528.4966 Lf-3510.6223 3517.8281 m-3510.6897 3517.8398 -3510.7551 3517.8486 -3510.8232 3517.8623 C-3510.7312 3517.8643 -3510.6711 3517.8496 -3510.6223 3517.8281 Cf-3507.0945 3517.3252 m-3508.0752 3516.7334 -3506.4519 3516.833 -3506.76 3516.0752 C-3507.2937 3516.3262 L-3507.2483 3516.123 L-3507.8992 3516.1895 L-3507.7656 3516.5376 -3507.6653 3516.5591 -3507.6943 3516.9248 C-3508.5632 3516.7822 -3507.9683 3516.4912 -3508.6057 3516.0303 C-3509.5769 3516.0967 L-3509.4983 3515.9873 L-3509.5801 3515.9951 -3509.6162 3516.041 -3509.6443 3516.1006 C-3512.9172 3516.3281 L-3513.5127 3516.6182 -3512.5879 3516.9854 -3513.0271 3517.5225 C-3512.3369 3517.521 -3511.3113 3517.9102 -3511.2527 3517.1816 C-3511.2759 3517.2822 -3511.3215 3517.4829 -3511.1816 3517.5688 C-3510.7825 3516.9692 L-3511.1631 3516.7783 L-3510.7617 3516.1807 -3509.4656 3516.3135 -3509.2312 3516.6846 C-3509.9683 3516.8887 -3509.5984 3517.6084 -3510.6252 3517.2173 C-3510.5791 3517.4019 -3510.3911 3517.7271 -3510.6223 3517.8281 C-3509.4192 3517.6157 -3508.3408 3517.9478 -3507.0945 3517.3252 Cf-3519.1631 3517.6763 m-3519.1536 3517.6104 L-3519.1753 3517.6455 -3519.1824 3517.6719 -3519.1631 3517.6763 Cf-3518.7593 3517.7661 m-3518.1729 3517.0518 L-3519.0872 3517.1094 L-3519.1536 3517.6104 L-3519.0728 3517.4829 -3518.7522 3517.2295 -3518.6279 3517.4253 C-3518.7593 3517.7661 Lf-3517.4919 3516.6201 m-3517.9641 3516.833 -3517.9385 3517.4229 -3517.6809 3517.6919 C-3518.1145 3517.9648 -3517.9097 3517.0576 -3518.2083 3517.6807 C-3518.1985 3518.1064 -3517.6641 3517.8564 -3517.5413 3517.7783 C-3517.4919 3516.6201 Lf-3514.0081 3516.9307 m-3514.1409 3517.1753 L-3513.8137 3517.2393 L-3514.0081 3516.9307 Lf-3514.1409 3517.1753 m-3514.4656 3517.1094 L-3514.4431 3517.291 -3514.4209 3517.4683 -3514.3679 3517.5923 C-3514.1409 3517.1753 Lf-3515.3176 3516.9395 m-3515.4551 3516.8955 -3515.6072 3516.8623 -3515.7922 3516.8462 C-3515.3176 3516.9395 Lf-3514.9463 3517.0894 m-3514.9573 3517.0127 L-3515.3176 3516.9395 L-3515.1848 3516.9854 -3515.0657 3517.0356 -3514.9463 3517.0894 Cf-3514.4656 3517.1094 m-3514.5183 3516.6963 -3514.5801 3516.2622 -3515.0496 3516.3774 C-3514.9573 3517.0127 L-3514.4656 3517.1094 Lf-3500.7783 3527.874 m-3501.1497 3528.1079 L-3501.1104 3528.1719 L-3500.7393 3527.9375 L-3500.7783 3527.874 Lf-3502.9209 3527.4966 m-3503.0127 3527.5688 -3503.0823 3527.6455 -3503.1455 3527.7236 C-3503.0488 3527.6782 -3502.9719 3527.6094 -3502.9209 3527.4966 Cf-3504.5137 3530.3188 m-3504.9504 3529.9033 -3503.9111 3529.7695 -3504.72 3529.5854 C-3504.7913 3529.1982 -3504.4121 3528.6992 -3504.0313 3528.8916 C-3504.0615 3529.2559 -3504.4023 3529.125 -3504.1682 3529.4966 C-3503.9153 3529.0752 -3503.8191 3529.3623 -3503.9072 3528.8135 C-3503.4817 3528.4712 -3503.4343 3528.0811 -3503.1455 3527.7236 C-3503.6599 3527.9648 -3504.74 3527.4019 -3505.3928 3528.1064 C-3505.7527 3528.7661 -3505.5344 3529.667 -3505.5359 3530.6201 C-3505.4817 3530.8438 -3504.5488 3530.9502 -3504.5137 3530.3188 Cf-3503.8264 3531.2705 m-3503.6243 3531.3174 -3503.5625 3531.2793 -3503.4385 3531.1997 C-3503.4719 3530.874 -3503.6631 3531.2559 -3503.8264 3531.2705 Cf-3508.4719 3524.0942 m-3508.5105 3524.2295 -3508.8762 3524.3975 -3508.7976 3524.6318 C-3508.2432 3524.4604 L-3508.3733 3524.4385 -3508.4192 3524.2725 -3508.4719 3524.0942 Cf-3508 3524.3877 m-3508.2432 3524.4604 L-3508.1824 3524.4727 -3508.1072 3524.4541 -3508 3524.3877 Cf-3508.4983 3524.0093 m-3508.4895 3524.0376 -3508.4817 3524.0664 -3508.4719 3524.0942 C-3508.4641 3524.0654 -3508.4656 3524.0356 -3508.4983 3524.0093 Cf-3516.6631 3516.7017 m-3516.6553 3516.4404 -3516.9023 3516.5967 -3517.0264 3516.6743 C-3516.9255 3516.6963 -3516.7839 3516.7822 -3516.6631 3516.7017 Cf-3525.9641 3517.731 m-3526.1824 3517.5225 L-3526.1052 3517.6475 -3526.0657 3517.709 -3525.9641 3517.731 Cf-3529.3279 3524.8765 m-3529.3342 3524.9272 -3529.3503 3524.9692 -3529.3721 3525.0093 C-3529.3503 3524.9771 -3529.3352 3524.9336 -3529.3279 3524.8765 cf-3529.3721 3525.0093 m-3529.5212 3525.2271 -3529.9817 3524.8887 -3530.1472 3525.2192 C-3530.1262 3525.1187 L-3530.4343 3525.3145 L-3530.1455 3525.2856 -3529.5393 3525.3267 -3529.3721 3525.0093 CfUUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 40)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7401.4521 7402.5977 m-7009.6909 7402.5977 L-7009.6909 7310.9082 L-7401.4521 7310.9082 L-7401.4521 7402.5977 Ln0 O0 0 0 1 k1 XR-7014.3535 7344.9209 m-7016.1113 7344.9209 -7135.7817 7347.0918 -7211.6519 7348.4717 C-7232.4663 7347.5352 -7253.2529 7346.2227 -7274.0547 7344.502 C-7276.5327 7344.1514 -7279.3472 7343.7949 -7280.8584 7343.6006 c-7281.7114 7343.4863 -7282.5732 7343.3857 -7283.4375 7343.293 C-7282.9829 7343.0605 -7282.54 7342.7998 -7282.1167 7342.4941 C-7281.25 7341.7324 -7280.3955 7340.832 -7279.8735 7339.4541 C-7279.8979 7339.1689 -7279.6997 7338.8193 -7279.6523 7338.5293 c-7279.5532 7337.9121 -7279.6382 7337.1631 -7279.7319 7336.627 c-7279.7939 7336.2725 -7279.9551 7336.0254 -7280.0259 7335.7314 c-7280.0488 7335.6348 -7279.9785 7335.5762 -7280.0059 7335.502 c-7280.1396 7335.1484 -7280.5313 7334.5518 -7280.7539 7334.2266 c-7280.8579 7334.0762 -7280.9873 7333.9775 -7281.1035 7333.8193 c-7281.1196 7333.7969 -7281.0669 7333.7354 -7281.0928 7333.7061 c-7281.6484 7333.0664 -7282.4312 7332.541 -7283.3955 7332.0762 c-7283.4546 7332.0508 -7283.4639 7332.1445 -7283.5366 7332.0869 C-7283.8213 7331.9658 -7284.1143 7331.8535 -7284.3945 7331.791 c-7285.8965 7331.4629 -7287.7163 7331.8477 -7288.8027 7332.6328 c-7289.7998 7333.3555 -7290.5308 7334.8623 -7290.4678 7336.0742 c-7290.4126 7337.1094 -7289.6665 7338.2578 -7288.4458 7339.0352 c-7287.3604 7339.7295 -7286.0479 7339.9834 -7285.2373 7339.3594 C-7285.6499 7339.2295 -7285.9688 7339.0332 -7286.0811 7338.7529 C-7286.0908 7338.4766 -7286.0967 7338.1992 -7285.8755 7337.8594 C-7285.4517 7337.4863 -7284.7925 7337.248 -7284.1235 7337.7158 c-7283.1846 7338.3701 -7283.0728 7339.7891 -7284.0342 7340.5361 C-7284.3086 7340.6406 -7284.5586 7340.8789 -7284.75 7340.9834 c-7285.1826 7341.2188 -7285.5586 7341.3857 -7285.9751 7341.543 c-7287.0938 7341.959 -7288.4839 7342.418 -7289.5327 7342.5977 c-7289.7114 7342.6289 -7289.8989 7342.6475 -7290.0806 7342.6738 C-7293.4038 7342.3789 -7296.54 7342.0693 -7299.1416 7341.5264 C-7299.1138 7341.5234 -7299.0908 7341.5244 -7299.0586 7341.5205 c-7298.2378 7341.4199 -7297.6309 7341.2529 -7296.9043 7341.0137 c-7296.6328 7340.9238 -7296.3184 7340.9121 -7296.0825 7340.8154 c-7295.9985 7340.7852 -7295.9409 7340.6602 -7295.8472 7340.6133 c-7295.5371 7340.4609 -7295.2129 7340.3662 -7294.8999 7340.1602 c-7293.9097 7339.5059 -7292.8774 7338.3359 -7292.7617 7336.8682 C-7292.9463 7335.8262 -7293.3643 7334.8525 -7294.5938 7334.0781 c-7294.7217 7333.9961 -7294.8662 7333.96 -7294.9995 7333.8828 C-7296.8516 7333.2168 -7298.5913 7334.3135 -7298.8066 7336.2061 C-7298.7119 7336.375 -7298.6499 7336.5527 -7298.6616 7336.752 C-7298.2939 7337.4492 -7296.9033 7338.0557 -7296.3057 7337.6143 C-7296.6133 7337.5566 -7296.7495 7337.5254 -7296.8638 7337.2637 C-7296.8892 7336.6074 -7296.0679 7336.4336 -7295.6528 7337.0176 C-7295.4966 7337.7021 -7295.7676 7338.2529 -7296.2939 7338.8105 c-7296.5068 7339.0361 -7296.7837 7339.1689 -7297.0566 7339.3545 c-7297.4199 7339.6016 -7297.7495 7339.8828 -7298.1118 7340.0332 c-7298.4385 7340.1689 -7298.8115 7340.2012 -7299.1445 7340.2891 c-7299.2349 7340.3105 -7299.2969 7340.3613 -7299.3706 7340.3789 c-7299.6274 7340.4336 -7299.8359 7340.5146 -7300.0879 7340.5469 c-7300.4209 7340.585 -7300.7739 7340.5488 -7301.1528 7340.585 c-7301.3398 7340.6055 -7301.5195 7340.6953 -7301.7144 7340.7109 c-7301.8413 7340.7207 -7301.9722 7340.7207 -7302.1025 7340.7227 C-7304.8135 7339.8213 -7307.0957 7338.6094 -7308.9814 7336.2793 c-7312.6704 7331.7227 -7307.0415 7327.5566 -7305.9902 7331.5977 C-7307.9668 7333.0361 -7311.5874 7336.1201 -7303.8892 7336.2471 C-7295.6045 7334.7549 -7302.6982 7319.4922 -7312.6509 7323.5576 c-7321.0151 7326.9746 -7317.1328 7335.6387 -7311.4658 7339.293 c-7302.9902 7344.7559 -7293.5376 7345.4922 -7283.7012 7345.584 C-7294.3862 7350.0488 -7308.9243 7347.4033 -7316.9897 7339.3809 c-7321.1011 7335.293 -7325.0435 7328.9912 -7323.8193 7322.8896 c-7322.5742 7316.6816 -7316.1616 7322.4238 -7321.0957 7322.4424 C-7320.8896 7328.0059 -7307.6387 7321.9648 -7313.9307 7313.8281 c-7319.6011 7306.4922 -7329.5698 7314.5225 -7331.3242 7320.9482 c-7337.0239 7341.8359 -7307.3545 7347.7129 -7293.3813 7348.4238 C-7305.1143 7351.7754 -7321.3892 7349.2734 -7332.5547 7344.7852 c-7336.9663 7343.0098 -7341.9707 7339.8926 -7344.5479 7335.7773 c-7348.4619 7329.5264 -7341.4268 7325.2842 -7340.8955 7327.4033 c-7340.4697 7329.0957 -7346.3765 7329.623 -7341.8267 7332.6992 c-7337.8091 7335.418 -7334.2759 7329.209 -7333.4619 7326.0781 c-7329.6782 7311.5322 -7351.0601 7313.4609 -7353.3667 7327.1982 c-7358.5103 7357.8271 -7312.3071 7351.457 -7296.4902 7350.5928 C-7296.7124 7350.7617 -7296.9331 7350.9189 -7297.1543 7351.082 C-7302.4346 7352.585 -7307.6416 7354.7861 -7312.46 7357.5469 C-7326.9546 7359.2813 -7339.7495 7348.8906 -7355.5913 7343.6152 c-7364.5635 7340.6289 -7375.0933 7344.9277 -7383.2778 7340.3145 c-7387.6235 7337.8545 -7390.6982 7335.2656 -7392.2959 7330.0518 C-7393.9092 7321.1104 -7384.2979 7319.9717 -7386.1396 7324.6416 C-7387.8428 7324.9688 -7387.1772 7323.834 -7388.3354 7323.8418 C-7392.2861 7327.5479 -7384.0244 7332.7314 -7380.1606 7329.4316 c-7373.4497 7323.7031 -7378.2563 7315.332 -7385.0864 7313.0557 C-7403.5703 7313.25 -7404 7335.8613 -7398.0474 7348.3594 c-7382.2217 7381.585 -7348.1445 7369.582 -7320.5376 7362.5479 C-7324.2817 7365.0732 -7326.8975 7368.6426 -7329.5747 7372.2158 c-7334.2197 7378.416 -7336.6694 7387.8545 -7328.0024 7391.8613 C-7327.1616 7395.9834 -7325.6392 7399.8857 -7321.5669 7401.7695 c-7316.7471 7404 -7311.8457 7401.5586 -7310.5508 7396.4512 C-7310.4766 7393.6729 -7311.1968 7391.8262 -7313.5938 7390.3887 c-7315.1733 7389.4414 -7320.5176 7389.5313 -7317.8574 7392.5342 C-7315.9663 7391.041 -7316.1323 7393.4873 -7317.0112 7394.6006 C-7319.8823 7394.5693 -7320.5771 7392.4873 -7320.5156 7389.5186 c-7320.5151 7389.4961 -7320.5142 7389.4697 -7320.5146 7389.4434 C-7320.3574 7382.1367 -7319.1343 7376.3242 -7317.0718 7371.7285 C-7317.0713 7371.7305 -7317.0708 7371.7314 -7317.0698 7371.7324 c-7316.8242 7372.2158 -7316.4819 7372.5 -7316.2485 7372.8945 c-7316.1729 7373.0234 -7316.2495 7373.1387 -7316.1753 7373.2334 c-7315.8262 7373.6855 -7314.9971 7374.3701 -7314.5313 7374.7402 c-7314.3135 7374.9121 -7314.0835 7374.998 -7313.8477 7375.1729 c-7313.8125 7375.1973 -7313.8613 7375.3105 -7313.8115 7375.3418 c-7312.7256 7376.0176 -7311.3638 7376.4277 -7309.7661 7376.6709 C-7309.6699 7376.6816 -7309.6978 7376.543 -7309.5669 7376.5938 C-7309.1035 7376.6406 -7308.6309 7376.6738 -7308.1982 7376.6387 c-7305.8862 7376.4453 -7303.4316 7375.084 -7302.2129 7373.4668 c-7301.0942 7371.9854 -7300.7095 7369.4854 -7301.3379 7367.7646 c-7301.8774 7366.2949 -7303.4629 7364.9697 -7305.5684 7364.3906 c-7307.4419 7363.873 -7309.4492 7364.084 -7310.3408 7365.3477 C-7309.6875 7365.3535 -7309.1406 7365.4941 -7308.8545 7365.8477 C-7308.7178 7366.2422 -7308.5859 7366.6387 -7308.7539 7367.2266 C-7309.2002 7367.9541 -7310.0469 7368.5898 -7311.2178 7368.2129 c-7312.4604 7367.8135 -7313.2119 7366.5781 -7313.0532 7365.3486 C-7307.7505 7359.2031 -7300.0386 7356.6465 -7291.2539 7356.0537 C-7291.2886 7356.0684 -7291.3218 7356.0801 -7291.3604 7356.0977 c-7292.5015 7356.6064 -7293.3027 7357.1143 -7294.2437 7357.7832 c-7294.5957 7358.0332 -7295.0439 7358.1914 -7295.3428 7358.4316 c-7295.4492 7358.5166 -7295.4766 7358.7227 -7295.5913 7358.8301 c-7295.9707 7359.1895 -7296.3975 7359.4688 -7296.7563 7359.9063 c-7297.8945 7361.2891 -7298.8662 7363.4346 -7298.3809 7365.6016 C-7297.6523 7367.0234 -7296.6162 7368.2441 -7294.4995 7368.8145 c-7294.2788 7368.875 -7294.0542 7368.8633 -7293.8276 7368.918 C-7290.8613 7369.0537 -7288.8369 7366.7021 -7289.3667 7363.875 C-7289.5781 7363.6738 -7289.7471 7363.4434 -7289.8184 7363.1514 C-7290.6582 7362.3105 -7292.9336 7362.0508 -7293.5996 7362.9521 C-7293.1309 7362.9004 -7292.9199 7362.8848 -7292.6387 7363.2109 C-7292.3105 7364.1475 -7293.4189 7364.7617 -7294.2759 7364.1045 C-7294.8052 7363.1865 -7294.6587 7362.2695 -7294.1479 7361.2314 c-7293.9409 7360.8105 -7293.5991 7360.5 -7293.2881 7360.1104 c-7292.8735 7359.5938 -7292.5239 7359.041 -7292.0669 7358.6621 c-7291.6563 7358.3232 -7291.1318 7358.1094 -7290.6899 7357.8369 c-7290.5708 7357.7646 -7290.5039 7357.6641 -7290.4043 7357.6074 c-7290.0596 7357.4121 -7289.7935 7357.2031 -7289.4438 7357.0469 c-7288.9819 7356.8418 -7288.4561 7356.7373 -7287.9253 7356.5146 c-7287.6636 7356.4063 -7287.4443 7356.1953 -7287.1709 7356.085 c-7287.0063 7356.0215 -7286.8311 7355.9688 -7286.6592 7355.9141 C-7285.2695 7355.918 -7283.8613 7355.957 -7282.4375 7356.0342 c-7280.7285 7356.0801 -7278.4653 7356.0938 -7276.5728 7356.166 C-7244.4688 7352.6533 -7211.98 7351.7305 -7179.4746 7351.2822 C-7106.0664 7352.6152 -7015.8774 7354.248 -7014.3535 7354.248 c-7011.7773 7354.248 -7009.6909 7352.1602 -7009.6909 7349.584 c-7009.6909 7347.0078 -7011.7773 7344.9209 -7014.3535 7344.9209 cfU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Chalk - Scribble/ A) -(dobe ArtOnPath Brush Tool/ Floral Stem/ Adobe PatternOnPath Br) -(ush Tool/ Decorative Border/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Chalk - Scribble)(1 / Unnamed 3/ / / / / 5 0 0 0 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Floral Stem)(1 / Unnamed Brush Pat 40/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Decorative Border)(1 / New Pattern 1/ / New Pattern 2/ / / 5 0 0.00392157 0.00392) -(157 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 k(White)Pc0 0 0 1 k(Black)Pc0 1 1 0 k(CMYK Red)Pc0 0 1 0 k(CMYK Yellow)Pc1 0 1 0 k(CMYK Green)Pc1 0 0 0 k(CMYK Cyan)Pc1 1 0 0 k(CMYK Blue)Pc0 1 0 0 k(CMYK Magenta)Pc0.15 1 0.9 0.1 k(C=15 M=100 Y=90 K=10)Pc0 0.9 0.85 0 k(C=0 M=90 Y=85 K=0)Pc0 0.8 0.95 0 k(C=0 M=80 Y=95 K=0)Pc0 0.5 1 0 k(C=0 M=50 Y=100 K=0)Pc0 0.35 0.85 0 k(C=0 M=35 Y=85 K=0)Pc0.05 0 0.9 0 k(C=5 M=0 Y=90 K=0)Pc0.2 0 1 0 k(C=20 M=0 Y=100 K=0)Pc0.5 0 1 0 k(C=50 M=0 Y=100 K=0)Pc0.75 0 1 0 k(C=75 M=0 Y=100 K=0)Pc0.85 0.1 1 0.1 k(C=85 M=10 Y=100 K=10)Pc0.9 0.3 0.95 0.3 k(C=90 M=30 Y=95 K=30)Pc0.75 0 0.75 0 k(C=75 M=0 Y=75 K=0)Pc0.8 0.1 0.45 0 k(C=80 M=10 Y=45 K=0)Pc0.7 0.15 0 0 k(C=70 M=15 Y=0 K=0)Pc0.85 0.5 0 0 k(C=85 M=50 Y=0 K=0)Pc1 0.95 0.05 0 k(C=100 M=95 Y=5 K=0)Pc1 1 0.25 0.25 k(C=100 M=100 Y=25 K=25)Pc0.75 1 0 0 k(C=75 M=100 Y=0 K=0)Pc0.5 1 0 0 k(C=50 M=100 Y=0 K=0)Pc0.35 1 0.35 0.1 k(C=35 M=100 Y=35 K=10)Pc0.1 1 0.5 0 k(C=10 M=100 Y=50 K=0)Pc0 0.95 0.2 0 k(C=0 M=95 Y=20 K=0)Pc0.25 0.25 0.4 0 k(C=25 M=25 Y=40 K=0)Pc0.4 0.45 0.5 0.05 k(C=40 M=45 Y=50 K=5)Pc0.5 0.5 0.6 0.25 k(C=50 M=50 Y=60 K=25)Pc0.55 0.6 0.65 0.4 k(C=55 M=60 Y=65 K=40)Pc0.25 0.4 0.65 0 k(C=25 M=40 Y=65 K=0)Pc0.3 0.5 0.75 0.1 k(C=30 M=50 Y=75 K=10)Pc0.35 0.6 0.8 0.25 k(C=35 M=60 Y=80 K=25)Pc0.4 0.65 0.9 0.35 k(C=40 M=65 Y=90 K=35)Pc0.4 0.7 1 0.5 k(C=40 M=70 Y=100 K=50)Pc0.5 0.7 0.8 0.7 k(C=50 M=70 Y=80 K=70)PcBb2 (Fade to Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade to Black)PcBb0 0 0 0 Bh2 (Super Soft Black Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Super Soft Black Vignette)PcBb2 (Green, Yellow, Orange) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Green, Yellow, Orange)PcBb0 0 0 0 Bh2 (Purple Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Purple Radial)Pc(Laguna) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Laguna)Pc0 0 0 1 k(C=0 M=0 Y=0 K=100)Pc0 0 0 0.899994 k(C=0 M=0 Y=0 K=90)Pc0 0 0 0.799988 k(C=0 M=0 Y=0 K=80)Pc0 0 0 0.699997 k(C=0 M=0 Y=0 K=70)Pc0 0 0 0.599991 k(C=0 M=0 Y=0 K=60)Pc0 0 0 0.5 k(C=0 M=0 Y=0 K=50)Pc0 0 0 0.399994 k(C=0 M=0 Y=0 K=40)Pc0 0 0 0.299988 k(C=0 M=0 Y=0 K=30)Pc0 0 0 0.199997 k(C=0 M=0 Y=0 K=20)Pc0 0 0 0.099991 k(C=0 M=0 Y=0 K=10)Pc0 0 0 0.049988 k(C=0 M=0 Y=0 K=5)Pc0 1 1 0 k(C=0 M=100 Y=100 K=0)Pc0 0.75 1 0 k(C=0 M=75 Y=100 K=0)Pc0 0.1 0.95 0 k(C=0 M=10 Y=95 K=0)Pc0.85 0.1 1 0 k(C=85 M=10 Y=100 K=0)Pc1 0.9 0 0 k(C=100 M=90 Y=0 K=0)Pc0.6 0.9 0.000031 0.000031 k(C=60 M=90 Y=0 K=0)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 ALB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 1 255 79 79 0 50 Lb(Layer 2) Ln0 Au1 Ap0 O0 0 0 0 k0 R0 0 0 1 K0 J 0 j 1 w 10 M []0 d0 XR1563.2305 -778.0371 m1563.2305 -1206.7422 1215.6963 -1554.2764 786.9912 -1554.2764 c358.2861 -1554.2764 10.752 -1206.7422 10.752 -778.0371 c10.752 -349.332 358.2861 -1.79785 786.9912 -1.79785 c1215.6963 -1.79785 1563.2305 -349.332 1563.2305 -778.0371 cb1 g1 XR1117.7383 -778.0371 m1117.7383 -960.7031 969.6582 -1108.7832 786.9922 -1108.7832 c604.3252 -1108.7832 456.2451 -960.7031 456.2451 -778.0371 c456.2451 -595.3701 604.3252 -447.29 786.9922 -447.29 c969.6582 -447.29 1117.7383 -595.3701 1117.7383 -778.0371 cbu0 0 0 0 k0 XR771.1992 -169.9517 m686.0332 -177.4224 L678.5625 -92.2563 L763.7285 -84.7856 L771.1992 -169.9517 Lb/BBAccumRotation (0.087493) XT336.0664 -352.4302 m278.0645 -415.2383 L215.2568 -357.2358 L273.2598 -294.4282 L336.0664 -352.4302 Lb/BBAccumRotation (0.825149) XT421.1758 -1259.8125 m363.1738 -1322.6191 L300.3662 -1264.6172 L358.3691 -1201.8105 L421.1758 -1259.8125 Lb/BBAccumRotation (0.825149) XT1467.0889 -685.5024 m1474.4824 -770.6743 L1389.3105 -778.0693 L1381.917 -692.896 L1467.0889 -685.5024 Lb/BBAccumRotation (1.657391) XT864.6768 -1390.7207 m872.0703 -1475.8926 L786.8984 -1483.2871 L779.5049 -1398.1133 L864.6768 -1390.7207 Lb/BBAccumRotation (1.657391) XTUULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF